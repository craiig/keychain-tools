{
    "total_origin_stats": {
        "tce": {
            "total_programs": 11, 
            "total_variants": 43
        }, 
        "tpcds_survey": {
            "total_programs": 7, 
            "total_variants": 21
        }, 
        "semantics preserving transformations": {
            "total_programs": 1, 
            "total_variants": 4
        }, 
        "compiler_survey": {
            "total_programs": 41, 
            "total_variants": 92
        }, 
        "craig": {
            "total_programs": 3, 
            "total_variants": 10
        }
    }, 
    "programs": [
        {
            "origin": "tpcds_survey", 
            "name": "constant_folding_basic", 
            "program_hashes": {
                "clang_-O3": [
                    "09cd826dc276ac0ab726433f0310085ddf270cb1f43e07a3cc7f87a5d295cee5", 
                    "09cd826dc276ac0ab726433f0310085ddf270cb1f43e07a3cc7f87a5d295cee5", 
                    "09cd826dc276ac0ab726433f0310085ddf270cb1f43e07a3cc7f87a5d295cee5", 
                    "09cd826dc276ac0ab726433f0310085ddf270cb1f43e07a3cc7f87a5d295cee5", 
                    "09cd826dc276ac0ab726433f0310085ddf270cb1f43e07a3cc7f87a5d295cee5"
                ], 
                "clang_-O0": [
                    "b46be86b2d395772b167d15f8da34e198a28dcf37ceb9a6e35d0dcf9532c466f", 
                    "b46be86b2d395772b167d15f8da34e198a28dcf37ceb9a6e35d0dcf9532c466f", 
                    "b46be86b2d395772b167d15f8da34e198a28dcf37ceb9a6e35d0dcf9532c466f", 
                    "b46be86b2d395772b167d15f8da34e198a28dcf37ceb9a6e35d0dcf9532c466f", 
                    "b46be86b2d395772b167d15f8da34e198a28dcf37ceb9a6e35d0dcf9532c466f"
                ], 
                "gcc49_-O0": [
                    "9b6286e2fab42e5cd194736de60aecfa471e30ab21157f06d031d190d2bb5aa6", 
                    "9b6286e2fab42e5cd194736de60aecfa471e30ab21157f06d031d190d2bb5aa6", 
                    "9b6286e2fab42e5cd194736de60aecfa471e30ab21157f06d031d190d2bb5aa6", 
                    "9b6286e2fab42e5cd194736de60aecfa471e30ab21157f06d031d190d2bb5aa6", 
                    "9b6286e2fab42e5cd194736de60aecfa471e30ab21157f06d031d190d2bb5aa6"
                ], 
                "scala2.11.11": [
                    "bc:1TCW4jkimjZPrA_zJiJ6zA_xtCb1ZXxOuxANeOq--iM_pr:none", 
                    "bc:1TCW4jkimjZPrA_zJiJ6zA_xtCb1ZXxOuxANeOq--iM_pr:none", 
                    "bc:1TCW4jkimjZPrA_zJiJ6zA_xtCb1ZXxOuxANeOq--iM_pr:none", 
                    "bc:1TCW4jkimjZPrA_zJiJ6zA_xtCb1ZXxOuxANeOq--iM_pr:none", 
                    "bc:1TCW4jkimjZPrA_zJiJ6zA_xtCb1ZXxOuxANeOq--iM_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:-pjCpfXfv6m9XS5OLRed43yhpJz7mJ1VH7TG-f3_kus_pr:none", 
                    "bc:-pjCpfXfv6m9XS5OLRed43yhpJz7mJ1VH7TG-f3_kus_pr:none", 
                    "bc:-pjCpfXfv6m9XS5OLRed43yhpJz7mJ1VH7TG-f3_kus_pr:none", 
                    "bc:-pjCpfXfv6m9XS5OLRed43yhpJz7mJ1VH7TG-f3_kus_pr:none", 
                    "bc:-pjCpfXfv6m9XS5OLRed43yhpJz7mJ1VH7TG-f3_kus_pr:none"
                ], 
                "gcc49_-O3": [
                    "707a8651ad7d67bd9cb39e85e5813e6278fda3e7c44126dc3883d3436e9dff35", 
                    "707a8651ad7d67bd9cb39e85e5813e6278fda3e7c44126dc3883d3436e9dff35", 
                    "707a8651ad7d67bd9cb39e85e5813e6278fda3e7c44126dc3883d3436e9dff35", 
                    "707a8651ad7d67bd9cb39e85e5813e6278fda3e7c44126dc3883d3436e9dff35", 
                    "707a8651ad7d67bd9cb39e85e5813e6278fda3e7c44126dc3883d3436e9dff35"
                ]
            }, 
            "input_types": [
                "int"
            ], 
            "return_type": "boolean", 
            "variants": [
                {
                    "code": "input0 == 10", 
                    "_idx": 0
                }, 
                {
                    "code": "input0 == 1+1+8", 
                    "_idx": 1
                }, 
                {
                    "code": "input0 == 8+1+1", 
                    "_idx": 2
                }, 
                {
                    "code": "input0 == 2*5", 
                    "_idx": 3
                }, 
                {
                    "code": "input0 == 5*2", 
                    "_idx": 4
                }
            ]
        }, 
        {
            "origin": "craig", 
            "name": "constant_folding_associativity", 
            "program_hashes": {
                "clang_-O3": [
                    "c3a14bec7caccad65edd12592374955f5276a1859533863a96dbebe106435278", 
                    "c3a14bec7caccad65edd12592374955f5276a1859533863a96dbebe106435278", 
                    "c3a14bec7caccad65edd12592374955f5276a1859533863a96dbebe106435278", 
                    "c3a14bec7caccad65edd12592374955f5276a1859533863a96dbebe106435278", 
                    "c3a14bec7caccad65edd12592374955f5276a1859533863a96dbebe106435278", 
                    "c3a14bec7caccad65edd12592374955f5276a1859533863a96dbebe106435278"
                ], 
                "clang_-O0": [
                    "9d9ef79bf3cf4535ef6b6ac0d8d71de6cb00855d7823248fab5941f1f185878e", 
                    "917dcc2d75c4f455f2438ff965a3cc5d4a79ef7d2f878f03f15c5575745f02e4", 
                    "9d9ef79bf3cf4535ef6b6ac0d8d71de6cb00855d7823248fab5941f1f185878e", 
                    "9d9ef79bf3cf4535ef6b6ac0d8d71de6cb00855d7823248fab5941f1f185878e", 
                    "9d9ef79bf3cf4535ef6b6ac0d8d71de6cb00855d7823248fab5941f1f185878e", 
                    "9d9ef79bf3cf4535ef6b6ac0d8d71de6cb00855d7823248fab5941f1f185878e"
                ], 
                "gcc49_-O0": [
                    "cff301b7b85a70dc58aa0bd13a084774e4a3f0a39a5beef1175fc4d779957bbc", 
                    "cff301b7b85a70dc58aa0bd13a084774e4a3f0a39a5beef1175fc4d779957bbc", 
                    "cff301b7b85a70dc58aa0bd13a084774e4a3f0a39a5beef1175fc4d779957bbc", 
                    "cff301b7b85a70dc58aa0bd13a084774e4a3f0a39a5beef1175fc4d779957bbc", 
                    "cff301b7b85a70dc58aa0bd13a084774e4a3f0a39a5beef1175fc4d779957bbc", 
                    "cff301b7b85a70dc58aa0bd13a084774e4a3f0a39a5beef1175fc4d779957bbc"
                ], 
                "scala2.11.11": [
                    "bc:sGEk6--PW7XJqDcMmsgITShAUwDYlZS6uTxeNp4lsQ4_pr:none", 
                    "bc:QPSh1oIq6Eny39kDIvHgit3_8Y_sjMN3x2nqmmO7lpA_pr:none", 
                    "bc:sGEk6--PW7XJqDcMmsgITShAUwDYlZS6uTxeNp4lsQ4_pr:none", 
                    "bc:cNC_A3ZnbRLqAGvvk0siC-HVFzzt0TNLdWOmTYvi5wc_pr:none", 
                    "bc:cNC_A3ZnbRLqAGvvk0siC-HVFzzt0TNLdWOmTYvi5wc_pr:none", 
                    "bc:cNC_A3ZnbRLqAGvvk0siC-HVFzzt0TNLdWOmTYvi5wc_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:AfZ_TQ1ao_nszU3DdmcD-ZTXrbmTOBgPicxDXc4LTNI_pr:none", 
                    "bc:Cf82njPq1nrVtfrYpzz8z8z3dzmY4pF36eI11_oKdWk_pr:none", 
                    "bc:AfZ_TQ1ao_nszU3DdmcD-ZTXrbmTOBgPicxDXc4LTNI_pr:none", 
                    "bc:CV9kLkkFaCDdeCwdPJm-DWQhPjxoKdspsYinfymklfY_pr:none", 
                    "bc:CV9kLkkFaCDdeCwdPJm-DWQhPjxoKdspsYinfymklfY_pr:none", 
                    "bc:CV9kLkkFaCDdeCwdPJm-DWQhPjxoKdspsYinfymklfY_pr:none"
                ], 
                "gcc49_-O3": [
                    "de0b696d2237c08f88a4a8171c03989bce9ecb9c36585388524a16da20e7aa8d", 
                    "de0b696d2237c08f88a4a8171c03989bce9ecb9c36585388524a16da20e7aa8d", 
                    "de0b696d2237c08f88a4a8171c03989bce9ecb9c36585388524a16da20e7aa8d", 
                    "de0b696d2237c08f88a4a8171c03989bce9ecb9c36585388524a16da20e7aa8d", 
                    "de0b696d2237c08f88a4a8171c03989bce9ecb9c36585388524a16da20e7aa8d", 
                    "de0b696d2237c08f88a4a8171c03989bce9ecb9c36585388524a16da20e7aa8d"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "boolean", 
            "variants": [
                {
                    "code": "input0 == input1+2", 
                    "_idx": 0
                }, 
                {
                    "code": "input0 == input1+1+1", 
                    "_idx": 1
                }, 
                {
                    "code": "input0 == input1+(1+1)", 
                    "_idx": 2
                }, 
                {
                    "code": "input0 == 1+1+input1", 
                    "_idx": 3
                }, 
                {
                    "code": "input0 == (1+1)+input1", 
                    "_idx": 4
                }, 
                {
                    "code": "input0 == 2+input1", 
                    "_idx": 5
                }
            ]
        }, 
        {
            "origin": "craig", 
            "return": "", 
            "name": "implicit_zero_comparison", 
            "program_hashes": {
                "clang_-O3": [
                    "3fe86c59f6eca2da01fb6d5850c301160b37261b26bf603ae022e4aaeb55ad68", 
                    "3fe86c59f6eca2da01fb6d5850c301160b37261b26bf603ae022e4aaeb55ad68"
                ], 
                "clang_-O0": [
                    "5d3f04589573bac414cc8568a63331499543f5981c8a54da5162b0d59ede2d96", 
                    "5d3f04589573bac414cc8568a63331499543f5981c8a54da5162b0d59ede2d96"
                ], 
                "gcc49_-O0": [
                    "4994eada5b7dce5ce2b61f6fdfc9b768ab3090feaad1ea8b34c3963f05881569", 
                    "4994eada5b7dce5ce2b61f6fdfc9b768ab3090feaad1ea8b34c3963f05881569"
                ], 
                "scala2.11.11": [
                    "bc:ZTyxZI5lfWKpiQLtXdEpts8CYvCLWL4QJckpBsuj5rQ_pr:none", 
                    "bc:ZTyxZI5lfWKpiQLtXdEpts8CYvCLWL4QJckpBsuj5rQ_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:eIsx-vwD-VyqxPj_p49VBG6j9oq_MhymqfbB_qVCufA_pr:none", 
                    "bc:eIsx-vwD-VyqxPj_p49VBG6j9oq_MhymqfbB_qVCufA_pr:none"
                ], 
                "gcc49_-O3": [
                    "9e980c04e9310fc639a45b0c478ec00d2409de644943c28d71266fcd63fd2329", 
                    "9e980c04e9310fc639a45b0c478ec00d2409de644943c28d71266fcd63fd2329"
                ]
            }, 
            "note": "java implicitly passes this", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "c_code": "if(input0){ return 1; } else { return 0; }", 
                    "scala_code": "if(input0 != 0){ return 1; } else { return 0; }", 
                    "java_code": "if(input0 != 0){ return 1; } else { return 0; }"
                }, 
                {
                    "code": "if(input0 != 0){ return 1; } else { return 0; }", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "craig", 
            "return": "", 
            "name": "pointer_deref_equivalence", 
            "program_hashes": {
                "clang_-O3": [
                    "11d5f7afe4963fb7a95c47e11e875ebc258fcd518390ff50d085700a172b59e5", 
                    "11d5f7afe4963fb7a95c47e11e875ebc258fcd518390ff50d085700a172b59e5"
                ], 
                "clang_-O0": [
                    "77551d3bf18f154d039e5a0bac8b4b9fdfbd0d1930951b2bd099ad07fcb1d7f9", 
                    "77551d3bf18f154d039e5a0bac8b4b9fdfbd0d1930951b2bd099ad07fcb1d7f9"
                ], 
                "gcc49_-O0": [
                    "403b7d3f7e1f7b6ae23544ab2849195ea8596f52c04a30023e4d4fb845a97424", 
                    "403b7d3f7e1f7b6ae23544ab2849195ea8596f52c04a30023e4d4fb845a97424"
                ], 
                "scala2.11.11": [
                    "bc:zEE8QUmxU5eH-dkeZbHCfWyqUXRkN2PC5eXGYIjQRsE_pr:none", 
                    "bc:zEE8QUmxU5eH-dkeZbHCfWyqUXRkN2PC5eXGYIjQRsE_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:JzyaTBNl4V-twqba4QnOX8dOEmHRo68UGQYfjeiJFrc_pr:none", 
                    "bc:JzyaTBNl4V-twqba4QnOX8dOEmHRo68UGQYfjeiJFrc_pr:none"
                ], 
                "gcc49_-O3": [
                    "75cb0c86a6cdbed7caef7186b1a917e8e59f8d0b8761925b9290be916acc212d", 
                    "75cb0c86a6cdbed7caef7186b1a917e8e59f8d0b8761925b9290be916acc212d"
                ]
            }, 
            "note": "everything should pass this", 
            "input_types": [
                "int*"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "c_code": "return *input0;", 
                    "scala_code": "return input0(0);", 
                    "java_code": "return input0[0];"
                }, 
                {
                    "code": "return input0[0];", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "tpcds_survey", 
            "name": "comparison", 
            "program_hashes": {
                "clang_-O3": [
                    "6436c28e81b3c8a636026879ae9a7b39673fb0c2ba6f185c374eb3fe202cd1ad", 
                    "6436c28e81b3c8a636026879ae9a7b39673fb0c2ba6f185c374eb3fe202cd1ad"
                ], 
                "clang_-O0": [
                    "e8bbe61ed8007b904a971f1925745efe12a82776e5f21e14328f809540f03ead", 
                    "d6b84f10b9fa1a43b4d95b5797c33821ee3166a6ef01c6baa253a767373a8406"
                ], 
                "gcc49_-O0": [
                    "53e01cbe2cb7024bc195dda65c9266e9cd11a22773c562b95e871649a2c904e7", 
                    "53e01cbe2cb7024bc195dda65c9266e9cd11a22773c562b95e871649a2c904e7"
                ], 
                "scala2.11.11": [
                    "bc:1TCW4jkimjZPrA_zJiJ6zA_xtCb1ZXxOuxANeOq--iM_pr:none", 
                    "bc:R9ism2kt3zpq1L0TZa7eaJkwDK46t9-DsM376RK5iQ4_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:-pjCpfXfv6m9XS5OLRed43yhpJz7mJ1VH7TG-f3_kus_pr:none", 
                    "bc:1nfE77FHgTnvHnqFSMGSuWg7PoOqeq_iXYIee9AbyIo_pr:none"
                ], 
                "gcc49_-O3": [
                    "667252a51273b58399bf7f007bc5e5656b2b8c626283251fed6c49d78a965152", 
                    "667252a51273b58399bf7f007bc5e5656b2b8c626283251fed6c49d78a965152"
                ]
            }, 
            "input_types": [
                "int"
            ], 
            "return_type": "boolean", 
            "variants": [
                {
                    "code": "input0 == 10", 
                    "_idx": 0
                }, 
                {
                    "code": "10 == input0", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "tpcds_survey", 
            "return": "", 
            "name": "conditional", 
            "program_hashes": {
                "clang_-O3": [
                    "1a63beeaf6bf63f4123b3ca7fe62e154170ffbd7960b823b052559fb6cb78915", 
                    "1a63beeaf6bf63f4123b3ca7fe62e154170ffbd7960b823b052559fb6cb78915"
                ], 
                "clang_-O0": [
                    "10b92e32376930136da2ba3b68b1c8ec150e56b0f2b6aaa3e704f123d2d5c3ca", 
                    "29ba72a76ffcfed455db50bbcb696c1a8f57fecbaa7a379941753df17239d1a8"
                ], 
                "gcc49_-O0": [
                    "d6eb36964404e0feaa7c89f265cebc73f9114a66a7b9a06a2dbc83728e6ed713", 
                    "43fab78f90f1b17c2037f550e1a99ffc9f4513d5b4dba00a97835ec991555a08"
                ], 
                "scala2.11.11": [
                    "bc:QUHr5Yyi-83QZNvgQ82jN3YR1DrkKZD4TRvET3nvGME_pr:none", 
                    "bc:gGcOOz5Fs9d6Ivv8bD9ckP_J6201Tor2eVbCMFeh8JQ_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:Nv2lF_8ikMg7x3TZ7bLwsS8UMNG8c3uVXBdbfxi0REw_pr:none", 
                    "bc:PkQfQmsDLyIzqEXVztr9FZ7e4tKegVHhdgYubpT2yO0_pr:none"
                ], 
                "gcc49_-O3": [
                    "94b4ba3213bcfd7020f1c70921c90610707b406548e1be86cd561a2341a1e33f", 
                    "94b4ba3213bcfd7020f1c70921c90610707b406548e1be86cd561a2341a1e33f"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "if( input0 == 10 ){ return input1; } else { return 100; }", 
                    "_idx": 0
                }, 
                {
                    "code": "if( input0 != 10 ){ return 100; } else { return input1; }", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "tpcds_survey", 
            "name": "logical_op", 
            "program_hashes": {
                "clang_-O3": [
                    "a5377ebc7425f788a1ba0453f27050f1f4a2799280673f7ddc978492365ea524", 
                    "a5377ebc7425f788a1ba0453f27050f1f4a2799280673f7ddc978492365ea524", 
                    "1cfde175b88dba6808732b92cdcb7695e9cf8eab2b18cdd4bd025fffc5f6fda6", 
                    "a5377ebc7425f788a1ba0453f27050f1f4a2799280673f7ddc978492365ea524"
                ], 
                "clang_-O0": [
                    "eff1946ede938b190b428dcb7b4250f21785fc1398ec656ea3a71b2b3715584f", 
                    "3b849f9c6097d456f573918a4366221a667d09663be3a50c0861a041dc0f0e15", 
                    "eff1946ede938b190b428dcb7b4250f21785fc1398ec656ea3a71b2b3715584f", 
                    "c4fd651e3f6e3e963e28fde405909e1d481b82f839e078acdad230922446c549"
                ], 
                "gcc49_-O0": [
                    "e1a45b904a6bf9e58bf2c53b3ab607105e86405c138e1a781676d441c3a029b7", 
                    "e1a45b904a6bf9e58bf2c53b3ab607105e86405c138e1a781676d441c3a029b7", 
                    "e1a45b904a6bf9e58bf2c53b3ab607105e86405c138e1a781676d441c3a029b7", 
                    "e1a45b904a6bf9e58bf2c53b3ab607105e86405c138e1a781676d441c3a029b7"
                ], 
                "scala2.11.11": [
                    "bc:GAKCW85YEOYt_2VguUHCM9k75bJL8l3pF9EzpnYevws_pr:none", 
                    "bc:afXjJvFeG-7kjmXCon-FSXhsoL_pflZHFKu6vh6zeTU_pr:none", 
                    "bc:GAKCW85YEOYt_2VguUHCM9k75bJL8l3pF9EzpnYevws_pr:none", 
                    "bc:GAKCW85YEOYt_2VguUHCM9k75bJL8l3pF9EzpnYevws_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:53ccUv1BWEfdzuFu7iX_gnnP3kdDjA_4zODvEVTgywU_pr:none", 
                    "bc:53ccUv1BWEfdzuFu7iX_gnnP3kdDjA_4zODvEVTgywU_pr:none", 
                    "bc:53ccUv1BWEfdzuFu7iX_gnnP3kdDjA_4zODvEVTgywU_pr:none", 
                    "bc:53ccUv1BWEfdzuFu7iX_gnnP3kdDjA_4zODvEVTgywU_pr:none"
                ], 
                "gcc49_-O3": [
                    "aa5f363d173ae47adca7dcbb547ead67cae1b1bf0194020d6e72d5ee07860c3e", 
                    "aa5f363d173ae47adca7dcbb547ead67cae1b1bf0194020d6e72d5ee07860c3e", 
                    "aa5f363d173ae47adca7dcbb547ead67cae1b1bf0194020d6e72d5ee07860c3e", 
                    "aa5f363d173ae47adca7dcbb547ead67cae1b1bf0194020d6e72d5ee07860c3e"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "boolean", 
            "variants": [
                {
                    "code": "(input1 == 20) && (input0 == 10)", 
                    "_idx": 0
                }, 
                {
                    "code": "!((input1 != 20) || (input0 != 10))", 
                    "_idx": 1
                }, 
                {
                    "code": "(!(input1 != 20)) && (input0 == 10)", 
                    "_idx": 2
                }, 
                {
                    "code": "(input1 == 20) && (!(input0 != 10))", 
                    "_idx": 3
                }
            ]
        }, 
        {
            "origin": "tpcds_survey", 
            "name": "logical_op_short_circuit", 
            "program_hashes": {
                "clang_-O3": [
                    "8804d2cb9ae3c0e7021235e976e7d190397fee2913029f72ba3512f626259bd5", 
                    "8804d2cb9ae3c0e7021235e976e7d190397fee2913029f72ba3512f626259bd5", 
                    "f6c2388e6c4efe37d7c1cb4de173f3e6cd10bfd10ed857e9fc5f51fac846e6c2", 
                    "f6c2388e6c4efe37d7c1cb4de173f3e6cd10bfd10ed857e9fc5f51fac846e6c2"
                ], 
                "clang_-O0": [
                    "a1deab3ec36c7319929542bf0eb0b5200ba92df4e074b2bd13f0b2a4906a365b", 
                    "644aaa6407f6df313313f2e879f15176501b5493d0d1ab22298f40f548cec4ea", 
                    "779798a9f380dde22ac77a8f0b3f837a820dc7b05c05552d1d1db4bc14ec4091", 
                    "3f9be7537d7a742f6911298230c071e37f3b1dd09d470ed09a8f52c5de7321eb"
                ], 
                "gcc49_-O0": [
                    "ebc854df7e276ce18f2b6a51108010191dac8f3e1adf4add2cd007dacdc8a8c6", 
                    "ebc854df7e276ce18f2b6a51108010191dac8f3e1adf4add2cd007dacdc8a8c6", 
                    "66d73fa9df1b43146ea6796acd7b714ba773a218d8415acaa290749a1d7bb1aa", 
                    "66d73fa9df1b43146ea6796acd7b714ba773a218d8415acaa290749a1d7bb1aa"
                ], 
                "scala2.11.11": [
                    "bc:wNO-t99OmMnt_y6YIO1ipy4Nl9BAbcJjW8wKpaGUMz4_pr:none", 
                    "bc:lTaLillscfNOQLQwsr3hLyTlZJom1IpfLM926B9TvFQ_pr:none", 
                    "bc:GAKCW85YEOYt_2VguUHCM9k75bJL8l3pF9EzpnYevws_pr:none", 
                    "bc:afXjJvFeG-7kjmXCon-FSXhsoL_pflZHFKu6vh6zeTU_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:5gDwPQZFgTpc0XlVyTRdmHAfH13klvGZJWpLvJICN2U_pr:none", 
                    "bc:5gDwPQZFgTpc0XlVyTRdmHAfH13klvGZJWpLvJICN2U_pr:none", 
                    "bc:53ccUv1BWEfdzuFu7iX_gnnP3kdDjA_4zODvEVTgywU_pr:none", 
                    "bc:53ccUv1BWEfdzuFu7iX_gnnP3kdDjA_4zODvEVTgywU_pr:none"
                ], 
                "gcc49_-O3": [
                    "89c0949a7c7ccb621ee670eb68cfcefe804ad51bc9333893b18980746c91be00", 
                    "89c0949a7c7ccb621ee670eb68cfcefe804ad51bc9333893b18980746c91be00", 
                    "c0c6e78c99c7e14c5f896e0fc4cd222c3e04eb8ac8f5a2d07ab69a7fe2561fdf", 
                    "c0c6e78c99c7e14c5f896e0fc4cd222c3e04eb8ac8f5a2d07ab69a7fe2561fdf"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "boolean", 
            "variants": [
                {
                    "code": "(input0 == 10) && (input1 == 20)", 
                    "_idx": 0
                }, 
                {
                    "code": "!((input0 != 10) || (input1 != 20))", 
                    "_idx": 1
                }, 
                {
                    "code": "(input1 == 20) && (input0 == 10)", 
                    "_idx": 2
                }, 
                {
                    "code": "!((input1 != 20) || (input0 != 10))", 
                    "_idx": 3
                }
            ]
        }, 
        {
            "origin": "tpcds_survey", 
            "name": "math_sub", 
            "program_hashes": {
                "clang_-O3": [
                    "f4f331987f4fb7da91dd87a31b64473ac3725e7688e4d9479fb9cc760dca8c3b", 
                    "f4f331987f4fb7da91dd87a31b64473ac3725e7688e4d9479fb9cc760dca8c3b"
                ], 
                "clang_-O0": [
                    "c05751cef9e3777629838af45eff1dfc7509ab0778bbad0057e8f34c4b12a331", 
                    "6d36926799331b867da68769b367d9f65093f929e2a5d3fa7cdf07035b26f562"
                ], 
                "gcc49_-O0": [
                    "a0583ef7ec8f84183fb1bb8322f501ee4089177f89b2b4a811e209d8ccf3940c", 
                    "a0583ef7ec8f84183fb1bb8322f501ee4089177f89b2b4a811e209d8ccf3940c"
                ], 
                "scala2.11.11": [
                    "bc:-nzvvLF70pqkOdNQnxapWXUo3etbcZ_9PmOWPmCp2c0_pr:none", 
                    "bc:1qiCZNZCm0G3EZr1OmBQ44KN3qnWD2syx1RjXNvlwKA_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:CyBTE7DTM-F1GGX2zBUvEsk0VFbbNDdci8MBxcRC8a8_pr:none", 
                    "bc:HkTG1YGmw2r7TVi1SVbK58mTIRfwKzkSBSX3J-U3QHw_pr:none"
                ], 
                "gcc49_-O3": [
                    "5e454d6e18ac382325b810d933c44c65004683f1af5ed900b6cd915f140e9b4d", 
                    "5e454d6e18ac382325b810d933c44c65004683f1af5ed900b6cd915f140e9b4d"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "input0 - input1", 
                    "_idx": 0
                }, 
                {
                    "code": "-1 * (input1 - input0)", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "tpcds_survey", 
            "name": "math_add", 
            "program_hashes": {
                "clang_-O3": [
                    "02cf54f667a61decf32e40d7487954d488d2e4f972ac4dfe6bf0267355a4a11c", 
                    "02cf54f667a61decf32e40d7487954d488d2e4f972ac4dfe6bf0267355a4a11c"
                ], 
                "clang_-O0": [
                    "0ccfc0f0ac058ae080de7daf56960f2c7e504bf5b684997f939c3348a44b879d", 
                    "e3fdfeedf6136e0e2a544caa9403725eeb6e16612d1ce55cba5b9fed6b008865"
                ], 
                "gcc49_-O0": [
                    "6378726204112d75ec60a87f3889e4117e70ff780b2c2134adef9e65cfbce69e", 
                    "3dfae0cde5093cf9fa25cf9031be2ea8d0ee44c7690742385054fc7dcef48807"
                ], 
                "scala2.11.11": [
                    "bc:fBgtl7mh6qNBe-npS-qSam6QPBmWpswipWPuS1XtcY0_pr:none", 
                    "bc:tznQNweKZAa0ZwzuGuPMFMc-totPYMGSYV-FmznCys0_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:uDy10A9YzsAWigYFcrkuY_r57mCc1rJfvFdHPokS5b4_pr:none", 
                    "bc:xvg7qIoSPdAC_l8UpF0qiuWKFTyqLWIA3hyMKbklAYs_pr:none"
                ], 
                "gcc49_-O3": [
                    "dc4dc8dbd37a06c46dd59dc81f88d79f8c429c043045df87cbc0d592a8cb1954", 
                    "dab8f275bb6b9ee615ab4d8a012c2f8cd78df3ef690ddc4dee75d9a3cc76e67d"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "input0 + input1", 
                    "_idx": 0
                }, 
                {
                    "code": "input1 + input0", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "function_inlining_trivial", 
            "notes": "TODO these ARE equivalent but we need to better parse the asm code to demonstrate that", 
            "program_hashes": {
                "clang_-O3": [
                    "5a9efc42c1b000ec4fc290ffa2fb1d34db48501707766813cb7475f2f05ba0a5", 
                    "afab7bf6b76887dfe37c70c3d157e39355403e455d67e952046e5d0d7c24d24e"
                ], 
                "clang_-O0": [
                    "d158948e272cdd6b580d4822d9415dfd9bb6bc9065828b8c94f7f5ee69edd821", 
                    "728733ccdab8491bfaf3a1f28c437dbeeb57772ec44502a21c95c13de18bae9e"
                ], 
                "gcc49_-O0": [
                    "185bcca77a6e06d1116a74bbd7bdcf0f85545829e759411e2c8535c177d82edd", 
                    "2faa2a75ed48507114f567f8f0924e97af1b62b64fe21093189cc600451cd804"
                ], 
                "scala2.11.11": [
                    "bc:fBgtl7mh6qNBe-npS-qSam6QPBmWpswipWPuS1XtcY0_pr:none", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "bc:uDy10A9YzsAWigYFcrkuY_r57mCc1rJfvFdHPokS5b4_pr:none", 
                    "bc:WxkSd98yMSVPM7dDpkoSbRE3zYp8PgmjL7DURFtAsFI_pr:none"
                ], 
                "gcc49_-O3": [
                    "222856927000d610f5bc76f11036a57d843fa4d03b66973a1aebed40d941e19d", 
                    "625876c3063b87e4cf0c8d2ed0f7e8b8d7b09b8ff6fcb4f0bfeb960833801fe2"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "variants": [
                {
                    "code": "input0 + input1", 
                    "_idx": 0
                }, 
                {
                    "java": "./benchmarks/function_inlining_1.java", 
                    "c": "./benchmarks/function_inlining_1.c", 
                    "_idx": 1, 
                    "type": "file"
                }
            ], 
            "return_type": "int"
        }, 
        {
            "origin": "compiler_survey", 
            "name": "function_inlining_partial", 
            "notes": "TODO hard to induce. TODO these ARE equivalent but we need to better parse the asm code to demonstrate that", 
            "program_hashes": {
                "clang_-O3": [
                    "d3215438d6f6b9d84ca3db909888094c80229fe4400e0236bfcbfc88c20f5aca", 
                    "54dcae98bc03720a3c04f41aee5009852e235230753fdb6ef2d09449cf8060a8", 
                    "54dcae98bc03720a3c04f41aee5009852e235230753fdb6ef2d09449cf8060a8"
                ], 
                "clang_-O0": [
                    "3d160caf3a20084960c62b01395f901a3d9b7660018e405ef73e823858ccc594", 
                    "4f5dbdaa5b7dfd5d7e4e7ccd140f235ebed4f31250544f24456503afe779365a", 
                    "edd2e3f8d11b3f024cddc288669628cd40dc7affd007295a682f12ffdb56d30e"
                ], 
                "gcc49_-O0": [
                    "593890f0abb70ab9198bf8712f5198532a06bdabe1a550989b6c56c3ec024a91", 
                    "0460f24baf9e2c849fbacca2371a49e447b704583586b2fd91c73b261499675e", 
                    "0c6d39f48289e87079cfbde63507422c14835d09e6b3f9268af00b89eba930a6"
                ], 
                "scala2.11.11": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "gcc49_-O3": [
                    "e9693695e8ad7865be03cccf81d26189323daf544626e8d1bb2aa65d304e154f", 
                    "52e2e66640a6f65e731f0064eac3596a8ae8cb1716da33a379a33c892515cdd1", 
                    "52e2e66640a6f65e731f0064eac3596a8ae8cb1716da33a379a33c892515cdd1"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "variants": [
                {
                    "_idx": 0, 
                    "c": "./benchmarks/function_inlining_partial_0.c", 
                    "type": "file"
                }, 
                {
                    "_idx": 1, 
                    "c": "./benchmarks/function_inlining_partial_1.c", 
                    "type": "file"
                }, 
                {
                    "_idx": 2, 
                    "c": "./benchmarks/function_inlining_partial_2.c", 
                    "type": "file"
                }
            ], 
            "return_type": "int"
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "common_subexpression_elimination", 
            "program_hashes": {
                "clang_-O3": [
                    "b19781227f515fc1c22deaca8ba15805066a623c0abd3c7cfd02b077d0599d2b", 
                    "b19781227f515fc1c22deaca8ba15805066a623c0abd3c7cfd02b077d0599d2b"
                ], 
                "clang_-O0": [
                    "92b2a9ccc4902a0adbdb7dadffc3fce9664672ecf8c0a736d45d46a2afde496c", 
                    "6fde148fbd06ea98837b427e60a4245b77270326096db1d6e8039773593f861c"
                ], 
                "gcc49_-O0": [
                    "8f0fbcfd0deedff11bafc0fdfca8ddd1641ce2ff62f18a0fce43b5ffd63e2e0d", 
                    "df2ff7bbb5ebacb5d8fe0f2e7388e75cd99ba9430aeeafa0e075ca23801a7420"
                ], 
                "scala2.11.11": [
                    "bc:ZlLYvOFDYOJEvTlDHSuN144BX7IYfnjmhjU2hejB44Q_pr:none", 
                    "bc:oZrZQ-tEVM0WNJMrg-89HHdztgz0Lw-3YzMaVVVH1Ug_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:ZBz3Rv54eep4kg7rrOLbF53scIB1PGp8vmwdvBmUzzo_pr:none", 
                    "bc:6eui96MkkON_1mDc-8Ct6imH_kXifmnVbtZIE2rOjpA_pr:none"
                ], 
                "gcc49_-O3": [
                    "d85c55bd9ad98603efdc4a33a0ebd2f1f5c0aef182356a8ef1b9ce92f9d83a73", 
                    "d85c55bd9ad98603efdc4a33a0ebd2f1f5c0aef182356a8ef1b9ce92f9d83a73"
                ]
            }, 
            "note": "trying to cover -fgcse and llvm -gvn", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int w = (input0*input1); int x = (w) + 1234; int y = (w) + 5678; return x+y;", 
                    "_idx": 0
                }, 
                {
                    "code": "int x = (input0 * input1) + 1234; int y = (input0 * input1) + 5678; return x+y;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "copy_propagation", 
            "program_hashes": {
                "clang_-O3": [
                    "8973db4aa37f23b50b1be3ef00dd366f1205acf59ed2071d17bbf92d87b2519b", 
                    "8973db4aa37f23b50b1be3ef00dd366f1205acf59ed2071d17bbf92d87b2519b"
                ], 
                "clang_-O0": [
                    "4e92fec8e09848916fef6c22d7fa7395fc1aeb22ec205c3336219a30afa2ad30", 
                    "7a6dc6d65c511ac3ad50c9709602a52099104dd1e512b7753b6f1d88aa3ce918"
                ], 
                "gcc49_-O0": [
                    "da27ed9f53416c1c97d486033e1d4aaf3e887d602ede0130366a973dfce80afd", 
                    "092ec868f84ec7bb2bf9883019045bb2825aad3e35003f4671ae61f14d2c79b2"
                ], 
                "scala2.11.11": [
                    "bc:ZlLYvOFDYOJEvTlDHSuN144BX7IYfnjmhjU2hejB44Q_pr:none", 
                    "bc:u-b6Pv88GSHUbyculaKbRWIKgK5CKJoah61pPoYHbsQ_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:ZBz3Rv54eep4kg7rrOLbF53scIB1PGp8vmwdvBmUzzo_pr:none", 
                    "bc:VrlgJZdVC6Oz-sh2Zjr0-MbLUsVWyZ2io9RLQDbDw28_pr:none"
                ], 
                "gcc49_-O3": [
                    "6a6681bcbd066765c443209f3f03613a9f0e7d591b3a4f1eebc1dfd4fc58e51b", 
                    "6a6681bcbd066765c443209f3f03613a9f0e7d591b3a4f1eebc1dfd4fc58e51b"
                ]
            }, 
            "note": "trying to cover -fgcse and llvm -gvn", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int w = (input0*input1); int x = (w) + 1234; int y = (w) + 5678; return x+y;", 
                    "_idx": 0
                }, 
                {
                    "code": "int w = (input0*input1); int w2 = w; int x = (w) + 1234; int y = (w2) + 5678; return x+y;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "constant_propagation", 
            "program_hashes": {
                "clang_-O3": [
                    "276933672c5042f2c92190c7985ce307d4794e0b8bc57db509030938c57ce5de", 
                    "276933672c5042f2c92190c7985ce307d4794e0b8bc57db509030938c57ce5de"
                ], 
                "clang_-O0": [
                    "dcc0d811a225c8254c7a773bb24b1a10ed32524db3480afc9eb3a8c24e6089e4", 
                    "8b3356c1a5af2bc2aceb9b95d6efa0d2bcf4d42da169479731acb0437dd17e33"
                ], 
                "gcc49_-O0": [
                    "0c2606c6bc5db124d23cd46bd609607f54f0c175b1640f65c24b1ac5eb08870f", 
                    "b080ddd83f827d20d89e989ce76cf289e3b2432bbe2ba57fbfb8acd147b0903c"
                ], 
                "scala2.11.11": [
                    "bc:ZlLYvOFDYOJEvTlDHSuN144BX7IYfnjmhjU2hejB44Q_pr:none", 
                    "bc:pjCo-T3hrsFn_3C6Fe-zn7MNdZHzP2V4DowQBV7Vd9A_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:ZBz3Rv54eep4kg7rrOLbF53scIB1PGp8vmwdvBmUzzo_pr:none", 
                    "bc:Tj2W3HEULSgoLb8_4FTgiLAAvVwA_UsELzbaXYIbYYg_pr:none"
                ], 
                "gcc49_-O3": [
                    "247d89af49d8b68d7b21c3462530fc5d027cd65a0442a98489719c19fb03dc0e", 
                    "247d89af49d8b68d7b21c3462530fc5d027cd65a0442a98489719c19fb03dc0e"
                ]
            }, 
            "note": "trying to cover general constant prop", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int w = (input0*input1); int x = (w) + 1234; int y = (w) + 5678; return x+y;", 
                    "_idx": 0
                }, 
                {
                    "code": "int a = 1200+34; int b = 5600+78; int w = (input0*input1); int w2 = w; int x = (w) + a; int y = (w2) + b; return x+y;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "gcse_kill_load_store_in_loop", 
            "program_hashes": {
                "clang_-O3": [
                    "191ffad9af128dc9604840c858ca5e439da1b62e02cddb396eb4368b92a54cce", 
                    "191ffad9af128dc9604840c858ca5e439da1b62e02cddb396eb4368b92a54cce"
                ], 
                "clang_-O0": [
                    "c4c3e078442ed8ed6fa242d200e42a1804422a138e9ff1d15a9601e6630aeff8", 
                    "25749c0156e916503fb5fe2ac26e2e4af7a83745e63b1769382c04c9be86bacd"
                ], 
                "gcc49_-O0": [
                    "0c6169feb61a258ac10c10953fd74cbbc0801f89f5c3e622a412fb6868a91119", 
                    "e65e0758f11edd577ce6c9b086857d5a9a89430b343e3f9c797581e66d32ef71"
                ], 
                "scala2.11.11": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "bc:zXV2s-JeLbAyyaEK1MQFTHEwPeIgS-Joj42dOFJrwqU_pr:none", 
                    "bc:oTPfGAyAKsTqcv06DXqGkRHOArklFKSvEod6T3pijn8_pr:none"
                ], 
                "gcc49_-O3": [
                    "befce9992d63ca6f48cc7bc28e7b695be6b39c3cd546754e81d5bed7d89f4f3b", 
                    "befce9992d63ca6f48cc7bc28e7b695be6b39c3cd546754e81d5bed7d89f4f3b"
                ]
            }, 
            "note": "trying to cover gcc -fgcse-lm, llvm -dce etc", 
            "input_types": [
                "int*", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "c_code": "int x=0; for(int i=0; i<input1; i++){ *input0 = i; x = *input0; }; return x; ", 
                    "_idx": 0, 
                    "java_code": "int x=0; for(int i=0; i<input1; i++){ input0[0] = i; x = input0[0]; }; return x; "
                }, 
                {
                    "c_code": "int x=0; for(int i=0; i<input1; i++){ *input0 = i; x = i; }; return x; ", 
                    "_idx": 1, 
                    "java_code": "int x=0; for(int i=0; i<input1; i++){ input0[0] = i; x = i; }; return x; "
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "binary_operator_canonicalization", 
            "program_hashes": {
                "clang_-O3": [
                    "9a07c946f25aeda4effef8649a779bb59fef79efe5545018b84ba6f8dc2379d0", 
                    "9a07c946f25aeda4effef8649a779bb59fef79efe5545018b84ba6f8dc2379d0"
                ], 
                "clang_-O0": [
                    "47185d720a5331ffa1e539e48ec6cf0f3543e0d15c1613c39378ae65ce4a3fad", 
                    "47185d720a5331ffa1e539e48ec6cf0f3543e0d15c1613c39378ae65ce4a3fad"
                ], 
                "gcc49_-O0": [
                    "5e93ff8c5169b0b5277f461d0dd4debc9959b22d7184e90ea1612cde3ada2cc5", 
                    "5e93ff8c5169b0b5277f461d0dd4debc9959b22d7184e90ea1612cde3ada2cc5"
                ], 
                "scala2.11.11": [
                    "bc:0OPJ81Crgo2DKJBBEkWNRU4dA4k-YyNaC6P3-fvRhVw_pr:none", 
                    "bc:PIZp4Q8wW3Ej3QwQ790y5vPzGZDm9iSivbmB7wBK7Uk_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:EQ43DP5GHNLdcN60pvoLPYfqZTiZi9DyRKLL3SggYCo_pr:none", 
                    "bc:cn5cHumlnccclHYJiqrZRN3Gz2Gs2TfO4ed06Ah3EEE_pr:none"
                ], 
                "gcc49_-O3": [
                    "1708a03811eb3ebab29b198a15a11d02b32f741a35da399d55218d49e703d17f", 
                    "1708a03811eb3ebab29b198a15a11d02b32f741a35da399d55218d49e703d17f"
                ]
            }, 
            "note": "llvm's instcombine, and gcc's canonicalization and tree reassociation", 
            "input_types": [
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "input0 + 10", 
                    "_idx": 0
                }, 
                {
                    "code": "10 + input0", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "comparison_canonicalization", 
            "program_hashes": {
                "clang_-O3": [
                    "5ad2bd48adfc2f27443ad75d835442cc01b6c29c0f05ba0de25e199a6176c465", 
                    "90c0662656805abf4e7b801fc2615b0720b77196fc1e69ad52891c86fd6312ba"
                ], 
                "clang_-O0": [
                    "12bcf900753364b9fc79c2586a28b2361bf54a1c6fba50dbba2852aaf6ea1ec3", 
                    "f701b5c0c8860fc7b85eaae198ae40debe5cfb76933b96ea116e118f1740dd61"
                ], 
                "gcc49_-O0": [
                    "4565e74c8e7b027f59ac9143c8c6043f14328ad72163513ae3c675e5a6da27c2", 
                    "2ccea19d330a29e237af2cc9127e02c6169de8ffb44ae75c42390c9a4afbe3dc"
                ], 
                "scala2.11.11": [
                    "bc:UjNYY2irVPQElKoiKLxY0gjU0mFHfBoPmPRL1PzTTM8_pr:none", 
                    "bc:qozCKEolWM56qRak0nOBiLHnb2oIzIXi4HR2CMi7WeM_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:Hp5P51A9co04Lfl3wGYbRbJK42w7Ab3wGM_gMXfceTM_pr:none", 
                    "bc:1I6CVd6NGQC2lZwW1RqMu378Z9iSU_JSvAWENsfA20U_pr:none"
                ], 
                "gcc49_-O3": [
                    "abed45a414c2bcc0491019f09519313378a10d4accceb5f12768e9432d123aed", 
                    "73be12b0a3a539cd2ceb1628eb37eaf4b3369cd016d81b69099d5eb8a2621961"
                ]
            }, 
            "note": "llvm's instcombine, and gcc's canonicalization and tree reassociation", 
            "input_types": [
                "int"
            ], 
            "return_type": "boolean", 
            "variants": [
                {
                    "code": "input0 >= 10", 
                    "_idx": 0
                }, 
                {
                    "code": "input0 != 10", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "bitwise_canonicalization", 
            "program_hashes": {
                "clang_-O3": [
                    "816e41fc51eb0bcc24f8addd48dd9500242fef23f1f0bcf272e44f4c6c28aad2", 
                    "816e41fc51eb0bcc24f8addd48dd9500242fef23f1f0bcf272e44f4c6c28aad2", 
                    "816e41fc51eb0bcc24f8addd48dd9500242fef23f1f0bcf272e44f4c6c28aad2"
                ], 
                "clang_-O0": [
                    "469fb0fd78d685b33ce6069ba0d012cb96d786dddc943af73c585664f51cecf8", 
                    "416a9ab57135d12869825ca457385db2bc78f5aa2f7defdf8691250906c5850c", 
                    "28768a31c3703d9970fa2b828560fc898b2d608e8c6c0874f979418e9172f6e6"
                ], 
                "gcc49_-O0": [
                    "fd83aeef8dd4577ffdd2005a52bbe5c624f83be304c4de2dd4389a4ebaa3d7b5", 
                    "fd83aeef8dd4577ffdd2005a52bbe5c624f83be304c4de2dd4389a4ebaa3d7b5", 
                    "fd83aeef8dd4577ffdd2005a52bbe5c624f83be304c4de2dd4389a4ebaa3d7b5"
                ], 
                "scala2.11.11": [
                    "bc:xGsSO0FPKVZbTYkPpatoaOLnHNpM7bnQAwiRZS80xwg_pr:none", 
                    "bc:cqRnYTjd2izcnICi1X8ujpkPayNcDT4nl9kj_cJtvqM_pr:none", 
                    "bc:9Zund22p-8sweB9xSdNvb4PQFCcBNvvMo9PwI4qzqE8_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:QW83Z5Ib3UK4R5vqls3u2glXwVD1Z_rIyEKG7FrArp8_pr:none", 
                    "bc:eqJCr7H6akPJjKbP595KaUly5iYsAvaZiCc4tiUOjN4_pr:none", 
                    "bc:pI2dhjNEM2JnKuJEO2kMoJlg9-vQScm4RxRtXSz6MMA_pr:none"
                ], 
                "gcc49_-O3": [
                    "f517cbdee94c63cf734a85233d0cf7c122209cdf8e9d02fbb338d02ed8563a8b", 
                    "f517cbdee94c63cf734a85233d0cf7c122209cdf8e9d02fbb338d02ed8563a8b", 
                    "f517cbdee94c63cf734a85233d0cf7c122209cdf8e9d02fbb338d02ed8563a8b"
                ]
            }, 
            "note": "llvm's instcombine, and gcc's canonicalization and tree reassociation, see https://github.com/llvm-mirror/llvm/blob/master/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp", 
            "input_types": [
                "int", 
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "((input0 & input1) | input2) ^ input3", 
                    "_idx": 0
                }, 
                {
                    "code": "((input0 | input2) & (input1 | input2)) ^ input3", 
                    "_idx": 1
                }, 
                {
                    "code": "input3 ^ ((input0 | input2) & (input1 | input2))", 
                    "_idx": 2
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "tree_reassociation_subtraction_reassociation", 
            "program_hashes": {
                "clang_-O3": [
                    "822b20ef4d4efa7b280d9d760c72051819858b3f6d3a0632f219ce9c23c0e27b", 
                    "822b20ef4d4efa7b280d9d760c72051819858b3f6d3a0632f219ce9c23c0e27b", 
                    "822b20ef4d4efa7b280d9d760c72051819858b3f6d3a0632f219ce9c23c0e27b", 
                    "822b20ef4d4efa7b280d9d760c72051819858b3f6d3a0632f219ce9c23c0e27b"
                ], 
                "clang_-O0": [
                    "e2f54eacd1757da8006ceac96b5d90dccacbdad3fa3d67621a2223779a8a3108", 
                    "ea579828a75b671c712192cfba4e61683ab040cb63d0eb5a63e7c6e0eb9b447c", 
                    "ea579828a75b671c712192cfba4e61683ab040cb63d0eb5a63e7c6e0eb9b447c", 
                    "ea579828a75b671c712192cfba4e61683ab040cb63d0eb5a63e7c6e0eb9b447c"
                ], 
                "gcc49_-O0": [
                    "600bddcd4796e3dfbed09dea1ae46ca88b7bfc082a2a0ea0f5357da36b515b93", 
                    "3a1cda1c65c3d4b62f637e43f741555d6da635174cfde7adf31029356b27fbb5", 
                    "3a1cda1c65c3d4b62f637e43f741555d6da635174cfde7adf31029356b27fbb5", 
                    "3a1cda1c65c3d4b62f637e43f741555d6da635174cfde7adf31029356b27fbb5"
                ], 
                "scala2.11.11": [
                    "bc:2VH8vkgNWrsQjMB66fwnWcmHGGdsRxbBzubIZ5fiMMU_pr:none", 
                    "bc:SALL3lIYKifytK-CiKdfPdPORPBC3dLsq7IjFmBZ9RU_pr:none", 
                    "bc:SALL3lIYKifytK-CiKdfPdPORPBC3dLsq7IjFmBZ9RU_pr:none", 
                    "bc:SALL3lIYKifytK-CiKdfPdPORPBC3dLsq7IjFmBZ9RU_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:jvDHv1TBDWRHzqAAI9FtR95pJr7os8np-_tnnbg8YZc_pr:none", 
                    "bc:xx6QrwAAd9U5xhzg_U58eI4zicHDuNChU7L_MntC9h4_pr:none", 
                    "bc:xx6QrwAAd9U5xhzg_U58eI4zicHDuNChU7L_MntC9h4_pr:none", 
                    "bc:xx6QrwAAd9U5xhzg_U58eI4zicHDuNChU7L_MntC9h4_pr:none"
                ], 
                "gcc49_-O3": [
                    "e7531da0e38a8e53f2a9dfae796b11d502ab32998b38678cd2bdac3c22b6a0f2", 
                    "ce704e7c79d5606921daed6638bbd31825a8de3bbd54192dd4dd53e9e546d86a", 
                    "ce704e7c79d5606921daed6638bbd31825a8de3bbd54192dd4dd53e9e546d86a", 
                    "ce704e7c79d5606921daed6638bbd31825a8de3bbd54192dd4dd53e9e546d86a"
                ]
            }, 
            "note": "trying to cover gcc -ftree-reassoc subtraction case and llvm -reassociate", 
            "input_types": [
                "int", 
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "(input0+input1)-(input2+input3)", 
                    "_idx": 0
                }, 
                {
                    "code": "(((input0+input1)-input2)-input3)", 
                    "_idx": 1
                }, 
                {
                    "code": "(input0+input1-input2)-input3", 
                    "_idx": 2
                }, 
                {
                    "code": "input0+input1-input2-input3", 
                    "_idx": 3
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "tree_reassociation_linearization", 
            "program_hashes": {
                "clang_-O3": [
                    "dfc92b967cc6d5fb504b1ed968157faae4ae164f39bc1ce24d9a52eee77f33f5", 
                    "dfc92b967cc6d5fb504b1ed968157faae4ae164f39bc1ce24d9a52eee77f33f5", 
                    "dfc92b967cc6d5fb504b1ed968157faae4ae164f39bc1ce24d9a52eee77f33f5", 
                    "dfc92b967cc6d5fb504b1ed968157faae4ae164f39bc1ce24d9a52eee77f33f5"
                ], 
                "clang_-O0": [
                    "87404512348fb02a675669c470118bff4caec9cda1bd39b527ff91f246ee2d8a", 
                    "5d44f1b972eb77d1add818c92debe07016a98499a9ef8476406532a3b8089fef", 
                    "5d44f1b972eb77d1add818c92debe07016a98499a9ef8476406532a3b8089fef", 
                    "5d44f1b972eb77d1add818c92debe07016a98499a9ef8476406532a3b8089fef"
                ], 
                "gcc49_-O0": [
                    "4497db98d8fe1ee0170b844df84e94da6fd8dfbc2c299f043b3312e8f98c1c1f", 
                    "0ca0851c1502b895fb0f850b142d5292e62929040bc46a52dc299d5ee710cb9d", 
                    "0ca0851c1502b895fb0f850b142d5292e62929040bc46a52dc299d5ee710cb9d", 
                    "0ca0851c1502b895fb0f850b142d5292e62929040bc46a52dc299d5ee710cb9d"
                ], 
                "scala2.11.11": [
                    "bc:UhUSc6xb9sGBAOK2QTtVq_7suWeicIFuiF-foNehUmI_pr:none", 
                    "bc:xvUGPXt0JrrM61i7AThq8s9LTMl3Efzt9-1QKqFKGXQ_pr:none", 
                    "bc:xvUGPXt0JrrM61i7AThq8s9LTMl3Efzt9-1QKqFKGXQ_pr:none", 
                    "bc:xvUGPXt0JrrM61i7AThq8s9LTMl3Efzt9-1QKqFKGXQ_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:byo5SFYQDcZCzbXbdooQ-yXZLtX9bJpCuzvsgOeIQpM_pr:none", 
                    "bc:DtCBUeboE1JVom5z5A17-PB2ErXTG0mo2wUUahP1APw_pr:none", 
                    "bc:DtCBUeboE1JVom5z5A17-PB2ErXTG0mo2wUUahP1APw_pr:none", 
                    "bc:DtCBUeboE1JVom5z5A17-PB2ErXTG0mo2wUUahP1APw_pr:none"
                ], 
                "gcc49_-O3": [
                    "af8d66769245089a48fea7c2c00314ef1014661532e3359f9da59a8e3040432c", 
                    "43c4def7a3f22208f6819f7fc8787d678aee543e0da5fa7cb00ea80c6f32309a", 
                    "43c4def7a3f22208f6819f7fc8787d678aee543e0da5fa7cb00ea80c6f32309a", 
                    "43c4def7a3f22208f6819f7fc8787d678aee543e0da5fa7cb00ea80c6f32309a"
                ]
            }, 
            "note": "trying to cover gcc -ftree-reassoc linearization and llvm -reassociate", 
            "input_types": [
                "int", 
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "(input0+input1)+(input2+input3)", 
                    "_idx": 0
                }, 
                {
                    "code": "(((input0+input1)+input2)+input3)", 
                    "_idx": 1
                }, 
                {
                    "code": "(input0+input1+input2)+input3", 
                    "_idx": 2
                }, 
                {
                    "code": "input0+input1+input2+input3", 
                    "_idx": 3
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "tree_reassociation_operand_lists", 
            "program_hashes": {
                "clang_-O3": [
                    "86755d5b0a8ade270ac76a2385598c583e9f11c39fc9163c42486ad299b854f3", 
                    "86755d5b0a8ade270ac76a2385598c583e9f11c39fc9163c42486ad299b854f3", 
                    "86755d5b0a8ade270ac76a2385598c583e9f11c39fc9163c42486ad299b854f3"
                ], 
                "clang_-O0": [
                    "c06b8fd3f1e22a8161486f126e0ad19021a052fc8c9290f5668d692251758c27", 
                    "3abb7eee51bb49eb3d00d13c6ca3bceca9e5d97dcbcd5cc90d35baa13721c5ba", 
                    "0b2b1cddf4b3ffdb5e4c54cf40c8f442e7d882d5f2258e8a49719f3c1de226c3"
                ], 
                "gcc49_-O0": [
                    "40e74dda36730c957151748cc1d5135a541794d9b81fc95bef447f2e0078fe80", 
                    "40e74dda36730c957151748cc1d5135a541794d9b81fc95bef447f2e0078fe80", 
                    "40e74dda36730c957151748cc1d5135a541794d9b81fc95bef447f2e0078fe80"
                ], 
                "scala2.11.11": [
                    "bc:hPQByZEcQVsSYT8vft5-ffnf0b59oQCmoCngTEcRAkw_pr:none", 
                    "bc:-nzvvLF70pqkOdNQnxapWXUo3etbcZ_9PmOWPmCp2c0_pr:none", 
                    "bc:txFf0qpZX3bGOKYyoljl96CFGG8AmcweanpgUrSd-a8_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:EtUbvX16o_2rKjr1WwI82OgDI3Af6kD-qrBXNhRYHFc_pr:none", 
                    "bc:CyBTE7DTM-F1GGX2zBUvEsk0VFbbNDdci8MBxcRC8a8_pr:none", 
                    "bc:rFKGX-6SUPY_F6xxrx2L5v_q8EJxGMP7yduN5XpQdsI_pr:none"
                ], 
                "gcc49_-O3": [
                    "a034fa8027ec5a8ff4b2fb3e9c2dedc554cd596d2dcc7dcbb2567d73c3ea7c4e", 
                    "a034fa8027ec5a8ff4b2fb3e9c2dedc554cd596d2dcc7dcbb2567d73c3ea7c4e", 
                    "a034fa8027ec5a8ff4b2fb3e9c2dedc554cd596d2dcc7dcbb2567d73c3ea7c4e"
                ]
            }, 
            "note": "trying to cover gcc -ftree-reassoc subtraction case and llvm -reassociate", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "input0 + -input1", 
                    "_idx": 0
                }, 
                {
                    "code": "input0 - input1", 
                    "_idx": 1
                }, 
                {
                    "code": "input0 - (input1 & input1)", 
                    "_idx": 2
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "name": "tree_reassociation_repeated_factors", 
            "program_hashes": {
                "clang_-O3": [
                    "6522d84b3b036ea686f3ef131074b08708c19b49a5e5e03da6b6ef064e988382", 
                    "6522d84b3b036ea686f3ef131074b08708c19b49a5e5e03da6b6ef064e988382"
                ], 
                "clang_-O0": [
                    "2ce98b13a3d773e3b82109bf89a48ff075dc17d0ecd2a74c42dc6a6fcb02c77d", 
                    "e672e475f5eb7db4b33ffc6eaf9509f2edd40c475b2997ebda686b9b5889e8be"
                ], 
                "gcc49_-O0": [
                    "4ca56bab894375d6b5949b3c47ad3403f46f450cad0d6407e75ca22fa0de4655", 
                    "de1b30b3ed389fde838961ae7cde9e8c8aa7901ddf4c17fe7eba66c060ac26fd"
                ], 
                "scala2.11.11": [
                    "bc:2JWyK0kThz6qDPCPkNczqUIBQrFV5FlkE_F7KYttiRc_pr:none", 
                    "bc:AMoy8oYyHu5C9jCTjDHqyz32PxY0y_dX2YaqDJe9A5Q_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:MwIRhR2D7eD9ICQCkUHb12p3CzrHpMLhYYQa7BtVYWY_pr:none", 
                    "bc:SmWxsQUFARzKf1u9QPnFpjiq1xZ7yQ5XGkazc7QzEMo_pr:none"
                ], 
                "gcc49_-O3": [
                    "4ecc0560d56b488db9afbc4e9f384c92a4021a0d5301b76a6e576752cfeafded", 
                    "2cf5bda1aea4ca28aad9e5f242747f77aef86e2561c5c14f2fabbf0281404b34"
                ]
            }, 
            "note": "trying to cover gcc -ftree-reassoc repeated factors and llvm -reassociate", 
            "input_types": [
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "(input0 * input0 * input0) + (input0 * input0 * input0)", 
                    "_idx": 0
                }, 
                {
                    "code": "2*(input0 * input0 * input0)", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "code_hoisting", 
            "program_hashes": {
                "clang_-O3": [
                    "b39e8c1af84baeaf25dd5e77aa6c9169ea5ca81e6025aa2c28d8a3494fe45a57", 
                    "b39e8c1af84baeaf25dd5e77aa6c9169ea5ca81e6025aa2c28d8a3494fe45a57"
                ], 
                "clang_-O0": [
                    "a6893ae2bc211c572d073883247388de55f3fc17425b5d5471a1b7cc9024edd6", 
                    "ed0b0be1a7bed23da7cbdade73ba0c24e527ddb416de53be7c42bb22087235d4"
                ], 
                "gcc49_-O0": [
                    "836a6bc6ce3d530acc0cefe7cf261804b4b8ce497ded8cececa4bbd71c0365d2", 
                    "24ac53cbe5c24fade7bd8173012add437c4f0dad37f4e7a95365910df832f230"
                ], 
                "scala2.11.11": [
                    "bc:-mB2672opIpSPeisq-8nh6dhxnN_kc1ucCcuKtIKSac_pr:none", 
                    "bc:fjV5AjpDfNTxhW_bRy__UnEySltEnHHRK6QfEyfylqA_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:fCyTuNluY298Bb-eER5BJFTjPA2u-mw5KFa03lJEoOk_pr:none", 
                    "bc:oZsbP5rBRPnQSwiCEpnSi_7VG6wojqzYDZHm7GmDkiE_pr:none"
                ], 
                "gcc49_-O3": [
                    "b5cc10b1df85166d8ba1f8e362934937f97b1228598824bfe28db01e76b7a47d", 
                    "01aeeb9860ffa8f342025fc3ad9d0d5473f6fef222e770eb0ee0df67f8145ccb"
                ]
            }, 
            "note": "trying to cover gcc -fcode-hoisting", 
            "input_types": [
                "int*", 
                "int*"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "code": "int x = input0[0]; if(x > 100){ input0[0] = x*x; input1[0] = 0; } else { input0[0] = x*x; input1[0] = 1; } ", 
                    "_idx": 0
                }, 
                {
                    "code": "int x = input0[0];  input0[0] = x*x; if(x > 100){ input1[0] = 0; } else { input1[0] = 1; } ", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "partial_redundancy_elimination", 
            "program_hashes": {
                "clang_-O3": [
                    "b65277f620726ade9bf1a0af77735b7b9bc1a6a81d5ba9037077bb8c727858a1", 
                    "b65277f620726ade9bf1a0af77735b7b9bc1a6a81d5ba9037077bb8c727858a1"
                ], 
                "clang_-O0": [
                    "73dfdd41c27011f8d46907e8abf6dab430fba17584d044a70e7ae23a64a34c4e", 
                    "b208398ef2e7d94b4d8f4376cc3ac934ef08a2c894e91ae51845814156a17754"
                ], 
                "gcc49_-O0": [
                    "638e8a62280845b169c1fd556ea52c3d4e53a0989b5293d13e19935a69e14a81", 
                    "62deac006ce47fd0ac3565be1158bb9c952348fa700438a7805275cba2ace166"
                ], 
                "scala2.11.11": [
                    "bc:1SKgyrkLpPTAqg-_2O_SoJe_22Y70fYNUbV6RYVeeSU_pr:none", 
                    "bc:0he6HQ_nJp2e5XBZPtOvlCwytDB_SmSJixI2Z0ZFXJs_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:OqqNnY7R4mdP12ZVhQC9ekbZB6FrdUndzkrzUZ5tifU_pr:none", 
                    "bc:gRN97w6MIvZ2Vomw0yLC_7iSBIPE4ctKk6VS39bCb7c_pr:none"
                ], 
                "gcc49_-O3": [
                    "682cb31c236362a70f0d643af3facf4f5434029370edcba2c1ff2924e1c0fbed", 
                    "9b8b7600e66426beb950873dca673f08ec93c426c75f774796f187e1d319b4ef"
                ]
            }, 
            "note": "trying to cover gcc -fpre -ftree-pre and llvm -gvn, tree-ssa-pre.c, example pulled from https://cs.wheaton.edu/~tvandrun/writings/cc04.pdf. this fails in a really weird way on gcc but works on llvm! this is great! also covers LLVM GVN optimizations", 
            "input_types": [
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int c = input0 + input1; int d=0; if(input2 != 0){ c = input0; d = c + input1; } else { c = 5; }; return c + input1; ", 
                    "_idx": 0
                }, 
                {
                    "code": "int c = input0 + input1; int d=0; int t=0; if(input2 != 0){ c = input0; d = c + input1; t = d; } else { c = 5; t = c + input1; }; return t; ", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "forward_prop", 
            "program_hashes": {
                "clang_-O3": [
                    "3628748981a9de23e3da703362f291ae011f66a31949a60007bce3e405b452dd", 
                    "3628748981a9de23e3da703362f291ae011f66a31949a60007bce3e405b452dd"
                ], 
                "clang_-O0": [
                    "08cf98dd7083ca101bbf2d5b4d2ce15ad8a93381e47b7fdc554ec17f226acefd", 
                    "c4b8e9d503ff4b1afcb452524287b4db5c5b0699675e761ddfe30895eeb89c96"
                ], 
                "gcc49_-O0": [
                    "360136ac06b7cb473aeb6480946e69a58c288ee7cffe3ae2649fe6a37d1b38a7", 
                    "8f313863a74d3cf36c9a35553bf8f63817b09950069312de1a6d2e0403e2e5fc"
                ], 
                "scala2.11.11": [
                    "bc:ZAUuCqJxDJsKUP57OuW2LRwYAdv1ucHj5V_VC-nwkF8_pr:none", 
                    "bc:nsw_pAGie9VWWCRtjbleYYHckw5R8PDG6wzIofo_jiQ_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:wuOgyKOT4saulTvJZNRgOXT3iEVwe66uYow3v3v2_Fs_pr:none", 
                    "bc:gNC0riErYh-oJSzsDbQhXVVfA4EG-dopMt_Mkb2cG34_pr:none"
                ], 
                "gcc49_-O3": [
                    "e97f181a75d5005c7c9bd0b4653049bd250dd9d351835ef918da4d0e09e5102e", 
                    "e97f181a75d5005c7c9bd0b4653049bd250dd9d351835ef918da4d0e09e5102e"
                ]
            }, 
            "note": "trying to cover gcc -ftree-forwprop", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x = input0 & input1; if(x!=0){ return 0; } else { return 1; }", 
                    "_idx": 0
                }, 
                {
                    "code": "if((input0 & input1) != 0){ return 0; } else { return 1; }", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "full_redundancy_elimination", 
            "program_hashes": {
                "clang_-O3": [
                    "5c116085abfe532cf846296f0b7e6a46ea05d08eeb7ed9709cfc1886a8b8b87e", 
                    "5c116085abfe532cf846296f0b7e6a46ea05d08eeb7ed9709cfc1886a8b8b87e"
                ], 
                "clang_-O0": [
                    "9e2d779bde0a134e34ffdf54c82af8962461c1f12a084414ca1782241ae240f7", 
                    "f5c94f2d76d5bcbd7b69ee9f1fe5b46de65082259ab014a29bb44f0024733c5b"
                ], 
                "gcc49_-O0": [
                    "0115676b11ab92b63a7bc7cbc09765cbffea694be531649ccfcde3467f6eaa10", 
                    "f4aea3734217385e3fa179120bff85becd267ab8e89737074982d5d5d638450d"
                ], 
                "scala2.11.11": [
                    "bc:F3__zae-LT5B2eOfNYtkUXMRQAE22DCFY8n0zzIZ74g_pr:none", 
                    "bc:6hri51Qz7l14m-_uhSVTKVHzk4Z-r2_yGNgtBq03h5c_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:z3QX8uFHA1VEdrBtXCOUbBa9rEyjx4PCiaK_t8RPncw_pr:none", 
                    "bc:b3MqTAYdyMeXJF7zAnTmCQgD0MvFTtwj8T2uTb-jQoQ_pr:none"
                ], 
                "gcc49_-O3": [
                    "5dcc2642c5d55b4d1279bd7180f1f7acfc640cde5a7e71449e0c17cc2841e65c", 
                    "c4b0dfd7345a47d61c3764b74f55559fa731ce2366d2172708f5fb49894371f9"
                ]
            }, 
            "note": "trying to cover gcc -ftree-fre, also covers llvm GVN. example based on global value numbering: https://courses.cs.washington.edu/courses/cse501/04wi/papers/click-pldi95.pdf", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x = input0 * input1 + input1; int y = input0 * input1 + input0; return x+y;", 
                    "_idx": 0
                }, 
                {
                    "code": "int a = input0*input1; int x = a + input1; int y = a + input0; return x+y;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "copy_propagation", 
            "program_hashes": {
                "clang_-O3": [
                    "8973db4aa37f23b50b1be3ef00dd366f1205acf59ed2071d17bbf92d87b2519b", 
                    "8973db4aa37f23b50b1be3ef00dd366f1205acf59ed2071d17bbf92d87b2519b"
                ], 
                "clang_-O0": [
                    "4e92fec8e09848916fef6c22d7fa7395fc1aeb22ec205c3336219a30afa2ad30", 
                    "7a6dc6d65c511ac3ad50c9709602a52099104dd1e512b7753b6f1d88aa3ce918"
                ], 
                "gcc49_-O0": [
                    "da27ed9f53416c1c97d486033e1d4aaf3e887d602ede0130366a973dfce80afd", 
                    "092ec868f84ec7bb2bf9883019045bb2825aad3e35003f4671ae61f14d2c79b2"
                ], 
                "scala2.11.11": [
                    "bc:ZlLYvOFDYOJEvTlDHSuN144BX7IYfnjmhjU2hejB44Q_pr:none", 
                    "bc:u-b6Pv88GSHUbyculaKbRWIKgK5CKJoah61pPoYHbsQ_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:ZBz3Rv54eep4kg7rrOLbF53scIB1PGp8vmwdvBmUzzo_pr:none", 
                    "bc:VrlgJZdVC6Oz-sh2Zjr0-MbLUsVWyZ2io9RLQDbDw28_pr:none"
                ], 
                "gcc49_-O3": [
                    "6a6681bcbd066765c443209f3f03613a9f0e7d591b3a4f1eebc1dfd4fc58e51b", 
                    "6a6681bcbd066765c443209f3f03613a9f0e7d591b3a4f1eebc1dfd4fc58e51b"
                ]
            }, 
            "note": "trying to cover gcc -ftree-copy-prop, TODO improve", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x = input0 * input1; int y = x; return y;", 
                    "_idx": 0
                }, 
                {
                    "code": "return input0*input1;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "interprocedural_constant_propagation", 
            "program_hashes": {
                "clang_-O3": [
                    "bdae89ba1c72b3ad31c5a6cbb6738572e7054259b080dbde556718c509c45564", 
                    "509e51ecbd545bbf93c94ebc6053e553e0c141567803e63477c0089e195edd8f"
                ], 
                "clang_-O0": [
                    "2ce4b2faa881f91e8f433c5d291081652bf307eda2c93c7c6e90edcf2304e019", 
                    "f40770475529c3bf5952aa1200fd7bc733d7ababb721557aa38ad66104c1cdf2"
                ], 
                "gcc49_-O0": [
                    "c7ae413573ae41bea135e3e96af35bca35d5f427e23cfc6d11cbc9e00c04b5b2", 
                    "9a9b1331b2e4dce9d80d8d5551e433e6ce50275d789f0571e0d556e6c7168f9b"
                ], 
                "scala2.11.11": [
                    "bc:gng8CSrR_ZNxfLyDFULwfw3JjObpRRIORK2MAqOrPE8_pr:none", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "bc:MiPOiqwXVSx04KXPs8CcvO_sKeuDPfmV68RwwNMFjbA_pr:none", 
                    "skipped_no_code_specified"
                ], 
                "gcc49_-O3": [
                    "c9311916a3fd05eb2458539c96ce64b1934910b68ab7565c75f0e1d3ddcd72cb", 
                    "0667b051d33bc9e8bea25f8c869a1922c58fd0cad3c0cd6a8e22409ce4b0290d"
                ]
            }, 
            "note": "trying to cover gcc -fipa-cp and llvm's -ipconstprop. TODO this are equivalent but we need to better parse the insns to understand it", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "return input0+input1+1;", 
                    "_idx": 0
                }, 
                {
                    "_idx": 1, 
                    "c": "./benchmarks/ipa_cp_1.c", 
                    "type": "file"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "forward_store_motion", 
            "program_hashes": {
                "clang_-O3": [
                    "5baf979663aaec4fa360851a95d194a30be648a08d69b9d8e52f6a3692198d48", 
                    "4f1cbe73a582a0191842466ab549d9d0ea861cbde5f0a1529b9d052f755c812b"
                ], 
                "clang_-O0": [
                    "25dbd67d4c969cecf8fbb26880220828dd539dbe8ba4cc65282b716ac0b881c3", 
                    "e3e62412b2900af6e9cb19d9a830e0c42014413a767ee640146a983f1e00e248"
                ], 
                "gcc49_-O0": [
                    "1cd6f0c78d497190faee863c7aaa279ee5cb3c2f58596d1fd1e8355edc4b9601", 
                    "725d01e44552c9fb7d2d747a53078e4769830fbd0ce4660984eeecc32b523af0"
                ], 
                "scala2.11.11": [
                    "bc:M2-FbO9wroY4uUd5NcAPPR7frE0ublrUJYYQA-asW7A_pr:none", 
                    "bc:vnW6TDfCnFK0jMp2SaDgoQVAS6ObeALXd8vAZ-WYwsU_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:Uyx375f1rEPkA7GxN_2d92h3ChWDPIzod6fzCRc8GW0_pr:none", 
                    "bc:EHYDCuKMprPq-WVDiwsTsT3Jz66bcsgJRz83BUYQ0Ec_pr:none"
                ], 
                "gcc49_-O3": [
                    "c4eeed94fb31152d26acdfc3c871c19269ed2c3c537099c1d50749617b14351c", 
                    "c4eeed94fb31152d26acdfc3c871c19269ed2c3c537099c1d50749617b14351c"
                ]
            }, 
            "note": "trying to cover gcc -ftree-sink. example from gcc/tree-ssa-sink.c TODO: is input = input+1 needed?", 
            "input_types": [
                "int*", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int p = input1; int ret=0; input0[0] = p; p = p + 1; if(input2!=0){ input0[0] = 123; } else { ret = input0[0]; }; return ret;", 
                    "_idx": 0
                }, 
                {
                    "code": "int p = input1; int ret=0; int sinktemp = p; p = p + 1; if(input2!=0){ input0[0] = 123; } else { input0[0] = sinktemp; ret = input0[0]; }; return ret;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "code_sinking_math", 
            "program_hashes": {
                "clang_-O3": [
                    "51dff45a514a63dd0df4ae65705758f863cdac6267ea10646e1f8474f44873ad", 
                    "51dff45a514a63dd0df4ae65705758f863cdac6267ea10646e1f8474f44873ad"
                ], 
                "clang_-O0": [
                    "5e5f9631fe7f548f650e1157060c047f6fc43e4d3145cffb175884a423daec31", 
                    "a4ffc0a6f402669112acf65e593b1aba5343a98e6607540834b5d54be64ab4ed"
                ], 
                "gcc49_-O0": [
                    "972f12a803c141b13c36896b1d5766033abfe928e92116bbf7c8ab93729afcff", 
                    "cb512cf462ad87f5b5267a8312239f70aa938a2d58dd8bb8edfbf87015eb09e3"
                ], 
                "scala2.11.11": [
                    "bc:cKjsGmKdZAff0aVaBqvpjYFcsClU0qXczhOBcegPM2I_pr:none", 
                    "bc:QMdsm8iFKAtEh6YAP2aJUazmtMy-ICCCoAI2vD3hA_U_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:U-P7O_jYXCawOyX8zNVliOrZEbCtRYS0iiNxgKDlqQE_pr:none", 
                    "bc:H1TkRMwfIEIhxMaeE1jYNnlyTTx33FQoZTeVmiqu6Kk_pr:none"
                ], 
                "gcc49_-O3": [
                    "dd2c313ea726f0f4735689747994b1c91ca165bcb887850be92b7f0f6b387963", 
                    "dd2c313ea726f0f4735689747994b1c91ca165bcb887850be92b7f0f6b387963"
                ]
            }, 
            "note": "trying to cover llvm -sink. example from https://github.com/llvm-mirror/llvm/blob/master/lib/Transforms/Scalar/Sink.cpp", 
            "input_types": [
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x = input1*input2; int y = input1+input2; int z = 0; if(input0!=0){z=x;}else{z=y;}; return z; ", 
                    "_idx": 0
                }, 
                {
                    "code": "int z = 0; if(input0!=0){z=input1*input2;}else{z=input1+input2;}; return z; ", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "code_sinking_pure_function", 
            "header": "__attribute__((pure)) int extern_do_pos(); __attribute__((pure)) int extern_do_neg();", 
            "program_hashes": {
                "clang_-O3": [
                    "378a1166049080c4c05cc288ad35a3952915485423cbc3be3fb5a1783bdf3c90", 
                    "378a1166049080c4c05cc288ad35a3952915485423cbc3be3fb5a1783bdf3c90"
                ], 
                "clang_-O0": [
                    "48e377166b38b708f160ceabc46e894ca48f09bf64ac22f62fe192fdf7736d8c", 
                    "8c20adb0d26d50a9c629ca6254f4573dfc7669b7abc549e55f3e32449dd48c13"
                ], 
                "gcc49_-O0": [
                    "4ef5ec85c040775705121c75a395b233a9c469d3d8fadbbf0e12ee817e7dc955", 
                    "b84dcb42367f1dce2f33f73501746c88878bf4d06e964bc310063939a117c75f"
                ], 
                "scala2.11.11": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "gcc49_-O3": [
                    "6fcde7c0c2e069b42850598ff0ae40addf10da69d8be87d70c3e94a9e3b62a7d", 
                    "931ae460d00beb37dc189a704b2fe29fc430c19076c61602805c0dd8e0ec3ebe"
                ]
            }, 
            "note": "trying to cover llvm -sink. example from https://github.com/llvm-mirror/llvm/blob/master/lib/Transforms/Scalar/Sink.cpp", 
            "input_types": [
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "c_code": "int x = extern_do_pos(); int y = extern_do_neg(); int z; if(input0){z=x;}else{z=y;} return z; ", 
                    "_idx": 0
                }, 
                {
                    "c_code": "int z; if(input0){z=extern_do_pos();}else{z=extern_do_neg();} return z; ", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "constant_propagation_conditional", 
            "program_hashes": {
                "clang_-O3": [
                    "627383aa93b978251f09fd3dc17ceb53b50226890fa91384bc2d1b109af29598", 
                    "627383aa93b978251f09fd3dc17ceb53b50226890fa91384bc2d1b109af29598", 
                    "627383aa93b978251f09fd3dc17ceb53b50226890fa91384bc2d1b109af29598", 
                    "627383aa93b978251f09fd3dc17ceb53b50226890fa91384bc2d1b109af29598"
                ], 
                "clang_-O0": [
                    "8c83d7a0daf824b0b24dcad002f4e5791996c9afd5a510e1fa28445f2923ef71", 
                    "c61cfa42f46eb49895d29a5bcf23ae24e820f748e505065ed2559724217fd3d6", 
                    "ca09c8a95a642a3c8f2ab032e5cb64a9f12fbf576490ea233efc6ae153deb4c1", 
                    "7fd523a2cd38dfad72f9610a8c94d7f17606dd0cd04614d481be29fb5accf779"
                ], 
                "gcc49_-O0": [
                    "9cf8d0a46f0c141f3d600e22dac389f48bbaf5e46a79f9f5c01b38ca67a82306", 
                    "1918021d7e7a88ece877a455d7b4897bee8191a85297e61a89cb760297280dbc", 
                    "ebedfa40e937a1e38456c44d882cfddbcda14313f009cb1f25324ceb622ebcb1", 
                    "c9e617c6c7002e44a68e337a87d3e40478c7d8297fd712c0b6cac1eab6cf6b80"
                ], 
                "scala2.11.11": [
                    "bc:7jrDc_kdvWzvWkZIwmoWsPaSMlTMHxgPMmcRofdncZ4_pr:none", 
                    "bc:aimjBa6eWHGOsc7n5pqGxg1cSBuIPs1KroZSzEYfpmM_pr:none", 
                    "bc:XC6V14INkXTUTLTQ8Kcm7cfteVfwkhm77TUOlJkcXUI_pr:none", 
                    "bc:y_5_5AYJT9--BLitNb9ZS4zEKfhIObnA2SzMtMYF5Nk_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:-XNAtm0HgXI2Vh4PP3xt-af8uoMfPWzyKlQCuqbqAAY_pr:none", 
                    "bc:lr2K5XqbuZf4PBG4L5o_jLEqxyouRZKDzYg8UnvLOUU_pr:none", 
                    "bc:Z0mUBHMJ7XTcUZQxkLVyMcONlqBqs29dI17eaTLzyfE_pr:none", 
                    "bc:OWlZpRyYlgAxNINEQtJjcsMWqHZ46oi41JHmjCqp1Q0_pr:none"
                ], 
                "gcc49_-O3": [
                    "be81403e0fc490c8e18d5cce0da2fd115f61a476edf3f6cfb76c1d377d3dc5a6", 
                    "be81403e0fc490c8e18d5cce0da2fd115f61a476edf3f6cfb76c1d377d3dc5a6", 
                    "be81403e0fc490c8e18d5cce0da2fd115f61a476edf3f6cfb76c1d377d3dc5a6", 
                    "be81403e0fc490c8e18d5cce0da2fd115f61a476edf3f6cfb76c1d377d3dc5a6"
                ]
            }, 
            "note": "trying to cover gcc -ftree-ccp and llvm -constprop. example from gcc/tree-ssa-ccp.c", 
            "input_types": [
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x = 100; if(input0>0 || input0<=0){ x=200; } else { x=300; }; return x;", 
                    "_idx": 0
                }, 
                {
                    "code": "return 200;", 
                    "_idx": 1
                }, 
                {
                    "_idx": 2, 
                    "code": "int x; if(1){ x=200; } else { x=300; }; return x;", 
                    "scala_code": "int x=0; if(true){ x=200; } else { x=300; }; return x;", 
                    "java_code": "int x; if(true){ x=200; } else { x=300; }; return x;"
                }, 
                {
                    "code": "int x = 100; return x*2;", 
                    "_idx": 3
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "constant_propagation_conditional2", 
            "program_hashes": {
                "clang_-O3": [
                    "da1cdf2c9bc02fd4fcd95cab729fedf5660943120be0c27469f7189cd72bafcf", 
                    "7aa3405eef781402f00fa2336497defd793db6e9da8d36dc9ebe88f19bb03708"
                ], 
                "clang_-O0": [
                    "4d64132c22bc74ea0daf80c946d0c894e2df8ed3a79661697c8c81b9ba137f4d", 
                    "1d6b7e9260bc3ded828544617e180bb1dad908a78ef669ec2b13df9c589e13b0"
                ], 
                "gcc49_-O0": [
                    "208d7ceb32b1d0a57ea8f0d4cadd9c18ebf1f7bdba1c8cf248d8200d810e9ef9", 
                    "6047dec26e3f19841f1aab54c12a269d5b9f55655f641a5e67c6cd73e94b97ad"
                ], 
                "scala2.11.11": [
                    "bc:sJ0itFEpdAczuSvDqMDHr6fj3-PWlpYdUbaTKlO9wic_pr:none", 
                    "bc:BUhtZmp0EyffpfFuS-_wC5dlYEGYnTS1ANupBkCKww4_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:JB08ngmkN4bpg5TlGddE5nI_CBLrQ3puwnZDZEzv9uM_pr:none", 
                    "bc:BqMn6Gq3z1wjbaQnMBE72eclEjT3Mzvr4lEnZvFaCXg_pr:none"
                ], 
                "gcc49_-O3": [
                    "6dfcc3506f8bc9de2190aaa7d5896acc4cd2f4590d95585d41fea189461283ef", 
                    "0dacd9c28b57291af107b0446cd060fc62f56acf430992083aff0d680744b014"
                ]
            }, 
            "note": "trying to cover llvm -sccp example: https://gcc.gnu.org/news/ssa-ccp.html", 
            "input_types": [
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "int neg = 0; if(input0<0){neg=!neg;} if(input1<0){neg=!neg;} if(neg!=0){ input2 = -input2;} return input2;", 
                    "scala_code": "int ret = input2; boolean neg = false; if(input0<0){neg = !neg;}; if(input1<0){neg = ! neg;}; if(neg){ ret = -ret;}; return ret;", 
                    "java_code": "boolean neg = false; if(input0<0){neg=!neg;} if(input1<0){neg=!neg;} if(neg){ input2 = -input2;} return input2;"
                }, 
                {
                    "code": "if((input0<0 && !(input1<0)) || (!(input0<0) && input1<0)){ return -input2; } else {return input2;}", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "dead_code_elimination", 
            "program_hashes": {
                "clang_-O3": [
                    "42312cbb045f127a5db33b0b8ab3fa2b099c3b5805173f6b58b0026f15bb9533", 
                    "42312cbb045f127a5db33b0b8ab3fa2b099c3b5805173f6b58b0026f15bb9533", 
                    "42312cbb045f127a5db33b0b8ab3fa2b099c3b5805173f6b58b0026f15bb9533"
                ], 
                "clang_-O0": [
                    "c852703c073a788dcb9ba9cc1c9dfb49a32697dd401ee3a97c71412770f1b724", 
                    "53cdc0d23da3e95b0e03be4599fe7e5ee50682af00edffc9a06cac84ec4f9b33", 
                    "9929f59e02bfcdc2639a9abc38efbc142b3b4a3e15da9ef7ffb0435ccb86b7bf"
                ], 
                "gcc49_-O0": [
                    "5e761355040f823fa9ce05e0028b6fc3e33626ca4f3c97d32c49d15e382e8365", 
                    "8b55791b0c9a1cbe5d0aeea7a745e810a8cdce3b25bbcfaa3db6f084d80f0a78", 
                    "c76cea7d64410004ec43bc2687a39c6e8724dc1a88824e1fcb6a2867283047c8"
                ], 
                "scala2.11.11": [
                    "bc:ENDTyN5ojyiO2DmHERe0gpURhhmkHG1yue-DF0N6pxA_pr:none", 
                    "bc:QzplrMqNzRWIh7e4gZeTic9Mw0F2C5-UTH6e_25W2Wk_pr:none", 
                    "bc:wKp5GG3nBKkTs9AQj3NuY98n4KwtIsOCWQ_ms3bCaxM_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:m_3Snbr9O9AxFxxWXIkeP37q1IZ8YHfOo8n0qMfNgfA_pr:none", 
                    "bc:u-nZBMLOS11YfxLkyIK54dLATFYidcqOCgkGjafAA7A_pr:none", 
                    "bc:6YXbwT0oGMYChw2_HNzCSntL9g1COG-PYDr9v7qUKf0_pr:none"
                ], 
                "gcc49_-O3": [
                    "f97082f8e844af82ec5bfbfb565e95640cd667b713ffee9a5a2d4616c5da8aeb", 
                    "f97082f8e844af82ec5bfbfb565e95640cd667b713ffee9a5a2d4616c5da8aeb", 
                    "f97082f8e844af82ec5bfbfb565e95640cd667b713ffee9a5a2d4616c5da8aeb"
                ]
            }, 
            "note": "trying to cover gcc -fdce -ftree-dce and llvm -adce. example from gcc/tree-ssa-dce.c", 
            "input_types": [
                "int*", 
                "int*"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "return input0[0] + input1[0];", 
                    "_idx": 0
                }, 
                {
                    "code": "int x = 100; return input0[0] + input1[0];", 
                    "_idx": 1
                }, 
                {
                    "_idx": 2, 
                    "code": "int x = 100; for(int i=0; i<x; i++){ if(i==101){ return x; } } return input0[0] + input1[0];", 
                    "scala_code": "int x = 100; for(i <- 0 until x){ if(i==101){ return x; } }; return input0[0] + input1[0];"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "dead_store_elimination", 
            "program_hashes": {
                "clang_-O3": [
                    "48887b7bba63665274f0a1e392b2def5053a84f0eb83a15bdf7fa7f6d61a2dc6", 
                    "48887b7bba63665274f0a1e392b2def5053a84f0eb83a15bdf7fa7f6d61a2dc6"
                ], 
                "clang_-O0": [
                    "b5fc0c24c963cccfdb31b40f8b88470c6cc60b50e587ab712cc1fc15b09d65da", 
                    "1c8521b368b7d28ad0e25fefffc35146ff17a6274245b094f32719d636960685"
                ], 
                "gcc49_-O0": [
                    "411501c8c96414c3d542000f439ac1e2a368b77a995780de3e43393009680383", 
                    "3a18e9f2e89a62922228fa242c0d93f0b4785b3090274665561b4fe0fdbba68b"
                ], 
                "scala2.11.11": [
                    "bc:o7UPq0O_j6LjqCvhB7L89zbfl3m5BhdbtSdRfDOfijk_pr:none", 
                    "bc:F1VOagwRI470iwlL7xx59Jid0h10IdspmcY6b5Jtrow_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:NQreRRAR_hSFGAI4yLvLEijO36pdvyvQR1suZ-aXszk_pr:none", 
                    "bc:ff70rSVot2uphSxjq6IxB2z8-Dxk1wz8BzCE34EsiMk_pr:none"
                ], 
                "gcc49_-O3": [
                    "8705e66062633e8591bc9643c322af5f3f88f19b88b61203d5aac84d614a66ad", 
                    "8705e66062633e8591bc9643c322af5f3f88f19b88b61203d5aac84d614a66ad"
                ]
            }, 
            "note": "trying to cover gcc -fdse -ftree-dse llvm -dse. see gcc/tree-ssa-dse.c", 
            "input_types": [
                "int*"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "code": "input0[0] = 200;", 
                    "_idx": 0
                }, 
                {
                    "code": "input0[0] = 100; input0[0] = 200;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_unswitch", 
            "c_header": "void extern_do_pos(); void extern_do_neg();", 
            "scala_class_header": "@native def extern_do_pos(); @native def extern_do_neg();", 
            "note": "trying to cover gcc -ftree-loop-optimize and llvm -loop-unswitch. example from gcc/tree-ssa-loop-unswitch.c. functions are not marked pure on purpose", 
            "input_types": [
                "int", 
                "int", 
                "int*"
            ], 
            "program_hashes": {
                "clang_-O3": [
                    "2e09f7776f752517de63ef754f4f32273d372ee147114e0b02f7550d9008f9a0", 
                    "415fb545c69f3bee8349717c4b43ced8dbf2a00637f3523d4f0bb49730dfd47c"
                ], 
                "clang_-O0": [
                    "8dae4b9401c245a55071a1a1158b011f99ca3ae47cbb4f53f659be06c6ae4c12", 
                    "dc50ad5cce05bd73e7625746fd029f9d3acfca34d3bf7dad6d69569a323774d1"
                ], 
                "gcc49_-O0": [
                    "b07625c875b56089a8df59f6cebe6f5f170ef541f60d879bb72a01f2f8859d02", 
                    "1d68a9b5d593f8714af27400a168026a7e5a122994dcb6036d5470b7ef16a3f6"
                ], 
                "scala2.11.11": [
                    "bc:vVQA9VM4ey3o1Sp1XTjLzBsqrcA04k7TfT-I8vZyYAM_pr:none", 
                    "bc:ujGQKtlB4ySqQzKnSH808BWkOfL6wP2lW0qO3TVIOVw_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:9pkUq2IKzckXuKdGMnItiC7xpYGAwS7LBSsXVDLvOWM_pr:none", 
                    "bc:dXf1Bs7aZdy7h-9qWus2aWyLASGFJLXbqP36xdTnOm4_pr:none"
                ], 
                "gcc49_-O3": [
                    "d4aab92a696c38d23bc4174243cb39351f95912aa309774a1d37da9a34ef42f5", 
                    "974d706edddfa4bd3b262bda8d379746969375c3c14698cdd42f4c3652a8a2a5"
                ]
            }, 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "for(int i=0; i<input0; i++){ if(input1!=0){ extern_do_pos(); } else { extern_do_neg(); } } return 0;", 
                    "scala_code": "for(i <- 0 until input0){ if(input1!=0){ extern_do_pos(); } else { extern_do_neg(); } }; return 0;"
                }, 
                {
                    "_idx": 1, 
                    "code": "if(input1!=0){ for(int i=0; i<input0; i++) extern_do_pos(); } else { for(int i=0; i<input0; i++) extern_do_neg(); } return 0;", 
                    "scala_code": "if(input1!=0){ for(i <- 0 until input0) extern_do_pos(); } else { for(i <- 0 until input0) extern_do_neg(); }; return 0;"
                }
            ], 
            "java_class_header": "public native void extern_do_pos(); public native void extern_do_neg();"
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_unswitch_harder", 
            "program_hashes": {
                "clang_-O3": [
                    "36c16ade39ffdf1bf647a3385e13bf04d6d2289c7be5ec9b1803c2cad9db9659", 
                    "6b0513c928f9fc150dc4bfd4e44af7239cd6da067bc3435da4839a54f20594e2"
                ], 
                "clang_-O0": [
                    "5b9842310dc82e4d2550a16d07825162f85c358d4a07362dadf0694ef61bc9d4", 
                    "24075ea952562e546d5d19aada243557f62ef693e7b2e375050791680a5a61e3"
                ], 
                "gcc49_-O0": [
                    "0c794382accd5b90e54e8c4b10b00897997f9cf3d2cd0b0677e1a83b03191240", 
                    "0296a6386bc17a46c87840945d4985e3199a154317dcc5f5a004b6bcd52f075a"
                ], 
                "scala2.11.11": [
                    "bc:9ivMMcn1i8kFXC0zOmohfV2q-bk2uZEgcHJzWyMU6U0_pr:none", 
                    "bc:9e82sduF7QNukr-RrYOtRwLBUj2cEpN4kVtWKbXuQ_Q_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:2TGbUdXrrzN4DVjMpjeMlMlNGL1ucYUx_Yia5QpNq7E_pr:none", 
                    "bc:eZEIxtKTjldBzK_3EfoolsBKarXbaj8diVCNRewB-wY_pr:none"
                ], 
                "gcc49_-O3": [
                    "990616c0b30ba0ff989afebd9284661ade273123fdbd8f034f9c84e450fff3ba", 
                    "0d4ac616131995b335b600dce2e109993c5aa9a45100aead58526c1c283879d4"
                ]
            }, 
            "note": "trying to cover gcc -ftree-loop-optimize. example from gcc/tree-ssa-loop-unswitch.c TODO revisit", 
            "input_types": [
                "int", 
                "int", 
                "int*"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "int x=0; for(int i=0; i<input0; i++){ if(input1!=0){ x++; } else { input2[i] = x--; } } return x;", 
                    "scala_code": "int x=0; for(i <- 0 until input0){ if(input1!=0){ x += 1; } else { input2(i) = x; x -= 1; } }; return x;"
                }, 
                {
                    "_idx": 1, 
                    "code": "int x=0; if(input1!=0){ for(int i=0; i<input0; i++) x++; } else { for(int i=0; i<input0; i++) input2[i] = x--; } return x;", 
                    "scala_code": "int x=0; if(input1!=0){ for(i <- 0 until input0) x += 1; } else { for(i <- 0 until input0) input2(i) = x; x -= 1; }; return x;"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_splitting", 
            "program_hashes": {
                "clang_-O3": [
                    "86adab01f90be18689af404cd1990d678d169bb4d825b64157f07bcf45c16a5d", 
                    "c3f6ce40b2a4139ed25d35ab82b3453bfcfaf65bf8614a9cefda6e6ced22fa6b"
                ], 
                "clang_-O0": [
                    "b5d65733807da21a17537a7bb4cdefbc0a2c868ff9551b508803aeed9c9c42fc", 
                    "fcdf9829ea9d49da835c0c303952b257232b8f0a101823975dc581f3bb0dc47e"
                ], 
                "gcc49_-O0": [
                    "9820571ea09c31de44c05200fac4f0f34d6af56f801e4a02496e99520afcab23", 
                    "cc31937c1910a4e76c284214f940439dac883088e0eb134a0a98a5cf4791965b"
                ], 
                "scala2.11.11": [
                    "bc:18y4H84sKu3nBsAHrCr5nTEiCllCflVrIMZ3cVRcGrk_pr:none", 
                    "bc:ZJDT4tMOn-czvTi6ck2IPO1ULi6BdSacYiyiz9BTzkw_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:1__dq-Foo6V90OsJRDhonLzT47hk2pfhHgFHJm0zrQ0_pr:none", 
                    "bc:G-5CYuGAEmeO5gCGHKOxt7z6qSE_DMhPOAvwOggotNk_pr:none"
                ], 
                "gcc49_-O3": [
                    "41a2db4384cd63054739dd7e723534d4e3df218a6123e4d9c3438d6278359ffa", 
                    "affa6351d2deccfe8f8236a60942613e6c49058109623770c2f6374b140b75ca"
                ]
            }, 
            "note": "trying to cover gcc -ftree-loop-optimize and llvm -loop-simplify. example from gcc/tree-ssa-loop-split.c. WOW this is weird on older clang/gcc, godbolt shows newer clang/gcc are ok", 
            "input_types": [
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "int x=0; int i; for(i=0; i<200; i++){ if(i<150){ x++; } else { x--; } } return x;", 
                    "scala_code": "int x=0; for(i <- 0 until 150){ if(i<150){ x += 1 } else { x -= 1 } }; return x;"
                }, 
                {
                    "_idx": 1, 
                    "code": "int x=0; int i; for(i=0; i<150; i++){ x++; } for(; i<200; i++){ x--; } return x;", 
                    "scala_code": "int x=0; for(i <- 0 until 150){ x += 1; }; for(i <- 0 until 50){ x != 1; }; return x;"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_interchange", 
            "program_hashes": {
                "clang_-O3": [
                    "d674263d7d58f0a5c81edf518670b55f6781779078bfe8675daf9f343e8754cb", 
                    "5da023ad276a37473eb520f30918c337b1a6b8050d99869242d125cbf57b5077"
                ], 
                "clang_-O0": [
                    "7da5172a30c0aa04f124a10dfd1617bcadac0b1e1c4ef20d1da1dd4121df37fe", 
                    "6202ad849884e3b3d23dc504dbc9cb850702c94081a5008d93646580e610e614"
                ], 
                "gcc49_-O0": [
                    "133f18eedb4b41e87df15cf0f68a65bd96bcaceba748bb7edf0794e819169ce9", 
                    "24b0f8352923e857144b3d2737ed3b26c4bd492984449073823005cb26092407"
                ], 
                "scala2.11.11": [
                    "bc:2j6nQ3RY223jV2tzDCPZ7a98lIfAMGnBkE7I8Hp4pXw_pr:none", 
                    "bc:ueZ0__bCzCtCaTTEV_abW_mAkg-iIcAu92uHYzWkJqo_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:3bgl8rsuJwMGaUJP53qIk6DHAtUDLBL91KudsUYa0go_pr:none", 
                    "bc:U8NXtju4vCjbyXXKor7tpXPsPSS6x6Sa3Dz4wfBdHvM_pr:none"
                ], 
                "gcc49_-O3": [
                    "141b30bdaf64dff98d761c42dd3a7727ec4355ed8e041d38fcbcc03ed133ad62", 
                    "e983d7d8e89cf3f94c62f99e5db8dbb0070bf59a544ef2a4054452c45b5dcb73"
                ]
            }, 
            "note": "trying to cover gcc -floop-interchange. example from gcc/gimple-loop-interchange.cc", 
            "input_types": [
                "int", 
                "int**", 
                "int**", 
                "int**"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "int N = input0; int** a = input1; int** b = input2; int** c = input3; for (int j = 0; j < N; j++) for (int k = 0; k < N; k++) for (int i = 0; i < N; i++) c[i][j] = c[i][j] + a[i][k]*b[k][j];", 
                    "scala_code": "int N = input0; var a = input1; var b = input2; var c = input3; for (j <- 0 until N) for (k <- 0 until N) for (i <- 0 until N) c(i)(j) = c(i)(j) + a(i)(k)*b(k)(j);", 
                    "java_code": "int N = input0; int[][] a = input1; int[][] b = input2; int[][] c = input3; for (int j = 0; j < N; j++) for (int k = 0; k < N; k++) for (int i = 0; i < N; i++) c[i][j] = c[i][j] + a[i][k]*b[k][j];"
                }, 
                {
                    "_idx": 1, 
                    "code": "int N = input0; int** a = input1; int** b = input2; int** c = input3; for (int i = 0; i < N; i++) for (int j = 0; j < N; j++) for (int k = 0; k < N; k++) c[i][j] = c[i][j] + a[i][k]*b[k][j];", 
                    "scala_code": "int N = input0; var a = input1; var b = input2; var c = input3; for (i <- 0 until N) for (j <- 0 until N) for (k <- 0 until N) c(i)(j) = c(i)(j) + a(i)(k)*b(k)(j);", 
                    "java_code": "int N = input0; int[][] a = input1; int[][] b = input2; int[][] c = input3; for (int i = 0; i < N; i++) for (int j = 0; j < N; j++) for (int k = 0; k < N; k++) c[i][j] = c[i][j] + a[i][k]*b[k][j];"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_invariant_motion", 
            "program_hashes": {
                "clang_-O3": [
                    "4fcc03bd75ed637aba90c44733280fafa75c978f087f82a4d494ede5cfcea36b", 
                    "d427793002a22320cd9fd58db1d6a740cf487ebec1d5baca6fefe4a15412ea98"
                ], 
                "clang_-O0": [
                    "30438810b29c3fa74115c8eb8fd71f770ffd3d024bb8a4a2368cd8d8ae36cd42", 
                    "2a9c4a861787bf2d165f7cc20f0b75ebe717e8d10165a3ad7af94ada38ee2b39"
                ], 
                "gcc49_-O0": [
                    "b1efb8c890b637a5c1759cbde914b82b30ff7437fcc710c1b236088979598dcc", 
                    "d104dae31e11187b8e34a1ab9b56f7229b021abdb9dae074097bcf2972d7924d"
                ], 
                "scala2.11.11": [
                    "bc:_O3Qd2chAR3CakHqcvnH4PrUg4hA79v9csoG8lbdDh0_pr:none", 
                    "bc:N8EaJQp71hf9cpnQn0kbRbNAHOLoFC0jNUJ4cHKSvGI_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:FQirmBCA8fBS4reF_rj6uRTVJeVuvV-Cab0MBljnJqY_pr:none", 
                    "bc:QOBdE4tY442XJJF9mCbCy0IyIev4_-qe8pdtOKBnppc_pr:none"
                ], 
                "gcc49_-O3": [
                    "f1860939f1f4f8c21199d86411ac135466c409dbfc8298bdcffde337936a4a12", 
                    "97e4a08842f146d8ef84066e68a1d4980e78fc54ae7feca13ce4e68bdf700e48"
                ]
            }, 
            "note": "trying to cover gcc -floop-im and llvm -licm. example from gcc/tree-ssa-loop-im.c", 
            "input_types": [
                "int", 
                "int*", 
                "int*", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "int a=123; for (int i=0; i<input0; i++) { if (input3!=0) { a = input0; input1[i] = input2[i]; } }; return a;", 
                    "scala_code": "int a=123; for (i <- 0 until input0) { if (input3!=0) { a = input0; input1(i) = input2(i); } }; return a;"
                }, 
                {
                    "_idx": 1, 
                    "code": "int a=123; if(input3!=0){ a = input0; }; for (int i=0; i<input0; i++) { if (input3!=0) { input1[i] = input2[i]; } }; return a;", 
                    "scala_code": "int a=123; if(input3!=0){ a = input0; }; for (i <- 0 until input0) { if (input3!=0) { input1(i) = input2(i); } }; return a;"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_iv_strength_reduction", 
            "program_hashes": {
                "clang_-O3": [
                    "60800c3ddf37486e6f2292f86740b857c6884530f0b1a89e29f5a4668a71a275", 
                    "7f0706a060bc6ca98bc0f97bd3bae5e116b84fedc694973f4f38215baffce071"
                ], 
                "clang_-O0": [
                    "c1b0bb6a1c18d746de44aa1492def324b7855459836091b83c90cdbbb86fddea", 
                    "16170f11891dded81053e8402fd49605c70f22c4efd37b607fbb182e0a2aeafb"
                ], 
                "gcc49_-O0": [
                    "84c653e88b9a981759317ab56a5b60024fdaa4d72c71413e7c70aca75df3defd", 
                    "8fe27e86a800e94f22f4382bba1767bfd814e2b8795d80051751d61cedbeb807"
                ], 
                "scala2.11.11": [
                    "bc:Z03ywRCO05f6RfTkifqnU4QsSVDuNSCm1wk_H0DZoKA_pr:none", 
                    "bc:Ka6sRL3X6R1sH3Gv2rCfUbx3BThtrFYOVMXtIqYKrx8_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:Auc_m4JXTpYlbazlhW6PKER-J873LVXDkM3DLupXmfo_pr:none", 
                    "bc:_QvMxirVfU-MB-PU_44sUFAkbz-aVSzp9-d8f3Zf0so_pr:none"
                ], 
                "gcc49_-O3": [
                    "e935627b25d0e35671e346bda74d1aab4ec222a7eb03de18dc7d4e4e40b08466", 
                    "e935627b25d0e35671e346bda74d1aab4ec222a7eb03de18dc7d4e4e40b08466"
                ]
            }, 
            "note": "trying to cover gcc -fivopts and llvm -loop-reduce. example from gcc/tree-ssa-loop-ivopts.c. for godbolt, adding return 0 seemed neccessary to get the code generation right. weird. behaves better in newer clang versions", 
            "input_types": [
                "int", 
                "int*", 
                "int*"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "for(int i=0; i<input0; i++){ input1[i*8] = input2[i]; }; return 0;", 
                    "_idx": 0
                }, 
                {
                    "code": "int y = 0; for(int i=0; i<input0; i++){ input1[y] = input2[i]; y += 8; }; return 0;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_iv_variable_merging", 
            "program_hashes": {
                "clang_-O3": [
                    "e687b3b6f4588436420eb315b3bc3494da9928dcae94323c11623f526c5a0d0f", 
                    "e687b3b6f4588436420eb315b3bc3494da9928dcae94323c11623f526c5a0d0f"
                ], 
                "clang_-O0": [
                    "e4bbacba4fcf73a2dfd6d2b4bcea39cbc648bd4da3698b72da5b29d8a45d36fb", 
                    "274d511870fdf61a3ea42b492271e28d517e58ddf0c8f777b89396b6838951a2"
                ], 
                "gcc49_-O0": [
                    "882af2119367c7a77e77c167f3afb0cfc0eda66061444e7abb4b3e1e9cd3d048", 
                    "b8b9eb3130c18dcdb7bd8e6a91898ca07ea46b7564331a022088440836e3459d"
                ], 
                "scala2.11.11": [
                    "bc:tfwgUzN39TpfKjTiSv-hC5WUCihukT04wNC8sNmMTjA_pr:none", 
                    "bc:MNtVKuR345smmE03_mK-RBtYFRCy6nruYB7cDqDm5_E_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:P6pVwjm04t-mHoc396GZSXPt7y0PmhPkBwT4EIzK5wM_pr:none", 
                    "bc:02eA3TEVdPPjspKSxh6yfOz6q0BnkYhYep3xBpBBu0g_pr:none"
                ], 
                "gcc49_-O3": [
                    "c2b468857a23b0aefba494e5a73dbf46dfc92ca0d7a81cd579a5899a5c05489e", 
                    "49ec203a08eab565e23254daaa40f4fb4f727825e50537ad29b3c79836b5f573"
                ]
            }, 
            "note": "trying to cover gcc -fivopts. also covers llvm -indvars. example from gcc/tree-ssa-loop-ivopts.c", 
            "input_types": [
                "int", 
                "int*", 
                "int*"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "code": "for(int i=0; i<input0; i++){ input1[i] = input2[i]; }", 
                    "_idx": 0
                }, 
                {
                    "code": "int y = 0; for(int i=0; i<input0; i++){ input1[y] = input2[i]; y += 1; }", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_iv_variable_elimination", 
            "program_hashes": {
                "clang_-O3": [
                    "eca65c79c8a7381a8dc0145cfc42120e059d41fd0d471323c8da68059fb300d6", 
                    "eca65c79c8a7381a8dc0145cfc42120e059d41fd0d471323c8da68059fb300d6"
                ], 
                "clang_-O0": [
                    "01fa94601c249b28d32be25ddf8f60757a3ec5b6c056ec0428e1d645a6e9d4ad", 
                    "360777ecba49a961d41d32234fc188784896b1e6a40c191705d4c744b9c48673"
                ], 
                "gcc49_-O0": [
                    "8ad5db5b22f2ce942c54b3bde4c1bba4aeaf14d9b9661599fb69dc1d4e68e597", 
                    "b22df1f7c9513247bc480dcbb16b2f23f805e30b8f102121e930e17a43688609"
                ], 
                "scala2.11.11": [
                    "bc:1d4BoyBYuI7eJBJvQc8lUNkY0chRTGLIIB_HmzeDl2o_pr:none", 
                    "bc:N4Oi_wBHm-Hcg4j58lPowqR2FHP1nr3pcWb3haulOQY_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:Q2cqnJWfZuhbf_uV2tvKOsh7fMN1aHATxK9FLkZOpUk_pr:none", 
                    "bc:jGtfmjQ-0PogBjqQ5X3InafUwFm1Z7rluFgvRJLc-dM_pr:none"
                ], 
                "gcc49_-O3": [
                    "bcf0b739c75714e7a359d1ca218be2c3a31a7eb8a2553a11f1305bff66d1a219", 
                    "aca2b804daf92623c5536494db249650cafd3d67a653364248072ac9828ad1a1"
                ]
            }, 
            "note": "trying to cover gcc -fivopts. also covers LLVM -indvars. example from http://www.nullstone.com/htmls/category/ive.htm", 
            "input_types": [
                "int", 
                "int*", 
                "int*"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "int i1; for (i1 = 0; i1 < input0; i1++) input1[i1] = input2[i1]; ", 
                    "scala_code": "int i1=0; for (i1 <- 0 until input0) input1(i1) = input2(i1); "
                }, 
                {
                    "_idx": 1, 
                    "code": "int i1, i2, i3; for (i1 = 0, i2 = 0, i3 = 0; i1 < input0; i1++) input1[i2++] = input2[i3++];", 
                    "scala_code": "int i1=0; int i2=0; int i3=0; for (i1 <- 0 until input0){ input1[i2] = input2[i3]; i2 += 1; i3 += 1; }"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "loop_iv_canonicalization", 
            "program_hashes": {
                "clang_-O3": [
                    "ad967482534f4a442c13613b9587dad4a7f521062364667ac648f2df38c4daca", 
                    "ad967482534f4a442c13613b9587dad4a7f521062364667ac648f2df38c4daca"
                ], 
                "clang_-O0": [
                    "57a58328ba949e624609ab74b9544cb5efebdec8dcbf0a6015015cf5e7fac4a1", 
                    "5287f85c3c625d93f1ef75e0c08331157b491aa25265f47c79875ec714f6fbe1"
                ], 
                "gcc49_-O0": [
                    "699d59a3fc3b44749992fdb0900e55fb95a8fc6073ad9d107ee7f304d1ee7303", 
                    "5a75d222297f6b56fa758a2124498e8fd661fa711f414bee43a0514d7d998624"
                ], 
                "scala2.11.11": [
                    "bc:IX_E-O0O-f0EpjLvTP3ULtvtraUUINui6BcgS1-iEZk_pr:none", 
                    "bc:vC7nlU2g8w7_df_ZUPE6y5WHeTLjgLXjbxryuGrPQ4Q_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:0n-nM5JgOu7gpRfRS4GAI-p6fM0bxTjdlL8QIkfPfGU_pr:none", 
                    "bc:W6KLvMaOHC9kwk59WLHsE_nwuat9oDPHBup4aKqoys8_pr:none"
                ], 
                "gcc49_-O3": [
                    "28dcd4f778c07b320a02065bcff322927dd124f3640d7faba985ecf6b275ff55", 
                    "a3b6d755aeb3e523df6b3f7b1e06929b89e1e8c017e1ffcf12c55afa9d7db2e7"
                ]
            }, 
            "note": "trying to cover llvm -indvars and also -loop-deletion. example from http://llvm.org/docs/Passes.html#indvars-canonicalize-induction-variables", 
            "input_types": [
                "int", 
                "int*"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "_idx": 0, 
                    "code": "int i = 7; for (; i*i < 1000; ++i) input1[0]++;", 
                    "scala_code": "int i = 7; while(i*i < 1000){ i+=1; input1[0]+=1; }"
                }, 
                {
                    "_idx": 1, 
                    "code": "int i = 0; for (; i != 25; ++i) input1[0]++;", 
                    "scala_code": "int i = 0; while(i!=25){ i+=1; input1[0]+=1 }"
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "straight_line_strength_reduction", 
            "program_hashes": {
                "clang_-O3": [
                    "d764d38df0cdf1229419118df2dd21aaf4f5061420e23415ffbb66b790bb26cf", 
                    "d764d38df0cdf1229419118df2dd21aaf4f5061420e23415ffbb66b790bb26cf"
                ], 
                "clang_-O0": [
                    "68dae687e1046457cdd743dfd585a978aad0d21783cc36d4a9fda8a4ed72d992", 
                    "39000c76291c0722d8bc18b367b036544beb800b90a0b2c52a6cf807f075c56f"
                ], 
                "gcc49_-O0": [
                    "950bf7d4ccf94967c52a0f62276c7f2b1847af09c04676ebd892753165eb028f", 
                    "097dbc748be10e0a7c623f91d35ad749725ee40902184b17d93a08cf5d4d7bbd"
                ], 
                "scala2.11.11": [
                    "bc:91k8fixPqWbGaPjd8N-ZMl3gBjY3Yu6jeuYCS9jnwnA_pr:none", 
                    "bc:rnnNonQwRHQFHgIi253ATlXHOP7zSY8uLTWXahszoaE_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:Ocp69Jf5R08YdX224wCYYXgeyxRma1llSL-GC6tDCa8_pr:none", 
                    "bc:8VP5aXXahGhF6MzsPnmLeYsnACKA8_8RRAyo9c7mH8k_pr:none"
                ], 
                "gcc49_-O3": [
                    "79bb88db8d2fd93e9eaf60c3a593c7a229249e13ad805484414eab335062ee91", 
                    "79bb88db8d2fd93e9eaf60c3a593c7a229249e13ad805484414eab335062ee91"
                ]
            }, 
            "note": "trying to cover gcc -ftree-slsr. example from https://gcc.gnu.org/wiki/cauldron2012?action=AttachFile&do=get&target=wschmidt.pdf", 
            "input_types": [
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int a = input0; int c = a+2; int d = c*2; int e = a*2; int f = e+4; return d + f;", 
                    "_idx": 0
                }, 
                {
                    "code": "int a = input0; int c = a+2; int d = c*2; int e = a+2; int f = e*2; return d+f;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "value_range_propagation_ne", 
            "program_hashes": {
                "clang_-O3": [
                    "cc831d932501499cb444904233a344dd9547a47bd7635ce2b8b71d5f4e88e883", 
                    "cc831d932501499cb444904233a344dd9547a47bd7635ce2b8b71d5f4e88e883"
                ], 
                "clang_-O0": [
                    "aba20011cf1a2f1b773fb838dec5866791c593ac28ce88eeee13b9875ccbf6cd", 
                    "ed255cdc0e185b1881c82046c1a91644428c6ec70ed349626cb806cba111a979"
                ], 
                "gcc49_-O0": [
                    "ee8e7a8a56692a7ea995368835ea11df1505fe96021ceda088bc0fb1c8900407", 
                    "797bf8308acdd93bd3bea35a3b68401cf1d50fe4e0cc707a964d4a2eb29020f1"
                ], 
                "scala2.11.11": [
                    "bc:v5A22TFAwx_15ZsI0CppjMbv1KyL0lIjFFDBrm6_FEE_pr:none", 
                    "bc:UL9E0iZOkPn0o5OMCYF4ohPHsrn9hFHTaafkEZnElKM_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:CfkanTNTBFdEVy8D1q3Gx_itaaJPKJcrLE2mPkGyKj4_pr:none", 
                    "bc:If1Nz181yIu-v259Ny2UznKGLNxtTgiNwG1RTZUuchY_pr:none"
                ], 
                "gcc49_-O3": [
                    "d1654ebd47187432c951fd8cfe7e6300d31cc18e273af9f599a1dfa61ba17123", 
                    "d1654ebd47187432c951fd8cfe7e6300d31cc18e273af9f599a1dfa61ba17123"
                ]
            }, 
            "note": "trying to cover gcc -ftree-vrp.c, purposeful unreachable code where first condition subsumes second. example: https://llvm.org/devmtg/2007-05/05-Lewycky-Predsimplify.pdf", 
            "input_types": [
                "int*", 
                "int*", 
                "int", 
                "int"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "code": "if(input2 != input3){ input0[0]+=1; }", 
                    "_idx": 0
                }, 
                {
                    "code": "if(input2 != input3){ input0[0]+=1; if(input2 == input3) input0[1]+=1; }", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "value_range_propagation_eq", 
            "program_hashes": {
                "clang_-O3": [
                    "9f264cc4095f95c0fb171589b9a049926e934f6e9ca8c6a83125c549a449d196", 
                    "9f264cc4095f95c0fb171589b9a049926e934f6e9ca8c6a83125c549a449d196"
                ], 
                "clang_-O0": [
                    "6e689f1e7773c2c042678f230efec2c1acef8084d415867329fa9c48e317b8eb", 
                    "cb04dfb380487f258b1b38b199aac3e590ece721fd338a70f9e58e0e24186bb1"
                ], 
                "gcc49_-O0": [
                    "4998be62c84c6601d645150d92ec4163b3345aab8e9fcda7f947a1aef1488b4f", 
                    "00afcb26d81b32ca58725226ed2411312c867c210ee19fcca1e152f4de9d474e"
                ], 
                "scala2.11.11": [
                    "bc:dLarKdoFN06fccWokJ99rAMBMLcD4rYR8pQQbPojrSk_pr:none", 
                    "bc:24o29dr2uOwVrxK2Mfbw-EMveUC1JBiN63pNjsUMuT8_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:ukgEeWcuiVLm-UDQQPRwABI4I8KN8YBIgmKI_g611Bo_pr:none", 
                    "bc:2bcyty6dKVYOGxBzbxc7fjBP7zT_GjxkLRPun9iNo0I_pr:none"
                ], 
                "gcc49_-O3": [
                    "e1137ee68ac89f9a288b131c5671bb5eb7ae708fef0a523df5b08b4609682766", 
                    "e1137ee68ac89f9a288b131c5671bb5eb7ae708fef0a523df5b08b4609682766"
                ]
            }, 
            "note": "trying to cover gcc -ftree-vrp.c, example: https://llvm.org/devmtg/2007-05/05-Lewycky-Predsimplify.pdf", 
            "input_types": [
                "int*", 
                "int*", 
                "int", 
                "int"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "code": "if(input2 == input3){ input0[0]+=1; }", 
                    "_idx": 0
                }, 
                {
                    "code": "if(input2 == input3){ input0[0]+=1; if(input2 != input3) input0[1]+=1; }", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "value_range_propagation_lt", 
            "program_hashes": {
                "clang_-O3": [
                    "29c9f34a9c868c15ad990d7240889cf90eaa5482248078ffc5ae07a90369e62a", 
                    "29c9f34a9c868c15ad990d7240889cf90eaa5482248078ffc5ae07a90369e62a"
                ], 
                "clang_-O0": [
                    "d564303af9e807507c88b1a1b1c991587970f86fe077df19204fc89a7204de98", 
                    "d0ac453dc3eafabf17fcd843092a3438f8a22dada3a781f21c71a8c4446b3c3e"
                ], 
                "gcc49_-O0": [
                    "f7f67b48293fdda3c849c3a4116e40fec39a4d11f33947e7c1bac4293b8a64e9", 
                    "6b2e61238a8e13cbd809b04f5c4fb51450433bbd88e8af5ce88756f6b00ea54c"
                ], 
                "scala2.11.11": [
                    "bc:AHzRXSXOBE0BfC9_RRxV0RE21QK-gF88D_c2mumxWgE_pr:none", 
                    "bc:D0afXKCH1UOPCJ4F8NB-wX-ZDoq30cvPKD8qMl_DGbs_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:hRzwA1bHRbGOf2ZydR_gysf0klSFhoR1J1twE88RNA8_pr:none", 
                    "bc:-F9zrNDX3bYt7_lYlrrSXwxwnkgazsI3D4q2QrAEiVU_pr:none"
                ], 
                "gcc49_-O3": [
                    "a43c6f8e4da1646b12c1dcdb99244cc8d712ce2110dae3a122514d414bc264d5", 
                    "a43c6f8e4da1646b12c1dcdb99244cc8d712ce2110dae3a122514d414bc264d5"
                ]
            }, 
            "note": "trying to cover gcc -ftree-vrp.c, example: https://llvm.org/devmtg/2007-05/05-Lewycky-Predsimplify.pdf", 
            "input_types": [
                "int*", 
                "int*", 
                "int", 
                "int"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "code": "if(input2 < input3){ input0[0]+=1; }", 
                    "_idx": 0
                }, 
                {
                    "code": "if(input2 < input3){ input0[0]+=1; if(input2 == input3) input0[1]+=1; }", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "redundant_load_elimination", 
            "program_hashes": {
                "clang_-O3": [
                    "35b75fe718cdfd65f2a0c486c598d8dc0d0b3e23e93bc43c0267a51152213a56", 
                    "35b75fe718cdfd65f2a0c486c598d8dc0d0b3e23e93bc43c0267a51152213a56"
                ], 
                "clang_-O0": [
                    "aa33e61459a419c7407e0d4a01e8edaaefe73e435ac3ccb6f17de4b0849a0891", 
                    "037b955ea60f6d333e189b88b1abab6c006acd4d2ba1a1afc224dbb221616df7"
                ], 
                "gcc49_-O0": [
                    "37fedb35480ae672453c96d77e483b43b6b4e74ae3ca9765f177b5266dc555d1", 
                    "2755123990aba6446e6317c17bd89dc73d34ae49ed4f4c95fd921cb5c6e1c873"
                ], 
                "scala2.11.11": [
                    "bc:LaO-1rE4Okojk-iau2ZaPudk7oyXzCUcQPqNub97UBg_pr:none", 
                    "bc:yI9AmEZv9kHCuLIVnMBQNnJ7ef1GFuXrRPzngdFwr5o_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:KhNY5l7UWrcBWRZr-3iSyucwU1rUZioaHm7FhTKrToE_pr:none", 
                    "bc:RAB7zNxpTIaZY_huIaHUBUGB6s11iFyjRQKy_uNb5hk_pr:none"
                ], 
                "gcc49_-O3": [
                    "877e60b823a0ee2d88f83f9fc32008d707e2af734d1b1ca9fef301ddda115066", 
                    "4dbf0ce678637a5ac6631bec664e385576edda676c8d9eb69f3451ac3554b85a"
                ]
            }, 
            "note": "trying to cover llvm gvn redundant load elimination", 
            "input_types": [
                "int*", 
                "int*"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x = input0[0]; int y = input1[0]; int z = input0[0]; return x+y+z;", 
                    "_idx": 0
                }, 
                {
                    "code": "int x = input0[0]; int y = input1[0]; return x+y+x;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "compiler_survey", 
            "return": "", 
            "name": "jump_threading", 
            "program_hashes": {
                "clang_-O3": [
                    "ce55037f63f20800dd9aff6dd029c097ddae0a360396a6cc2847c3441fdc292c", 
                    "ce55037f63f20800dd9aff6dd029c097ddae0a360396a6cc2847c3441fdc292c"
                ], 
                "clang_-O0": [
                    "eb079ff989341f718bccf4ff5adc58d4b621a8e56e948e9e33da60ef6c759736", 
                    "03985528a902341cebb6c5fa9938243a7bf31d2ea82f211a13364cad5c149f8b"
                ], 
                "gcc49_-O0": [
                    "b2a64f369ddddec445bfb625a952a80edcf88648ac1f794797d726778b5a3512", 
                    "177268ef47f9cbfd9bb4d8c1c9bd9572f9a46c10691bb51d01dbf671ad05b445"
                ], 
                "scala2.11.11": [
                    "bc:7b5VtnwaSI0FusY_V0CMrCw6AxJL0jgh3OpDGGf8jTU_pr:none", 
                    "bc:geDfp71jOOzbF34rO5NanycrTcffrAwEOXRtKpvCvOc_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:fAwxzLKndlUx_Facm2QbZvN0PZiVJICIAPJr3pppnvo_pr:none", 
                    "bc:vCPahAxlMj_gdLMqvRf2dArFzyo1FlcDJqZaoiUFXkU_pr:none"
                ], 
                "gcc49_-O3": [
                    "5d48c39a0051310b345ebeb7c200f2e3d3744f3e160b27ccddfff4a0caa7a86f", 
                    "b3061c8387fbe80c622fea37b3d5ef78e858ccfb178f84551896d8a512b2df1d"
                ]
            }, 
            "note": "trying to cover llvm -jump-threading, example from http://llvm.org/docs/Passes.html#jump-threading-jump-threading. TODO fails on clang/gcc", 
            "input_types": [
                "int", 
                "int*"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x=0; if(input0 > 10){ x = 4; }; if(x<3){ input1[0] = 10; } else { input1[0] = 20; }; return x;", 
                    "_idx": 0
                }, 
                {
                    "code": "int x=0; if(input0 > 10){ x = 4; input1[0] = 20; } else { input1[0] = 10; }; return x;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "semantics preserving transformations", 
            "return": "", 
            "name": "for_loop_nothing", 
            "program_hashes": {
                "clang_-O3": [
                    "b6beefd67be5032b544fd1e90b614b4d784a66cf6b12a2314b7457bff1e7ee1f", 
                    "b6beefd67be5032b544fd1e90b614b4d784a66cf6b12a2314b7457bff1e7ee1f", 
                    "b6beefd67be5032b544fd1e90b614b4d784a66cf6b12a2314b7457bff1e7ee1f", 
                    "b6beefd67be5032b544fd1e90b614b4d784a66cf6b12a2314b7457bff1e7ee1f"
                ], 
                "clang_-O0": [
                    "1f93191b89528e022e1849805c7a60ea9d12abf8c2688a84ad5d76e94ba6efcf", 
                    "992de9847c82920dc0a7109ceeffb622fcc4315a605836bfa97cc601cdf499f8", 
                    "d5312bad7ff03c3f08081055e451e38f4513f0d9b9a3eb7a46c3b033746b9e83", 
                    "25ac4ba16e227ef2ae769fc2ef588339893b2def8a5a9922c5c0eb1b3fe90ce2"
                ], 
                "gcc49_-O0": [
                    "7474de02d6aeb76bf7e7b58a9e8b9cbdd0926cc08b7040cc046e535451acf2c9", 
                    "1c9ea2836410f5431cce13ecf8828a98ff8b1399604fc5418a474b415a025a02", 
                    "d96bc0257da2112de3203896d5df58559a390644bdcc103c63b99fb1fee94b25", 
                    "34f13e5f9bf2ed87ecd3127b6d2bb47c1b9b3e581f25d3e7ba2c1aea10f2b19c"
                ], 
                "scala2.11.11": [
                    "bc:fBgtl7mh6qNBe-npS-qSam6QPBmWpswipWPuS1XtcY0_pr:none", 
                    "bc:tznQNweKZAa0ZwzuGuPMFMc-totPYMGSYV-FmznCys0_pr:none", 
                    "bc:DsPB7k3YDCh1rTCAo4DLp3m-NL_NQa5jPIHEoBuGn8E_pr:none", 
                    "bc:TA85_-yFNPydUcLuOn_yBW3gdlnSIqUovhvRFo2Zhfc_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:uDy10A9YzsAWigYFcrkuY_r57mCc1rJfvFdHPokS5b4_pr:none", 
                    "bc:xvg7qIoSPdAC_l8UpF0qiuWKFTyqLWIA3hyMKbklAYs_pr:none", 
                    "bc:FRfXfkLBweiOtdgX-ZY4L_tBqQ-LhqObnFZq-Sn4dMM_pr:none", 
                    "bc:EV-z6op_kai-Um4up-NouBJCIpcOuXJR4WhQiLFvxps_pr:none"
                ], 
                "gcc49_-O3": [
                    "07d1968407656ac8b7d815aeb943f0963d7f4ae69e799ff8be5572bd60d99296", 
                    "30a95a981a803aa34c3483ee516f6633cced5cd656ed2a43cad798e25b6e3cfa", 
                    "30a95a981a803aa34c3483ee516f6633cced5cd656ed2a43cad798e25b6e3cfa", 
                    "30a95a981a803aa34c3483ee516f6633cced5cd656ed2a43cad798e25b6e3cfa"
                ]
            }, 
            "note": "interesting", 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "return input0 + input1;", 
                    "_idx": 0
                }, 
                {
                    "code": "return input1 + input0;", 
                    "_idx": 1
                }, 
                {
                    "_idx": 2, 
                    "code": "for(int i=0; i<1; i++){ return input1 + input0; } return 0;", 
                    "scala_code": "for(i <- 0 until 1){ return input1 + input0; }; return -1;"
                }, 
                {
                    "_idx": 3, 
                    "code": "int ret = input1; for(int i=0; i<1; i++){ ret += input0; } return ret;", 
                    "scala_code": "int ret = input1; for(i <- 0 until 1){ ret += input0; }; return ret;"
                }
            ]
        }, 
        {
            "origin": "tce", 
            "name": "math_post_fix_increment", 
            "skip_languages": [
                "scala"
            ], 
            "input_types": [
                "int", 
                "int"
            ], 
            "program_hashes": {
                "clang_-O3": [
                    "fbdc79d30f7931d92991e3f836853522e1965e9393569f4c09ca1a69c7a16cdc", 
                    "fbdc79d30f7931d92991e3f836853522e1965e9393569f4c09ca1a69c7a16cdc", 
                    "fbdc79d30f7931d92991e3f836853522e1965e9393569f4c09ca1a69c7a16cdc", 
                    "fbdc79d30f7931d92991e3f836853522e1965e9393569f4c09ca1a69c7a16cdc"
                ], 
                "clang_-O0": [
                    "efa807457ca7fe8de70cbbc68949b67817de6e7c1b6a0edd97d6c4abf286a824", 
                    "ef3df4d5a0dcfe301d9840fa4383d365a11f3f51357c819952cae78e71e0e6da", 
                    "eafe31d8f99ac2815e0926d8874ac3e1efddb385ba645813e1eff3bad7846e02", 
                    "b011e7d3a90c308c82fbfef884a94158ac991c301ef91f2f15bdc58b50afc0bc"
                ], 
                "gcc49_-O0": [
                    "f847239467495dc2d37c8d273ee13d11aa00afefd00f2bd5c60463e0ec5a105f", 
                    "249778f81c127052d4cb4a8605c340c65505a99b11a63b3b674f70bf86a40356", 
                    "4c8af6fdb42e0f211e1ab254943d13a396d71915c03db085ccadfaaedbc04a3e", 
                    "a7abb33fbc13e12f1978296113c49e3e6ee5eb238caf36d160b2c2903d04d047"
                ], 
                "scala2.11.11": [
                    "skipped_compiler_not_relevant", 
                    "skipped_compiler_not_relevant", 
                    "skipped_compiler_not_relevant", 
                    "skipped_compiler_not_relevant"
                ], 
                "javac1.8.0_66": [
                    "bc:uDy10A9YzsAWigYFcrkuY_r57mCc1rJfvFdHPokS5b4_pr:none", 
                    "bc:v7rFtjk1RvErcIli0uc2jIn1kP-GJl6IVYweMuNeoo8_pr:none", 
                    "bc:uHKy7HJiyHYA7GKBc3FSBvNWLSrwbyxPAPcV7xM1K3E_pr:none", 
                    "bc:e6JQX58ZclWM0wAH9GQptQQtC7YiTeCJt7nsBojyIwQ_pr:none"
                ], 
                "gcc49_-O3": [
                    "fae6e50396268fb63ff4fadc7cd59bfc9ac0630edf9dd44ff81c2ccb00c4d255", 
                    "d80a23216d89a22a8b378c99d9daea63fed418398914afe38af38214322b70ea", 
                    "d80a23216d89a22a8b378c99d9daea63fed418398914afe38af38214322b70ea", 
                    "fae6e50396268fb63ff4fadc7cd59bfc9ac0630edf9dd44ff81c2ccb00c4d255"
                ]
            }, 
            "return_type": "int", 
            "variants": [
                {
                    "code": "input0 + input1", 
                    "_idx": 0
                }, 
                {
                    "code": "input1++ + input0", 
                    "_idx": 1
                }, 
                {
                    "code": "input1++ + input0++", 
                    "_idx": 2
                }, 
                {
                    "code": "input1 + input0++", 
                    "_idx": 3
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "tce_dead_store", 
            "program_hashes": {
                "clang_-O3": [
                    "65097bccb3d556c44fce93503b1e9ba3a9d34078683cd1bc5a3c7084619375a4", 
                    "65097bccb3d556c44fce93503b1e9ba3a9d34078683cd1bc5a3c7084619375a4"
                ], 
                "clang_-O0": [
                    "2952e7ea6e4d9a702586ec0529f543c69373c5d1467fd8bd536f9fea3d877fb8", 
                    "4a04215c0dd95274f3650d8d07ee8a7cf346ebf10c4314c340722ed841e67e70"
                ], 
                "gcc49_-O0": [
                    "22233a887349c2d0919b15dd2123342ec457f647ac9bde3ff315fd881817c048", 
                    "c35ce39c7d3ee0f6511f56172bfe7c92255a236f72f0fd2568d30879920a79b0"
                ], 
                "scala2.11.11": [
                    "bc:iVK066CFFXcfrYeWKbbPEtAI1ArQSXqwPTgeqcLM-nc_pr:none", 
                    "bc:Z3YHIP4G3G_ouoyMDrEnO9XhY5t7-EBi--MWhePtPFc_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:2aOsuBO70dOmsxakpxO92S-16IzoKk8iPzOQK__sRxY_pr:none", 
                    "bc:Im-uMZtKlfRrJ2lS6hTBJEo8GEGXYn4_sbi5ctwVQVM_pr:none"
                ], 
                "gcc49_-O3": [
                    "ff5625d5187f19812258fd4ca95732281faa3bd66b4c1977af544497b72313d1", 
                    "ff5625d5187f19812258fd4ca95732281faa3bd66b4c1977af544497b72313d1"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "int x = input0 + input1; return x;", 
                    "_idx": 0
                }, 
                {
                    "code": "int x = input0 * 10; x = input0 + input1; return x;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "tce_dead_store_negate_zero", 
            "program_hashes": {
                "clang_-O3": [
                    "2b20bc68bf4bbb93fa747b87c2f919bd22513bad846e28fe149e336acdc81bca", 
                    "2b20bc68bf4bbb93fa747b87c2f919bd22513bad846e28fe149e336acdc81bca"
                ], 
                "clang_-O0": [
                    "264e35d1048d5c769832d54d0c023b29d46ba28208d899052cc5421e40332a73", 
                    "6ea65e88f6fe3a3cb6a7fc0e162e22b5e4ce3d297b071344f41a04a315d2962c"
                ], 
                "gcc49_-O0": [
                    "129243ec44587fceb9fabb6d4b197d732b3bd31903cb1750a5e5279406e2ecda", 
                    "6348870a9d3ac397edb5949982b2384a22f94c32c4388500edd84c2bc9ea88d2"
                ], 
                "scala2.11.11": [
                    "bc:omZm9Le-MtErK4vXz5CbaRyiZEGzzCTsSG0waEhJhVo_pr:none", 
                    "bc:Q-oCVj_61wOTPj9QGcoCanXxD9xKXuwDA6xTT8vQ48A_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:yAaL-6cGim1MVNmRElQkLrrXE94Ug3oglPI76YaD9R0_pr:none", 
                    "bc:x44edRZ2thd9q2MINdffA8IP_BcEzPz-XgXTO-RbOes_pr:none"
                ], 
                "gcc49_-O3": [
                    "f7379a35872399abb7e10aa32c7fa0fdcf27883f79594d8fcdaa14754400a0ac", 
                    "f7379a35872399abb7e10aa32c7fa0fdcf27883f79594d8fcdaa14754400a0ac"
                ]
            }, 
            "input_types": [
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "code": "return input0;", 
                    "_idx": 0
                }, 
                {
                    "code": "int x = 0; return -x + input0;", 
                    "_idx": 1
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "bisect_dead_store_alternate_implementations", 
            "program_hashes": {
                "clang_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "clang_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "gcc49_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "scala2.11.11": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "bc:ehcEX4eOn5AznCAnMh3_mtXgNMoM2Mgzf986US_MQxU_pr:N0cI__dxndWXnsh11WzSKG9tPPfsMXo7JWMqqyjsN7s", 
                    "bc:h5Hki_UwXvYxls-Ck2RpzMnq1ZWpZHEoyWuMP-Pnktg_pr:N0cI__dxndWXnsh11WzSKG9tPPfsMXo7JWMqqyjsN7s", 
                    "bc:0WPPNbaXOs4OA21b83lYwtUwOfWrtq1p5gz2wjLy108_pr:N0cI__dxndWXnsh11WzSKG9tPPfsMXo7JWMqqyjsN7s", 
                    "bc:3XoiSpa3IKDqEQRUwXZ2SmBvlv12MJUSl4BIwM4zBWA_pr:N0cI__dxndWXnsh11WzSKG9tPPfsMXo7JWMqqyjsN7s"
                ], 
                "gcc49_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ]
            }, 
            "input_types": [
                "double"
            ], 
            "return_type": "double", 
            "variants": [
                {
                    "variant_class": "original", 
                    "_idx": 0, 
                    "java_code": "double N = input0;\n double x = N;\n double M = N;\n double m = 1;\n double r = x;\n double diff = x * x - N;\n while (Math.abs( diff ) > mEpsilon) {\n if (diff < 0) {\n m = x;\n x = (M + x) / 2;\n } else {\n if (diff > 0) {\n M = x;\n x = (m + x) / 2;\n }\n }\n diff = x * x - N;\n }\n r = x;\n mResult = r;\n return r;\n "
                }, 
                {
                    "variant_class": "negate expression", 
                    "_idx": 1, 
                    "java_code": "\n double N = input0;\n double x = N;\n double M = -N;\n double m = 1;\n double r = x;\n double diff = x * x - N;\n while (Math.abs( diff ) > mEpsilon) {\n if (diff < 0) {\n m = x;\n x = (M + x) / 2;\n } else {\n if (diff > 0) {\n M = x;\n x = (m + x) / 2;\n }\n }\n diff = x * x - N;\n }\n r = x;\n mResult = r;\n return r;\n "
                }, 
                {
                    "variant_class": "alternate implementation", 
                    "_idx": 2, 
                    "java_code": "double N = input0; \n double x = N;\n double M = N;\n double m = 1;\n double r = x;\n double diff = x * x - N;\n while (Math.abs( diff ) > mEpsilon) {\n if (diff < 0) {\n m = x;\n x = (M + x) / 2;\n } else {\n if (diff != 0) {\n M = x;\n x = (m + x) / 2;\n }\n }\n diff = x * x - N;\n }\n r = x;\n mResult = r;\n return r;\n "
                }, 
                {
                    "variant_class": "alternate implementation", 
                    "_idx": 3, 
                    "java_code": "double N = input0; \n double x = N;\n double M = N;\n double m = 1;\n double r = x;\n double diff = x * x - N;\n while (Math.abs( diff ) > mEpsilon) {\n if (diff < 0) {\n m = x;\n x = (M + x) / 2;\n } else {\n if (true) {\n M = x;\n x = (m + x) / 2;\n }\n }\n diff = x * x - N;\n }\n r = x;\n mResult = r;\n return r;\n "
                }
            ], 
            "java_class_header": "double mEpsilon; double mResult;"
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "capitalize", 
            "program_hashes": {
                "clang_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "clang_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "gcc49_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "scala2.11.11": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "bc:37bbCCcSNi8I1-HfEIT9fjOwAxHSmXtn5c9nK6nG9Bc_pr:none", 
                    "bc:JdeSen6gC4yZ2rtVD1jws9VMuNhutm5YtfJzDDCC8N0_pr:none", 
                    "bc:bdY-KjCYvPMSvU-sjuOX1ml0j_J_HP854rAakSiInuw_pr:none", 
                    "bc:FTYvsfpT_AhHO6eRTjcbRsAUzOC3fI-uwu68IxJ2pR0_pr:none"
                ], 
                "gcc49_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ]
            }, 
            "input_types": [
                "double"
            ], 
            "return_type": "double", 
            "variants": [
                {
                    "java": "./benchmarks/java/tce_capitalize_1.java", 
                    "_idx": 0, 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_capitalize_2.java", 
                    "_idx": 1, 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_capitalize_3.java", 
                    "_idx": 2, 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_capitalize_4.java", 
                    "_idx": 3, 
                    "type": "file"
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "wrap", 
            "program_hashes": {
                "clang_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "clang_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "gcc49_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "scala2.11.11": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "bc:bZzKki08f6WWgPC4pD0hUDFoNGo-D_U_Mw_lFRmTjw0_pr:none", 
                    "bc:mY6yMpcrxq1gZLO7x9-14Yw9KMY2X3PQMKtPiTTgZbQ_pr:none", 
                    "bc:NpF7nQrv6LlkhSq0AmiNkzY-BGiIpDbGitnlIzu8cFY_pr:none", 
                    "bc:Lg9hFDEsW3CpdYwJPSAwtjWg8Y793psKhjtUdwlQZfU_pr:none"
                ], 
                "gcc49_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ]
            }, 
            "input_types": [
                "String", 
                "int", 
                "String", 
                "boolean"
            ], 
            "return_type": "double", 
            "variants": [
                {
                    "java": "./benchmarks/java/tce_wrap_1.java", 
                    "_idx": 0, 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_wrap_2.java", 
                    "_idx": 1, 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_wrap_3.java", 
                    "_idx": 2, 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_wrap_4.java", 
                    "_idx": 3, 
                    "type": "file"
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "add_jodatime", 
            "program_hashes": {
                "clang_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "clang_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "gcc49_-O0": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "scala2.11.11": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ], 
                "javac1.8.0_66": [
                    "bc:Fzu3XJCccJ1EJUdvhMVtcJilNgpbJB39UA7iL_uwNAA_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA", 
                    "bc:MCcaAs-Eq0KDwwqKfbpqyDZr0qChS_NUaHM4LMTf6eA_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA", 
                    "bc:D93CH32IRpbrJX1fPWrlUOlOGt4OUx0YhjdkFq0vjig_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA", 
                    "bc:48AGoioUwj8mvbtj4JKT9wAWj1JtX8_9TS9L-de_t_0_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA", 
                    "bc:_Rd3U5OZPFLbbCDG92WmudcUZSc0baXdlbAjsrR5_6c_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA", 
                    "bc:2bXMwf0Fvea7c3eTlE-Vorn5XGYKJy1DmAksrjnocxw_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA", 
                    "bc:50M2zxbb0VoxWC1o_8T8AuiaxZB_avBtSJASrjuk1mk_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA", 
                    "bc:6cu2DXiYOB3n1NfDzjuFZwCv78b98OT5y4tyf4fom34_pr:QvSuuBwe-B93Hz3oq8qdz2aQHFdVMOdnLksRRkdK5lA"
                ], 
                "gcc49_-O3": [
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified", 
                    "skipped_no_code_specified"
                ]
            }, 
            "input_types": [
                "long", 
                "int"
            ], 
            "return_type": "long", 
            "variants": [
                {
                    "java": "./benchmarks/java/tce_add_1.java", 
                    "_idx": 0, 
                    "variant_class": "original", 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_add_2.java", 
                    "_idx": 1, 
                    "variant_class": "negate expression", 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_add_3.java", 
                    "_idx": 2, 
                    "variant_class": "early exit removal", 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_add_4.java", 
                    "_idx": 3, 
                    "variant_class": "mathematically equivalent", 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_add_5.java", 
                    "_idx": 4, 
                    "variant_class": "mathematically equivalent", 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_add_6.java", 
                    "_idx": 5, 
                    "variant_class": "mathematically equivalent", 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_add_7.java", 
                    "_idx": 6, 
                    "variant_class": "mathematically equivalent", 
                    "type": "file"
                }, 
                {
                    "java": "./benchmarks/java/tce_add_8.java", 
                    "_idx": 7, 
                    "variant_class": "mathematically equivalent", 
                    "type": "file"
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "pamvotis_dead_store", 
            "program_hashes": {
                "clang_-O3": [
                    "3a5ee6cbb30346e28ec07b68b8e53f07380d3219154e918d02b0992170a340b7", 
                    "3a5ee6cbb30346e28ec07b68b8e53f07380d3219154e918d02b0992170a340b7", 
                    "3a5ee6cbb30346e28ec07b68b8e53f07380d3219154e918d02b0992170a340b7"
                ], 
                "clang_-O0": [
                    "1daa9916e8912e4659030bf295962d7fad88e91c37ec1bcac0719750aca15e07", 
                    "0f713605a5fa53e7c2e423200f78baf0f101b93d15ee06cb33c2313d0132abd6", 
                    "0b6d09fa328cef74e064e3524166895ed20fbecfec599b27fc03b2b379c16b46"
                ], 
                "gcc49_-O0": [
                    "4b91c4d526da96cf63130d5cf45768e832549d1ad19e0ea275a619b91477a668", 
                    "148ebe19f3161f5f400c10ebb69670448e0667e750ed260151419e78023f1a41", 
                    "bd1052b898e8e57a2ca3d26d3237366dcd4ecf6f2c73fda7c016f59198f2d153"
                ], 
                "scala2.11.11": [
                    "bc:vI0-pNiQd_dwqyQmMephqTLn74jJDu_fQNGgGnX2u6c_pr:none", 
                    "bc:0VfavZvCPyRBKJoaw33q5uW12x7FpW-zxCzUYO7N03w_pr:none", 
                    "bc:UbymHVeRiYVLP0mdB_iGVZGvh4ZG0SJxd5MIFK_YkNs_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:fjvfT6UDqghJRImZG2oN6fqoOb_O9BlJLWXcNpoy8Yw_pr:none", 
                    "bc:pb4Q_1ucAMrj-GBr6HPuq6ZnPPTib6p3vnExmdhWlLQ_pr:none", 
                    "bc:tn6l-03IerSe1ieRiY8FOk_6Z-_qDFmjSjyHuCtXywA_pr:none"
                ], 
                "gcc49_-O3": [
                    "51e5675789a708f1167a17cb6232508e4b0b8c72d436f35dc80a1c3b63360926", 
                    "51e5675789a708f1167a17cb6232508e4b0b8c72d436f35dc80a1c3b63360926", 
                    "51e5675789a708f1167a17cb6232508e4b0b8c72d436f35dc80a1c3b63360926"
                ]
            }, 
            "input_types": [
                "int", 
                "int"
            ], 
            "return_type": "long", 
            "variants": [
                {
                    "_idx": 0, 
                    "variant_class": "original", 
                    "code": "int nCwMin = input0;\n switch(input0){\n case 1:\n nCwMin = 1;\n break;\n case 2:\n nCwMin = 2;\n break;\n case 3:\n nCwMin = 3;\n break;\n case 4:\n nCwMin = 4;\n break;\n default:\n nCwMin = 0;\n }\n return nCwMin;\n", 
                    "scala_code": "int nCwMin = input0;\n nCwMin = input0 match {\n case 1 => 1\n case 2 => 2\n case 3 => 3\n case 4 => 4\n case _ => 0\n }\n return nCwMin;\n "
                }, 
                {
                    "_idx": 1, 
                    "variant_class": "invert dead store", 
                    "code": "int nCwMin = -input0;\n switch(input0){\n case 1:\n nCwMin = 1;\n break;\n case 2:\n nCwMin = 2;\n break;\n case 3:\n nCwMin = 3;\n break;\n case 4:\n nCwMin = 4;\n break;\n default:\n nCwMin = 0;\n }\n return nCwMin;\n", 
                    "scala_code": "int nCwMin = -input0;\n nCwMin = input0 match {\n case 1 => 1\n case 2 => 2\n case 3 => 3\n case 4 => 4\n case _ => 0\n }\n return nCwMin;\n "
                }, 
                {
                    "_idx": 2, 
                    "variant_class": "math dead store", 
                    "code": "int nCwMin = input1 * input0;\n switch(input0){\n case 1:\n nCwMin = 1;\n break;\n case 2:\n nCwMin = 2;\n break;\n case 3:\n nCwMin = 3;\n break;\n case 4:\n nCwMin = 4;\n break;\n default:\n nCwMin = 0;\n }\n return nCwMin;\n", 
                    "scala_code": "int nCwMin = input1 * input0;\n nCwMin = input0 match {\n case 1 => 1\n case 2 => 2\n case 3 => 3\n case 4 => 4\n case _ => 0\n }\n return nCwMin;\n "
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "pamvotis_wider_comparison", 
            "notes": "fails, but the difference is in how a 1 is stored in AX, not the comparison op itself, is this a bug? very weird", 
            "program_hashes": {
                "clang_-O3": [
                    "30923e5c868754c5c41966f8240cd54bda2449d528cb7120569fa378c86d282c", 
                    "c02be0c37aa949cfa162743629ede7ffa6c614874bfbb13852aea912357ad7fe"
                ], 
                "clang_-O0": [
                    "2f2192eff57b16e6a78b941c9a5d22ee86bd653df92860200d11338595948a36", 
                    "3ff4dfa6c1582eeb7136c6d5bee35d885623b5fd767dd1d2b5d883aa6e359e4d"
                ], 
                "gcc49_-O0": [
                    "f55abedf599c87b462c10bff676d49ec3e2744247ab31cac3347a5c7fae0c13c", 
                    "d4211856befe5a8284d229866cf953156688a7d05b20a327d14a7602818cf609"
                ], 
                "scala2.11.11": [
                    "bc:Gk8Epa2oB6ha_LCWeXyG12BTqO736qM-hPlY3AZANto_pr:none", 
                    "bc:t9i6yP26dNLzwOU7F7k0zGztbURxCtUEhB_RA3pweCc_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:XFICyZVirygvznQ9ze8U_5NI-dvLj8J7qmZeJpRGyvo_pr:none", 
                    "bc:P4wK1Br3Xu2Z9HPgsqHpbhsWYLwu2qYqPN-wgi5FuCQ_pr:none"
                ], 
                "gcc49_-O3": [
                    "16795a99ea53f4b8dc02f48d6716090b3be41695d2531cd2187c9be788ac1276", 
                    "4cab2f97b8cb6f406ea7510458010a89801442a9cc93e042cdf88c21ff85c6ab"
                ]
            }, 
            "input_types": [
                "int", 
                "int*"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "_idx": 0, 
                    "variant_class": "original", 
                    "code": "\n int position = -1;\n for(int i=0; i<input0; i++){\n if(input1[i] == 0){\n position = i;\n break;\n }\n }\n if(position != -1){\n return 1;\n }\n return 0;\n ", 
                    "scala_code": "int position = input1.indexWhere( _ == 0); if(position != -1){ return 1; }; return 0; "
                }, 
                {
                    "_idx": 1, 
                    "variant_class": "comparison widening", 
                    "code": "\n int position = -1;\n for(int i=0; i<input0; i++){\n if(input1[i] == 0){\n position = i;\n break;\n }\n }\n if(position > -1){\n return 1;\n }\n return 0;\n ", 
                    "scala_code": "int position = input1.indexWhere( _ == 0 ); if(position > -1){ return 1; }; return 0; "
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "triangle_classify", 
            "program_hashes": {
                "clang_-O3": [
                    "468fff3fe81f50289fd3e7162c8ccdaee36504f9dae7b41a49d7a10018218bf6", 
                    "468fff3fe81f50289fd3e7162c8ccdaee36504f9dae7b41a49d7a10018218bf6", 
                    "0108a09ce35c30ab79967965259bc9b58d50df4deace792d2bb705153e44ebab", 
                    "5fcccc609a77ac4634061aafc1c44cf270610a82cd5e2baae796005c36850ba9", 
                    "d0049069dcc3d23ef1b0ea764346842d950972ea6889ecc3aa1eb78362426349", 
                    "3c4318996e788193a82176c38af1aa5140bfca58377195d6682c1b8c5eb86011", 
                    "f2e539fba5c7ca8710a5290f9372a06b6d7133e295a2dbf47babdb351659ff67", 
                    "468fff3fe81f50289fd3e7162c8ccdaee36504f9dae7b41a49d7a10018218bf6"
                ], 
                "clang_-O0": [
                    "f8010a4da469049641c2fec249d25e36e0d923d4ac0a59228eb45cd2e136be6d", 
                    "75da130a541896603583157a908b7d5c6613a575efa118710819981f626f0fda", 
                    "561a2940508c9269f57c326cea272edb1f86809ba256895932bd69551bc9f4a2", 
                    "2778e9647a1ca0299d88d8351552722e41cd0b14927f7a5628df075a388500d2", 
                    "504e875fe6eff3958da5a0a67156369b36de918f1912ef40bfd0fcfb5dcd8d08", 
                    "a5e1516866e1933b6e5e86a02dd2424d3946a69a38b18f902f787fb90084090f", 
                    "f77bda4f21e2fed72f0f9f218f12e402a9756b02277bff1b19ae4007bbc144f1", 
                    "70d673608a59e5c0fe0fed545185263a95bf927083b780eda2e7b40107009b91"
                ], 
                "gcc49_-O0": [
                    "f7fea79fc2f5e90c4fb9d4e8cee2fece331113987eafb5d26585d5d87f6de127", 
                    "855bd629fada6689bc9cc9e2ec28da66c07d50882d9ad487708522a76f4a4ede", 
                    "930d8ce52597679fa337dfeeba7116751c9da0a03006ac668a43230c6a61adef", 
                    "9512b00e7a99bb02c9851cc1a08f5eb8d5d788049de181c58f626180db7457cf", 
                    "5402f7f510b6c5cb033cdd317b4b201c3393acc7bec18cdb9eb82913c9012248", 
                    "3f30550c1316bb27410e5afc3fee54a29d5a9601d7d7137b4a7273b98fb7c0c4", 
                    "ba5d3e66dcc5ec9722cde5be9ff865a05a9a57c58161350a39f121582d589724", 
                    "148d25285c9e8875319c4d77c41ed61ae05674aca99458715ae7e476650143ba"
                ], 
                "scala2.11.11": [
                    "bc:I-UzFCfUcvzP67dho3qvkQLO94OKJHcq_dG5XbfN4sM_pr:none", 
                    "bc:Ycez2Irs4XAboTlPNra2SYb_hlwk2ewOyAlEkdc6WH0_pr:none", 
                    "bc:EN9iSAo6A2pzsMVRu3x2rJZnjpMM1Vbwl1TdIcwGJhI_pr:none", 
                    "bc:NTwDBAjDujwUhQ3REV7A5Nwfs4FnIUp2e5vv77Ahiuo_pr:none", 
                    "bc:wkwqWl4qvBn0fF2ju-zZ5GfQ1nsA48B12vWPzzyaV8w_pr:none", 
                    "bc:JvtcDBTMbidwztW34btn5ECeBltGvF-m19kEaIlUwBY_pr:none", 
                    "bc:N8v3Y8NctBbvJ4FaKSaAVDO5AjvZszOKnaVy2R1x9AA_pr:none", 
                    "bc:X9dDJRLA_R4nLcK5eAQ1Dhw8sJi8_Qa6XhipyTcRMl4_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:0lUx8nCpKR0Th-9inrt18R6Ed46OAbrgjh7hcNOW1ek_pr:none", 
                    "bc:M-ID1jbj4lb5XYPnSiBH8uHKK_YstWcBVt-dMBv0Qs4_pr:none", 
                    "bc:b7NQrnoZUrfhNWslKaHbAp9Z9gTrtmEXgFVWmsfMtWY_pr:none", 
                    "bc:Jl9p1nAnYMa7j78391hSxto4j1xcI_MlQSp_5OfseDk_pr:none", 
                    "bc:G0bPL7706BMZIomeNNtsYsYMJVJs_YOQYmeS-psuxmU_pr:none", 
                    "bc:YuIF8p-VaVKGFKHBDK10mND3p5sw-xayP28xqeSmz8c_pr:none", 
                    "bc:C7NANZm2plO3nS8wOyicrZNiW4-54kG9NxSnN3ja0G4_pr:none", 
                    "bc:Ve4w5UIjG2ZhCQYENrD1CnutNKpbCtUkL6YZimafUUQ_pr:none"
                ], 
                "gcc49_-O3": [
                    "ac567e4383939e87f9e7dbfb2f201a4d3b1525536ada7bd830fbe986cf7bd9aa", 
                    "ac567e4383939e87f9e7dbfb2f201a4d3b1525536ada7bd830fbe986cf7bd9aa", 
                    "16a62fc559dde7f27f7514cf7e206bba98a0f26ed23df6f0d811771d985b314e", 
                    "ac567e4383939e87f9e7dbfb2f201a4d3b1525536ada7bd830fbe986cf7bd9aa", 
                    "ced03c96202d72c5c78ab4d1cf45c56c941f09b631493d01c0091b181c9325e6", 
                    "3293cd437b51bece0ec85381700169a3e2ab22cac72d8a290cfc1e0bff68ac7f", 
                    "84172d8d66c6fb2e8b29ac2d577c744ce2f91b42c0eb14492d3f9543ae704558", 
                    "173cff3ff9a967016ed3ca8340df5e85edc6d41ff27b9a1285b454e3b0d91a82"
                ]
            }, 
            "input_types": [
                "int", 
                "int", 
                "int"
            ], 
            "return_type": "int", 
            "variants": [
                {
                    "variant_class": "original", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 || b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = trian + 1;\n }\n if (a == c) {\n trian = trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian == 0) {\n if (a + b < c || a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian == 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian == 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 0
                }, 
                {
                    "variant_class": "invert expression non functional", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 || b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = -trian + 1;\n }\n if (a == c) {\n trian = trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian == 0) {\n if (a + b < c || a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian == 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian == 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 1
                }, 
                {
                    "variant_class": "invert expression functional", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 || b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = trian + 1;\n }\n if (a == c) {\n trian = -trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian == 0) {\n if (a + b < c || a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian == 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian == 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 2
                }, 
                {
                    "variant_class": "comparison widening", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 || b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = trian + 1;\n }\n if (a == c) {\n trian = trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian == 0) {\n if (a + b < c || a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian <= 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian == 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 3
                }, 
                {
                    "variant_class": "comparison widening", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 || b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = trian + 1;\n }\n if (a == c) {\n trian = trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian == 0) {\n if (a + b < c || a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian == 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian >= 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 4
                }, 
                {
                    "variant_class": "early exit removal", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 ^ b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = trian + 1;\n }\n if (a == c) {\n trian = trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian == 0) {\n if (a + b < c || a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian == 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian == 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 5
                }, 
                {
                    "variant_class": "comparison widening with mathematical proof", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 || b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = trian + 1;\n }\n if (a == c) {\n trian = trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian == 0) {\n if (a + b < c ^ a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian == 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian == 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 6
                }, 
                {
                    "variant_class": "comparison widening", 
                    "code": "\n int INVALID = 0; \n int SCALENE = 1;\n int EQUILATERAL = 2;\n int ISOSCELES = 3;\n \n int a = input0;\n int b = input1;\n int c = input2;\n \n int trian=0;\n if (a <= 0 || b <= 0 || c <= 0) {\n return INVALID;\n }\n trian = 0;\n if (a == b) {\n trian = trian + 1;\n }\n if (a == c) {\n trian = trian + 2;\n }\n if (b == c) {\n trian = trian + 3;\n }\n if (trian <= 0) {\n if (a + b < c || a + c < b || b + c < a) {\n return INVALID;\n } else {\n return SCALENE;\n }\n }\n if (trian > 3) {\n return EQUILATERAL;\n }\n if (trian == 1 && a + b > c) {\n return ISOSCELES;\n } else {\n if (trian == 2 && a + c > b) {\n return ISOSCELES;\n } else {\n if (trian == 3 && b + c > a) {\n return ISOSCELES;\n }\n }\n }\n return INVALID;\n ", 
                    "_idx": 7
                }
            ]
        }, 
        {
            "origin": "tce", 
            "return": "", 
            "name": "xstream_decode_fast_path", 
            "program_hashes": {
                "clang_-O3": [
                    "84775367d717d478c0a41d70f21de409c8358e3bbaeb65a038acaa6cab366272", 
                    "c2719912d431d7d9a409f87452552d4caa68bdea1ada34ebff4d82a656e111d9"
                ], 
                "clang_-O0": [
                    "2f762af38baf769fec20b9fd6b3daa42331ae1055187984c0826605ad56892ad", 
                    "82ceaa7919dc4f29eca9f33b5ed0651f187585a8d787ca910e95b1f2241387fd"
                ], 
                "gcc49_-O0": [
                    "3cd3e1a54834243413b59da9991963c45f19b2b815e707b630156c922bf652f4", 
                    "25c427741060cc4e628ef6a59c298b31ad5c1b29cfca3452a8d89c87441d135e"
                ], 
                "scala2.11.11": [
                    "bc:GdPdQPm67zxq0HKvrWb7OdRiI69pB7RT_DFxzIaYptI_pr:none", 
                    "bc:AJQLSE9U8rliWr-Ct-yJl4beiw5ewuKVaT07tbkG6ic_pr:none"
                ], 
                "javac1.8.0_66": [
                    "bc:YTZlqow89ey4HLd8ZMT0eXBQPlqnavBmdj3wqHHLH18_pr:none", 
                    "bc:kUk6V_HhblkmhETsLGO3iG93Gj8Tm0s2Ra_67W70CHA_pr:none"
                ], 
                "gcc49_-O3": [
                    "1b4e60fc4b3bb0ab757a3677022d6e55268b69dc9ac91e1c4d64c3cf8e88fb46", 
                    "a7ed2e271693b97fc62b99a30c954115705553c8cd121ba6c8eb6cd8c87415d1"
                ]
            }, 
            "input_types": [
                "char*"
            ], 
            "return_type": "void", 
            "variants": [
                {
                    "_idx": 0, 
                    "variant_class": "original", 
                    "code": "\n int length = 256;\n char term = '$';\n char term2 = '$';\n int i=0;\n for(; i<length; i++){\n if(input0[i] == term){\n break;\n }\n }\n for(; i<length; i++){\n if(input0[i] == term && input0[i+1] == term2){\n input0[i] = '_'; input0[i+1] = '_';\n }\n }\n ", 
                    "scala_code": "int length = 256;\nchar term = '$';\nchar term2 = '$';\nint i=0;\n\ni = input0.indexWhere(_ == term); if(i<0){i=0}; \n\nfor(i <- i until input0.length-1){\nif(input0(i) == term && input0(i+1) == term2){\ninput0(i) = '_'; input0(i+1) = '_';\n}\n}\n "
                }, 
                {
                    "_idx": 1, 
                    "variant_class": "fast path removal", 
                    "code": "\n int length = 256;\n char term = '$';\n char term2 = '$';\n int i=0;\n for(; !(i<length); i++){\n if(input0[i] == term){\n break;\n }\n }\n for(; i<length; i++){\n if(input0[i] == term && input0[i+1] == term2){\n input0[i] = '_'; input0[i+1] = '_';\n }\n }\n ", 
                    "scala_code": "int length = 256;\nchar term = '$';\nchar term2 = '$';\nint i=0;\nfor(i <- i until input0.length-1){\nif(input0(i) == term && input0(i+1) == term2){\ninput0(i) = '_'; input0(i+1) = '_';\n}\n}\n "
                }
            ]
        }
    ], 
    "total_programs": 63, 
    "total_compiler_pass_fail": {
        "clang_-O3": {
            "passes": 46, 
            "fails": 17, 
            "passed_tests": [], 
            "origins": {
                "tce": {
                    "passes": 8, 
                    "fails": 3, 
                    "passed_tests": [
                        "math_post_fix_increment", 
                        "tce_dead_store", 
                        "tce_dead_store_negate_zero", 
                        "bisect_dead_store_alternate_implementations", 
                        "capitalize", 
                        "wrap", 
                        "add_jodatime", 
                        "pamvotis_dead_store"
                    ], 
                    "failed_tests": [
                        "pamvotis_wider_comparison", 
                        "triangle_classify", 
                        "xstream_decode_fast_path"
                    ]
                }, 
                "tpcds_survey": {
                    "passes": 5, 
                    "fails": 2, 
                    "passed_tests": [
                        "constant_folding_basic", 
                        "comparison", 
                        "conditional", 
                        "math_sub", 
                        "math_add"
                    ], 
                    "failed_tests": [
                        "logical_op", 
                        "logical_op_short_circuit"
                    ]
                }, 
                "semantics preserving transformations": {
                    "passes": 1, 
                    "fails": 0, 
                    "passed_tests": [
                        "for_loop_nothing"
                    ], 
                    "failed_tests": []
                }, 
                "compiler_survey": {
                    "passes": 29, 
                    "fails": 12, 
                    "passed_tests": [
                        "common_subexpression_elimination", 
                        "copy_propagation", 
                        "constant_propagation", 
                        "gcse_kill_load_store_in_loop", 
                        "binary_operator_canonicalization", 
                        "bitwise_canonicalization", 
                        "tree_reassociation_subtraction_reassociation", 
                        "tree_reassociation_linearization", 
                        "tree_reassociation_operand_lists", 
                        "tree_reassociation_repeated_factors", 
                        "code_hoisting", 
                        "partial_redundancy_elimination", 
                        "forward_prop", 
                        "full_redundancy_elimination", 
                        "copy_propagation", 
                        "code_sinking_math", 
                        "code_sinking_pure_function", 
                        "constant_propagation_conditional", 
                        "dead_code_elimination", 
                        "dead_store_elimination", 
                        "loop_iv_variable_merging", 
                        "loop_iv_variable_elimination", 
                        "loop_iv_canonicalization", 
                        "straight_line_strength_reduction", 
                        "value_range_propagation_ne", 
                        "value_range_propagation_eq", 
                        "value_range_propagation_lt", 
                        "redundant_load_elimination", 
                        "jump_threading"
                    ], 
                    "failed_tests": [
                        "function_inlining_trivial", 
                        "function_inlining_partial", 
                        "comparison_canonicalization", 
                        "interprocedural_constant_propagation", 
                        "forward_store_motion", 
                        "constant_propagation_conditional2", 
                        "loop_unswitch", 
                        "loop_unswitch_harder", 
                        "loop_splitting", 
                        "loop_interchange", 
                        "loop_invariant_motion", 
                        "loop_iv_strength_reduction"
                    ]
                }, 
                "craig": {
                    "passes": 3, 
                    "fails": 0, 
                    "passed_tests": [
                        "constant_folding_associativity", 
                        "implicit_zero_comparison", 
                        "pointer_deref_equivalence"
                    ], 
                    "failed_tests": []
                }
            }, 
            "failed_tests": []
        }, 
        "clang_-O0": {
            "passes": 8, 
            "fails": 55, 
            "passed_tests": [], 
            "origins": {
                "tce": {
                    "passes": 4, 
                    "fails": 7, 
                    "passed_tests": [
                        "bisect_dead_store_alternate_implementations", 
                        "capitalize", 
                        "wrap", 
                        "add_jodatime"
                    ], 
                    "failed_tests": [
                        "math_post_fix_increment", 
                        "tce_dead_store", 
                        "tce_dead_store_negate_zero", 
                        "pamvotis_dead_store", 
                        "pamvotis_wider_comparison", 
                        "triangle_classify", 
                        "xstream_decode_fast_path"
                    ]
                }, 
                "tpcds_survey": {
                    "passes": 1, 
                    "fails": 6, 
                    "passed_tests": [
                        "constant_folding_basic"
                    ], 
                    "failed_tests": [
                        "comparison", 
                        "conditional", 
                        "logical_op", 
                        "logical_op_short_circuit", 
                        "math_sub", 
                        "math_add"
                    ]
                }, 
                "semantics preserving transformations": {
                    "passes": 0, 
                    "fails": 1, 
                    "passed_tests": [], 
                    "failed_tests": [
                        "for_loop_nothing"
                    ]
                }, 
                "compiler_survey": {
                    "passes": 1, 
                    "fails": 40, 
                    "passed_tests": [
                        "binary_operator_canonicalization"
                    ], 
                    "failed_tests": [
                        "function_inlining_trivial", 
                        "function_inlining_partial", 
                        "common_subexpression_elimination", 
                        "copy_propagation", 
                        "constant_propagation", 
                        "gcse_kill_load_store_in_loop", 
                        "comparison_canonicalization", 
                        "bitwise_canonicalization", 
                        "tree_reassociation_subtraction_reassociation", 
                        "tree_reassociation_linearization", 
                        "tree_reassociation_operand_lists", 
                        "tree_reassociation_repeated_factors", 
                        "code_hoisting", 
                        "partial_redundancy_elimination", 
                        "forward_prop", 
                        "full_redundancy_elimination", 
                        "copy_propagation", 
                        "interprocedural_constant_propagation", 
                        "forward_store_motion", 
                        "code_sinking_math", 
                        "code_sinking_pure_function", 
                        "constant_propagation_conditional", 
                        "constant_propagation_conditional2", 
                        "dead_code_elimination", 
                        "dead_store_elimination", 
                        "loop_unswitch", 
                        "loop_unswitch_harder", 
                        "loop_splitting", 
                        "loop_interchange", 
                        "loop_invariant_motion", 
                        "loop_iv_strength_reduction", 
                        "loop_iv_variable_merging", 
                        "loop_iv_variable_elimination", 
                        "loop_iv_canonicalization", 
                        "straight_line_strength_reduction", 
                        "value_range_propagation_ne", 
                        "value_range_propagation_eq", 
                        "value_range_propagation_lt", 
                        "redundant_load_elimination", 
                        "jump_threading"
                    ]
                }, 
                "craig": {
                    "passes": 2, 
                    "fails": 1, 
                    "passed_tests": [
                        "implicit_zero_comparison", 
                        "pointer_deref_equivalence"
                    ], 
                    "failed_tests": [
                        "constant_folding_associativity"
                    ]
                }
            }, 
            "failed_tests": []
        }, 
        "scala2.11.11": {
            "passes": 11, 
            "fails": 52, 
            "passed_tests": [], 
            "origins": {
                "tce": {
                    "passes": 5, 
                    "fails": 6, 
                    "passed_tests": [
                        "math_post_fix_increment", 
                        "bisect_dead_store_alternate_implementations", 
                        "capitalize", 
                        "wrap", 
                        "add_jodatime"
                    ], 
                    "failed_tests": [
                        "tce_dead_store", 
                        "tce_dead_store_negate_zero", 
                        "pamvotis_dead_store", 
                        "pamvotis_wider_comparison", 
                        "triangle_classify", 
                        "xstream_decode_fast_path"
                    ]
                }, 
                "tpcds_survey": {
                    "passes": 1, 
                    "fails": 6, 
                    "passed_tests": [
                        "constant_folding_basic"
                    ], 
                    "failed_tests": [
                        "comparison", 
                        "conditional", 
                        "logical_op", 
                        "logical_op_short_circuit", 
                        "math_sub", 
                        "math_add"
                    ]
                }, 
                "semantics preserving transformations": {
                    "passes": 0, 
                    "fails": 1, 
                    "passed_tests": [], 
                    "failed_tests": [
                        "for_loop_nothing"
                    ]
                }, 
                "compiler_survey": {
                    "passes": 3, 
                    "fails": 38, 
                    "passed_tests": [
                        "function_inlining_partial", 
                        "gcse_kill_load_store_in_loop", 
                        "code_sinking_pure_function"
                    ], 
                    "failed_tests": [
                        "function_inlining_trivial", 
                        "common_subexpression_elimination", 
                        "copy_propagation", 
                        "constant_propagation", 
                        "binary_operator_canonicalization", 
                        "comparison_canonicalization", 
                        "bitwise_canonicalization", 
                        "tree_reassociation_subtraction_reassociation", 
                        "tree_reassociation_linearization", 
                        "tree_reassociation_operand_lists", 
                        "tree_reassociation_repeated_factors", 
                        "code_hoisting", 
                        "partial_redundancy_elimination", 
                        "forward_prop", 
                        "full_redundancy_elimination", 
                        "copy_propagation", 
                        "interprocedural_constant_propagation", 
                        "forward_store_motion", 
                        "code_sinking_math", 
                        "constant_propagation_conditional", 
                        "constant_propagation_conditional2", 
                        "dead_code_elimination", 
                        "dead_store_elimination", 
                        "loop_unswitch", 
                        "loop_unswitch_harder", 
                        "loop_splitting", 
                        "loop_interchange", 
                        "loop_invariant_motion", 
                        "loop_iv_strength_reduction", 
                        "loop_iv_variable_merging", 
                        "loop_iv_variable_elimination", 
                        "loop_iv_canonicalization", 
                        "straight_line_strength_reduction", 
                        "value_range_propagation_ne", 
                        "value_range_propagation_eq", 
                        "value_range_propagation_lt", 
                        "redundant_load_elimination", 
                        "jump_threading"
                    ]
                }, 
                "craig": {
                    "passes": 2, 
                    "fails": 1, 
                    "passed_tests": [
                        "implicit_zero_comparison", 
                        "pointer_deref_equivalence"
                    ], 
                    "failed_tests": [
                        "constant_folding_associativity"
                    ]
                }
            }, 
            "failed_tests": []
        }, 
        "gcc49_-O0": {
            "passes": 14, 
            "fails": 49, 
            "passed_tests": [], 
            "origins": {
                "tce": {
                    "passes": 4, 
                    "fails": 7, 
                    "passed_tests": [
                        "bisect_dead_store_alternate_implementations", 
                        "capitalize", 
                        "wrap", 
                        "add_jodatime"
                    ], 
                    "failed_tests": [
                        "math_post_fix_increment", 
                        "tce_dead_store", 
                        "tce_dead_store_negate_zero", 
                        "pamvotis_dead_store", 
                        "pamvotis_wider_comparison", 
                        "triangle_classify", 
                        "xstream_decode_fast_path"
                    ]
                }, 
                "tpcds_survey": {
                    "passes": 4, 
                    "fails": 3, 
                    "passed_tests": [
                        "constant_folding_basic", 
                        "comparison", 
                        "logical_op", 
                        "math_sub"
                    ], 
                    "failed_tests": [
                        "conditional", 
                        "logical_op_short_circuit", 
                        "math_add"
                    ]
                }, 
                "semantics preserving transformations": {
                    "passes": 0, 
                    "fails": 1, 
                    "passed_tests": [], 
                    "failed_tests": [
                        "for_loop_nothing"
                    ]
                }, 
                "compiler_survey": {
                    "passes": 3, 
                    "fails": 38, 
                    "passed_tests": [
                        "binary_operator_canonicalization", 
                        "bitwise_canonicalization", 
                        "tree_reassociation_operand_lists"
                    ], 
                    "failed_tests": [
                        "function_inlining_trivial", 
                        "function_inlining_partial", 
                        "common_subexpression_elimination", 
                        "copy_propagation", 
                        "constant_propagation", 
                        "gcse_kill_load_store_in_loop", 
                        "comparison_canonicalization", 
                        "tree_reassociation_subtraction_reassociation", 
                        "tree_reassociation_linearization", 
                        "tree_reassociation_repeated_factors", 
                        "code_hoisting", 
                        "partial_redundancy_elimination", 
                        "forward_prop", 
                        "full_redundancy_elimination", 
                        "copy_propagation", 
                        "interprocedural_constant_propagation", 
                        "forward_store_motion", 
                        "code_sinking_math", 
                        "code_sinking_pure_function", 
                        "constant_propagation_conditional", 
                        "constant_propagation_conditional2", 
                        "dead_code_elimination", 
                        "dead_store_elimination", 
                        "loop_unswitch", 
                        "loop_unswitch_harder", 
                        "loop_splitting", 
                        "loop_interchange", 
                        "loop_invariant_motion", 
                        "loop_iv_strength_reduction", 
                        "loop_iv_variable_merging", 
                        "loop_iv_variable_elimination", 
                        "loop_iv_canonicalization", 
                        "straight_line_strength_reduction", 
                        "value_range_propagation_ne", 
                        "value_range_propagation_eq", 
                        "value_range_propagation_lt", 
                        "redundant_load_elimination", 
                        "jump_threading"
                    ]
                }, 
                "craig": {
                    "passes": 3, 
                    "fails": 0, 
                    "passed_tests": [
                        "constant_folding_associativity", 
                        "implicit_zero_comparison", 
                        "pointer_deref_equivalence"
                    ], 
                    "failed_tests": []
                }
            }, 
            "failed_tests": []
        }, 
        "javac1.8.0_66": {
            "passes": 6, 
            "fails": 57, 
            "passed_tests": [], 
            "origins": {
                "tce": {
                    "passes": 0, 
                    "fails": 11, 
                    "passed_tests": [], 
                    "failed_tests": [
                        "math_post_fix_increment", 
                        "tce_dead_store", 
                        "tce_dead_store_negate_zero", 
                        "bisect_dead_store_alternate_implementations", 
                        "capitalize", 
                        "wrap", 
                        "add_jodatime", 
                        "pamvotis_dead_store", 
                        "pamvotis_wider_comparison", 
                        "triangle_classify", 
                        "xstream_decode_fast_path"
                    ]
                }, 
                "tpcds_survey": {
                    "passes": 2, 
                    "fails": 5, 
                    "passed_tests": [
                        "constant_folding_basic", 
                        "logical_op"
                    ], 
                    "failed_tests": [
                        "comparison", 
                        "conditional", 
                        "logical_op_short_circuit", 
                        "math_sub", 
                        "math_add"
                    ]
                }, 
                "semantics preserving transformations": {
                    "passes": 0, 
                    "fails": 1, 
                    "passed_tests": [], 
                    "failed_tests": [
                        "for_loop_nothing"
                    ]
                }, 
                "compiler_survey": {
                    "passes": 2, 
                    "fails": 39, 
                    "passed_tests": [
                        "function_inlining_partial", 
                        "code_sinking_pure_function"
                    ], 
                    "failed_tests": [
                        "function_inlining_trivial", 
                        "common_subexpression_elimination", 
                        "copy_propagation", 
                        "constant_propagation", 
                        "gcse_kill_load_store_in_loop", 
                        "binary_operator_canonicalization", 
                        "comparison_canonicalization", 
                        "bitwise_canonicalization", 
                        "tree_reassociation_subtraction_reassociation", 
                        "tree_reassociation_linearization", 
                        "tree_reassociation_operand_lists", 
                        "tree_reassociation_repeated_factors", 
                        "code_hoisting", 
                        "partial_redundancy_elimination", 
                        "forward_prop", 
                        "full_redundancy_elimination", 
                        "copy_propagation", 
                        "interprocedural_constant_propagation", 
                        "forward_store_motion", 
                        "code_sinking_math", 
                        "constant_propagation_conditional", 
                        "constant_propagation_conditional2", 
                        "dead_code_elimination", 
                        "dead_store_elimination", 
                        "loop_unswitch", 
                        "loop_unswitch_harder", 
                        "loop_splitting", 
                        "loop_interchange", 
                        "loop_invariant_motion", 
                        "loop_iv_strength_reduction", 
                        "loop_iv_variable_merging", 
                        "loop_iv_variable_elimination", 
                        "loop_iv_canonicalization", 
                        "straight_line_strength_reduction", 
                        "value_range_propagation_ne", 
                        "value_range_propagation_eq", 
                        "value_range_propagation_lt", 
                        "redundant_load_elimination", 
                        "jump_threading"
                    ]
                }, 
                "craig": {
                    "passes": 2, 
                    "fails": 1, 
                    "passed_tests": [
                        "implicit_zero_comparison", 
                        "pointer_deref_equivalence"
                    ], 
                    "failed_tests": [
                        "constant_folding_associativity"
                    ]
                }
            }, 
            "failed_tests": []
        }, 
        "gcc49_-O3": {
            "passes": 34, 
            "fails": 29, 
            "passed_tests": [], 
            "origins": {
                "tce": {
                    "passes": 7, 
                    "fails": 4, 
                    "passed_tests": [
                        "tce_dead_store", 
                        "tce_dead_store_negate_zero", 
                        "bisect_dead_store_alternate_implementations", 
                        "capitalize", 
                        "wrap", 
                        "add_jodatime", 
                        "pamvotis_dead_store"
                    ], 
                    "failed_tests": [
                        "math_post_fix_increment", 
                        "pamvotis_wider_comparison", 
                        "triangle_classify", 
                        "xstream_decode_fast_path"
                    ]
                }, 
                "tpcds_survey": {
                    "passes": 5, 
                    "fails": 2, 
                    "passed_tests": [
                        "constant_folding_basic", 
                        "comparison", 
                        "conditional", 
                        "logical_op", 
                        "math_sub"
                    ], 
                    "failed_tests": [
                        "logical_op_short_circuit", 
                        "math_add"
                    ]
                }, 
                "semantics preserving transformations": {
                    "passes": 0, 
                    "fails": 1, 
                    "passed_tests": [], 
                    "failed_tests": [
                        "for_loop_nothing"
                    ]
                }, 
                "compiler_survey": {
                    "passes": 19, 
                    "fails": 22, 
                    "passed_tests": [
                        "common_subexpression_elimination", 
                        "copy_propagation", 
                        "constant_propagation", 
                        "gcse_kill_load_store_in_loop", 
                        "binary_operator_canonicalization", 
                        "bitwise_canonicalization", 
                        "tree_reassociation_operand_lists", 
                        "forward_prop", 
                        "copy_propagation", 
                        "forward_store_motion", 
                        "code_sinking_math", 
                        "constant_propagation_conditional", 
                        "dead_code_elimination", 
                        "dead_store_elimination", 
                        "loop_iv_strength_reduction", 
                        "straight_line_strength_reduction", 
                        "value_range_propagation_ne", 
                        "value_range_propagation_eq", 
                        "value_range_propagation_lt"
                    ], 
                    "failed_tests": [
                        "function_inlining_trivial", 
                        "function_inlining_partial", 
                        "comparison_canonicalization", 
                        "tree_reassociation_subtraction_reassociation", 
                        "tree_reassociation_linearization", 
                        "tree_reassociation_repeated_factors", 
                        "code_hoisting", 
                        "partial_redundancy_elimination", 
                        "full_redundancy_elimination", 
                        "interprocedural_constant_propagation", 
                        "code_sinking_pure_function", 
                        "constant_propagation_conditional2", 
                        "loop_unswitch", 
                        "loop_unswitch_harder", 
                        "loop_splitting", 
                        "loop_interchange", 
                        "loop_invariant_motion", 
                        "loop_iv_variable_merging", 
                        "loop_iv_variable_elimination", 
                        "loop_iv_canonicalization", 
                        "redundant_load_elimination", 
                        "jump_threading"
                    ]
                }, 
                "craig": {
                    "passes": 3, 
                    "fails": 0, 
                    "passed_tests": [
                        "constant_folding_associativity", 
                        "implicit_zero_comparison", 
                        "pointer_deref_equivalence"
                    ], 
                    "failed_tests": []
                }
            }, 
            "failed_tests": []
        }
    }, 
    "total_compiler_results": {
        "clang_-O3": {
            "unique_hashes": 84, 
            "origins": {
                "tce": {
                    "unique_hashes": 18
                }, 
                "tpcds_survey": {
                    "unique_hashes": 9
                }, 
                "semantics preserving transformations": {
                    "unique_hashes": 1
                }, 
                "compiler_survey": {
                    "unique_hashes": 53
                }, 
                "craig": {
                    "unique_hashes": 3
                }
            }
        }, 
        "clang_-O0": {
            "unique_hashes": 138, 
            "origins": {
                "tce": {
                    "unique_hashes": 27
                }, 
                "tpcds_survey": {
                    "unique_hashes": 16
                }, 
                "semantics preserving transformations": {
                    "unique_hashes": 4
                }, 
                "compiler_survey": {
                    "unique_hashes": 87
                }, 
                "craig": {
                    "unique_hashes": 4
                }
            }
        }, 
        "scala2.11.11": {
            "unique_hashes": 132, 
            "origins": {
                "tce": {
                    "unique_hashes": 24
                }, 
                "tpcds_survey": {
                    "unique_hashes": 15
                }, 
                "semantics preserving transformations": {
                    "unique_hashes": 4
                }, 
                "compiler_survey": {
                    "unique_hashes": 84
                }, 
                "craig": {
                    "unique_hashes": 5
                }
            }
        }, 
        "gcc49_-O0": {
            "unique_hashes": 127, 
            "origins": {
                "tce": {
                    "unique_hashes": 27
                }, 
                "tpcds_survey": {
                    "unique_hashes": 10
                }, 
                "semantics preserving transformations": {
                    "unique_hashes": 4
                }, 
                "compiler_survey": {
                    "unique_hashes": 83
                }, 
                "craig": {
                    "unique_hashes": 3
                }
            }
        }, 
        "javac1.8.0_66": {
            "unique_hashes": 149, 
            "origins": {
                "tce": {
                    "unique_hashes": 43
                }, 
                "tpcds_survey": {
                    "unique_hashes": 12
                }, 
                "semantics preserving transformations": {
                    "unique_hashes": 4
                }, 
                "compiler_survey": {
                    "unique_hashes": 85
                }, 
                "craig": {
                    "unique_hashes": 5
                }
            }
        }, 
        "gcc49_-O3": {
            "unique_hashes": 96, 
            "origins": {
                "tce": {
                    "unique_hashes": 19
                }, 
                "tpcds_survey": {
                    "unique_hashes": 9
                }, 
                "semantics preserving transformations": {
                    "unique_hashes": 2
                }, 
                "compiler_survey": {
                    "unique_hashes": 63
                }, 
                "craig": {
                    "unique_hashes": 3
                }
            }
        }
    }, 
    "total_variants": 170
}