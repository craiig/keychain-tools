[
 {
  "Plan": {
   "Startup Cost": 38.72, 
   "Plans": [
    {
     "Startup Cost": 30.65, 
     "Plans": [
      {
       "Partial Mode": "Simple", 
       "Startup Cost": 30.5, 
       "Plans": [
        {
         "Startup Cost": 30.5, 
         "Plans": [
          {
           "Startup Cost": 11.2, 
           "Plans": [
            {
             "Startup Cost": 11.05, 
             "Plans": [
              {
               "Hash Cond": "(store_sales.ss_store_sk = store.s_store_sk)", 
               "Startup Cost": 10.9, 
               "Plans": [
                {
                 "Startup Cost": 0.0, 
                 "Plan Width": 20, 
                 "Node Type": "Seq Scan", 
                 "Plan Rows": 340, 
                 "Relation Name": "store_sales", 
                 "Alias": "store_sales", 
                 "Parallel Aware": false, 
                 "Output": [
                  "store_sales.ss_sold_date_sk", 
                  "store_sales.ss_sold_time_sk", 
                  "store_sales.ss_item_sk", 
                  "store_sales.ss_customer_sk", 
                  "store_sales.ss_cdemo_sk", 
                  "store_sales.ss_hdemo_sk", 
                  "store_sales.ss_addr_sk", 
                  "store_sales.ss_store_sk", 
                  "store_sales.ss_promo_sk", 
                  "store_sales.ss_ticket_number", 
                  "store_sales.ss_quantity", 
                  "store_sales.ss_wholesale_cost", 
                  "store_sales.ss_list_price", 
                  "store_sales.ss_sales_price", 
                  "store_sales.ss_ext_discount_amt", 
                  "store_sales.ss_ext_sales_price", 
                  "store_sales.ss_ext_wholesale_cost", 
                  "store_sales.ss_ext_list_price", 
                  "store_sales.ss_ext_tax", 
                  "store_sales.ss_coupon_amt", 
                  "store_sales.ss_net_paid", 
                  "store_sales.ss_net_paid_inc_tax", 
                  "store_sales.ss_net_profit"
                 ], 
                 "Parent Relationship": "Outer", 
                 "Total Cost": 13.4, 
                 "Schema": "pg_temp_2"
                }, 
                {
                 "Startup Cost": 10.8, 
                 "Plans": [
                  {
                   "Filter": "((store.s_county)::text = ANY ('{\"Williamson County\",\"Williamson County\",\"Williamson County\",\"Williamson County\",\"Williamson County\",\"Williamson County\",\"Williamson County\",\"Williamson County\"}'::text[]))", 
                   "Startup Cost": 0.0, 
                   "Plan Width": 4, 
                   "Node Type": "Seq Scan", 
                   "Plan Rows": 8, 
                   "Relation Name": "store", 
                   "Alias": "store", 
                   "Parallel Aware": false, 
                   "Output": [
                    "store.s_store_sk"
                   ], 
                   "Parent Relationship": "Outer", 
                   "Total Cost": 10.8, 
                   "Schema": "pg_temp_2"
                  }
                 ], 
                 "Node Type": "Hash", 
                 "Plan Rows": 8, 
                 "Parallel Aware": false, 
                 "Output": [
                  "store.s_store_sk"
                 ], 
                 "Parent Relationship": "Inner", 
                 "Plan Width": 4, 
                 "Total Cost": 10.8
                }
               ], 
               "Node Type": "Hash Join", 
               "Plan Rows": 14, 
               "Join Type": "Inner", 
               "Parallel Aware": false, 
               "Output": [
                "store_sales.ss_ticket_number", 
                "store_sales.ss_customer_sk", 
                "store_sales.ss_sold_date_sk", 
                "store_sales.ss_hdemo_sk"
               ], 
               "Parent Relationship": "Outer", 
               "Plan Width": 16, 
               "Total Cost": 25.72
              }, 
              {
               "Index Cond": "(date_dim.d_date_sk = store_sales.ss_sold_date_sk)", 
               "Startup Cost": 0.15, 
               "Scan Direction": "Forward", 
               "Plan Width": 4, 
               "Node Type": "Index Scan", 
               "Total Cost": 0.31, 
               "Plan Rows": 1, 
               "Relation Name": "date_dim", 
               "Alias": "date_dim", 
               "Parallel Aware": false, 
               "Filter": "((date_dim.d_year = ANY ('{1998,1999,2000}'::integer[])) AND (((date_dim.d_dom >= 1) AND (date_dim.d_dom <= 3)) OR ((date_dim.d_dom >= 25) AND (date_dim.d_dom <= 28))))", 
               "Output": [
                "date_dim.d_date_sk", 
                "date_dim.d_date_id", 
                "date_dim.d_date", 
                "date_dim.d_month_seq", 
                "date_dim.d_week_seq", 
                "date_dim.d_quarter_seq", 
                "date_dim.d_year", 
                "date_dim.d_dow", 
                "date_dim.d_moy", 
                "date_dim.d_dom", 
                "date_dim.d_qoy", 
                "date_dim.d_fy_year", 
                "date_dim.d_fy_quarter_seq", 
                "date_dim.d_fy_week_seq", 
                "date_dim.d_day_name", 
                "date_dim.d_quarter_name", 
                "date_dim.d_holiday", 
                "date_dim.d_weekend", 
                "date_dim.d_following_holiday", 
                "date_dim.d_first_dom", 
                "date_dim.d_last_dom", 
                "date_dim.d_same_day_ly", 
                "date_dim.d_same_day_lq", 
                "date_dim.d_current_day", 
                "date_dim.d_current_week", 
                "date_dim.d_current_month", 
                "date_dim.d_current_quarter", 
                "date_dim.d_current_year"
               ], 
               "Parent Relationship": "Inner", 
               "Schema": "pg_temp_2", 
               "Index Name": "date_dim_pkey"
              }
             ], 
             "Node Type": "Nested Loop", 
             "Plan Rows": 1, 
             "Join Type": "Inner", 
             "Parallel Aware": false, 
             "Output": [
              "store_sales.ss_ticket_number", 
              "store_sales.ss_customer_sk", 
              "store_sales.ss_hdemo_sk"
             ], 
             "Parent Relationship": "Outer", 
             "Plan Width": 12, 
             "Total Cost": 30.17
            }, 
            {
             "Index Cond": "(household_demographics.hd_demo_sk = store_sales.ss_hdemo_sk)", 
             "Startup Cost": 0.15, 
             "Scan Direction": "Forward", 
             "Plan Width": 4, 
             "Node Type": "Index Scan", 
             "Total Cost": 0.31, 
             "Plan Rows": 1, 
             "Relation Name": "household_demographics", 
             "Alias": "household_demographics", 
             "Parallel Aware": false, 
             "Filter": "((household_demographics.hd_vehicle_count > 0) AND ((household_demographics.hd_buy_potential = '501-1000'::bpchar) OR (household_demographics.hd_buy_potential = '0-500'::bpchar)) AND ((CASE WHEN (household_demographics.hd_vehicle_count > 0) THEN (household_demographics.hd_dep_count / household_demographics.hd_vehicle_count) ELSE NULL::integer END)::numeric > 1.2))", 
             "Output": [
              "household_demographics.hd_demo_sk", 
              "household_demographics.hd_income_band_sk", 
              "household_demographics.hd_buy_potential", 
              "household_demographics.hd_dep_count", 
              "household_demographics.hd_vehicle_count"
             ], 
             "Parent Relationship": "Inner", 
             "Schema": "pg_temp_2", 
             "Index Name": "household_demographics_pkey"
            }
           ], 
           "Node Type": "Nested Loop", 
           "Plan Rows": 1, 
           "Join Type": "Inner", 
           "Parallel Aware": false, 
           "Output": [
            "store_sales.ss_ticket_number", 
            "store_sales.ss_customer_sk"
           ], 
           "Parent Relationship": "Outer", 
           "Plan Width": 8, 
           "Total Cost": 30.49
          }
         ], 
         "Sort Key": [
          "store_sales.ss_ticket_number", 
          "store_sales.ss_customer_sk"
         ], 
         "Node Type": "Sort", 
         "Plan Rows": 1, 
         "Parallel Aware": false, 
         "Output": [
          "store_sales.ss_ticket_number", 
          "store_sales.ss_customer_sk"
         ], 
         "Parent Relationship": "Outer", 
         "Plan Width": 8, 
         "Total Cost": 30.51
        }
       ], 
       "Group Key": [
        "store_sales.ss_ticket_number", 
        "store_sales.ss_customer_sk"
       ], 
       "Node Type": "Aggregate", 
       "Strategy": "Sorted", 
       "Filter": "((count(*) >= 15) AND (count(*) <= 20))", 
       "Plan Rows": 1, 
       "Parallel Aware": false, 
       "Output": [
        "store_sales.ss_ticket_number", 
        "store_sales.ss_customer_sk", 
        "count(*)"
       ], 
       "Parent Relationship": "Outer", 
       "Plan Width": 16, 
       "Total Cost": 30.53
      }, 
      {
       "Index Cond": "(customer.c_customer_sk = store_sales.ss_customer_sk)", 
       "Startup Cost": 0.14, 
       "Scan Direction": "Forward", 
       "Plan Width": 264, 
       "Node Type": "Index Scan", 
       "Total Cost": 8.16, 
       "Plan Rows": 1, 
       "Relation Name": "customer", 
       "Alias": "customer", 
       "Parallel Aware": false, 
       "Output": [
        "customer.c_customer_sk", 
        "customer.c_customer_id", 
        "customer.c_current_cdemo_sk", 
        "customer.c_current_hdemo_sk", 
        "customer.c_current_addr_sk", 
        "customer.c_first_shipto_date_sk", 
        "customer.c_first_sales_date_sk", 
        "customer.c_salutation", 
        "customer.c_first_name", 
        "customer.c_last_name", 
        "customer.c_preferred_cust_flag", 
        "customer.c_birth_day", 
        "customer.c_birth_month", 
        "customer.c_birth_year", 
        "customer.c_birth_country", 
        "customer.c_login", 
        "customer.c_email_address", 
        "customer.c_last_review_date"
       ], 
       "Parent Relationship": "Inner", 
       "Schema": "pg_temp_2", 
       "Index Name": "customer_pkey"
      }
     ], 
     "Node Type": "Nested Loop", 
     "Plan Rows": 1, 
     "Join Type": "Inner", 
     "Parallel Aware": false, 
     "Output": [
      "customer.c_last_name", 
      "customer.c_first_name", 
      "customer.c_salutation", 
      "customer.c_preferred_cust_flag", 
      "store_sales.ss_ticket_number", 
      "(count(*))"
     ], 
     "Parent Relationship": "Outer", 
     "Plan Width": 272, 
     "Total Cost": 38.71
    }
   ], 
   "Sort Key": [
    "customer.c_last_name", 
    "customer.c_first_name", 
    "customer.c_salutation", 
    "customer.c_preferred_cust_flag DESC", 
    "store_sales.ss_ticket_number"
   ], 
   "Node Type": "Sort", 
   "Plan Rows": 1, 
   "Parallel Aware": false, 
   "Output": [
    "customer.c_last_name", 
    "customer.c_first_name", 
    "customer.c_salutation", 
    "customer.c_preferred_cust_flag", 
    "store_sales.ss_ticket_number", 
    "(count(*))"
   ], 
   "Plan Width": 272, 
   "Total Cost": 38.73
  }
 }
]