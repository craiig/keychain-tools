[
 {
  "Plan": {
   "Startup Cost": 29.24, 
   "Plans": [
    {
     "Partial Mode": "Simple", 
     "Startup Cost": 29.24, 
     "Plans": [
      {
       "Startup Cost": 29.24, 
       "Plans": [
        {
         "Startup Cost": 11.21, 
         "Plans": [
          {
           "Startup Cost": 11.07, 
           "Plans": [
            {
             "Startup Cost": 10.92, 
             "Plans": [
              {
               "Hash Cond": "(store_sales.ss_store_sk = store.s_store_sk)", 
               "Startup Cost": 10.77, 
               "Plans": [
                {
                 "Startup Cost": 0.0, 
                 "Plan Width": 62, 
                 "Node Type": "Seq Scan", 
                 "Plan Rows": 340, 
                 "Relation Name": "store_sales", 
                 "Alias": "store_sales", 
                 "Parallel Aware": false, 
                 "Output": [
                  "store_sales.ss_sold_date_sk", 
                  "store_sales.ss_sold_time_sk", 
                  "store_sales.ss_item_sk", 
                  "store_sales.ss_customer_sk", 
                  "store_sales.ss_cdemo_sk", 
                  "store_sales.ss_hdemo_sk", 
                  "store_sales.ss_addr_sk", 
                  "store_sales.ss_store_sk", 
                  "store_sales.ss_promo_sk", 
                  "store_sales.ss_ticket_number", 
                  "store_sales.ss_quantity", 
                  "store_sales.ss_wholesale_cost", 
                  "store_sales.ss_list_price", 
                  "store_sales.ss_sales_price", 
                  "store_sales.ss_ext_discount_amt", 
                  "store_sales.ss_ext_sales_price", 
                  "store_sales.ss_ext_wholesale_cost", 
                  "store_sales.ss_ext_list_price", 
                  "store_sales.ss_ext_tax", 
                  "store_sales.ss_coupon_amt", 
                  "store_sales.ss_net_paid", 
                  "store_sales.ss_net_paid_inc_tax", 
                  "store_sales.ss_net_profit"
                 ], 
                 "Parent Relationship": "Outer", 
                 "Total Cost": 13.4, 
                 "Schema": "pg_temp_2"
                }, 
                {
                 "Startup Cost": 10.7, 
                 "Plans": [
                  {
                   "Filter": "(store.s_state = ANY ('{TN,TN,TN,TN,TN,TN}'::bpchar[]))", 
                   "Startup Cost": 0.0, 
                   "Plan Width": 16, 
                   "Node Type": "Seq Scan", 
                   "Plan Rows": 6, 
                   "Relation Name": "store", 
                   "Alias": "store", 
                   "Parallel Aware": false, 
                   "Output": [
                    "store.s_state", 
                    "store.s_store_sk"
                   ], 
                   "Parent Relationship": "Outer", 
                   "Total Cost": 10.7, 
                   "Schema": "pg_temp_2"
                  }
                 ], 
                 "Node Type": "Hash", 
                 "Plan Rows": 6, 
                 "Parallel Aware": false, 
                 "Output": [
                  "store.s_state", 
                  "store.s_store_sk"
                 ], 
                 "Parent Relationship": "Inner", 
                 "Plan Width": 16, 
                 "Total Cost": 10.7
                }
               ], 
               "Node Type": "Hash Join", 
               "Plan Rows": 10, 
               "Join Type": "Inner", 
               "Parallel Aware": false, 
               "Output": [
                "store_sales.ss_quantity", 
                "store_sales.ss_list_price", 
                "store_sales.ss_coupon_amt", 
                "store_sales.ss_sales_price", 
                "store_sales.ss_sold_date_sk", 
                "store_sales.ss_item_sk", 
                "store_sales.ss_cdemo_sk", 
                "store.s_state"
               ], 
               "Parent Relationship": "Outer", 
               "Plan Width": 70, 
               "Total Cost": 25.55
              }, 
              {
               "Index Cond": "(date_dim.d_date_sk = store_sales.ss_sold_date_sk)", 
               "Startup Cost": 0.15, 
               "Scan Direction": "Forward", 
               "Plan Width": 4, 
               "Node Type": "Index Scan", 
               "Total Cost": 0.3, 
               "Plan Rows": 1, 
               "Relation Name": "date_dim", 
               "Alias": "date_dim", 
               "Parallel Aware": false, 
               "Filter": "(date_dim.d_year = 1999)", 
               "Output": [
                "date_dim.d_date_sk", 
                "date_dim.d_date_id", 
                "date_dim.d_date", 
                "date_dim.d_month_seq", 
                "date_dim.d_week_seq", 
                "date_dim.d_quarter_seq", 
                "date_dim.d_year", 
                "date_dim.d_dow", 
                "date_dim.d_moy", 
                "date_dim.d_dom", 
                "date_dim.d_qoy", 
                "date_dim.d_fy_year", 
                "date_dim.d_fy_quarter_seq", 
                "date_dim.d_fy_week_seq", 
                "date_dim.d_day_name", 
                "date_dim.d_quarter_name", 
                "date_dim.d_holiday", 
                "date_dim.d_weekend", 
                "date_dim.d_following_holiday", 
                "date_dim.d_first_dom", 
                "date_dim.d_last_dom", 
                "date_dim.d_same_day_ly", 
                "date_dim.d_same_day_lq", 
                "date_dim.d_current_day", 
                "date_dim.d_current_week", 
                "date_dim.d_current_month", 
                "date_dim.d_current_quarter", 
                "date_dim.d_current_year"
               ], 
               "Parent Relationship": "Inner", 
               "Schema": "pg_temp_2", 
               "Index Name": "date_dim_pkey"
              }
             ], 
             "Node Type": "Nested Loop", 
             "Plan Rows": 1, 
             "Join Type": "Inner", 
             "Parallel Aware": false, 
             "Output": [
              "store_sales.ss_quantity", 
              "store_sales.ss_list_price", 
              "store_sales.ss_coupon_amt", 
              "store_sales.ss_sales_price", 
              "store_sales.ss_item_sk", 
              "store_sales.ss_cdemo_sk", 
              "store.s_state"
             ], 
             "Parent Relationship": "Outer", 
             "Plan Width": 66, 
             "Total Cost": 28.62
            }, 
            {
             "Index Cond": "(customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk)", 
             "Startup Cost": 0.15, 
             "Scan Direction": "Forward", 
             "Plan Width": 4, 
             "Node Type": "Index Scan", 
             "Total Cost": 0.3, 
             "Plan Rows": 1, 
             "Relation Name": "customer_demographics", 
             "Alias": "customer_demographics", 
             "Parallel Aware": false, 
             "Filter": "((customer_demographics.cd_gender = 'F'::bpchar) AND (customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar))", 
             "Output": [
              "customer_demographics.cd_demo_sk", 
              "customer_demographics.cd_gender", 
              "customer_demographics.cd_marital_status", 
              "customer_demographics.cd_education_status", 
              "customer_demographics.cd_purchase_estimate", 
              "customer_demographics.cd_credit_rating", 
              "customer_demographics.cd_dep_count", 
              "customer_demographics.cd_dep_employed_count", 
              "customer_demographics.cd_dep_college_count"
             ], 
             "Parent Relationship": "Inner", 
             "Schema": "pg_temp_2", 
             "Index Name": "customer_demographics_pkey"
            }
           ], 
           "Node Type": "Nested Loop", 
           "Plan Rows": 1, 
           "Join Type": "Inner", 
           "Parallel Aware": false, 
           "Output": [
            "store_sales.ss_quantity", 
            "store_sales.ss_list_price", 
            "store_sales.ss_coupon_amt", 
            "store_sales.ss_sales_price", 
            "store_sales.ss_item_sk", 
            "store.s_state"
           ], 
           "Parent Relationship": "Outer", 
           "Plan Width": 62, 
           "Total Cost": 28.93
          }, 
          {
           "Index Cond": "(item.i_item_sk = store_sales.ss_item_sk)", 
           "Startup Cost": 0.14, 
           "Scan Direction": "Forward", 
           "Plan Width": 72, 
           "Node Type": "Index Scan", 
           "Total Cost": 0.29, 
           "Plan Rows": 1, 
           "Relation Name": "item", 
           "Alias": "item", 
           "Parallel Aware": false, 
           "Output": [
            "item.i_item_sk", 
            "item.i_item_id", 
            "item.i_rec_start_date", 
            "item.i_rec_end_date", 
            "item.i_item_desc", 
            "item.i_current_price", 
            "item.i_wholesale_cost", 
            "item.i_brand_id", 
            "item.i_brand", 
            "item.i_class_id", 
            "item.i_class", 
            "item.i_category_id", 
            "item.i_category", 
            "item.i_manufact_id", 
            "item.i_manufact", 
            "item.i_size", 
            "item.i_formulation", 
            "item.i_color", 
            "item.i_units", 
            "item.i_container", 
            "item.i_manager_id", 
            "item.i_product_name"
           ], 
           "Parent Relationship": "Inner", 
           "Schema": "pg_temp_2", 
           "Index Name": "item_pkey"
          }
         ], 
         "Node Type": "Nested Loop", 
         "Plan Rows": 1, 
         "Join Type": "Inner", 
         "Parallel Aware": false, 
         "Output": [
          "item.i_item_id", 
          "store.s_state", 
          "store_sales.ss_quantity", 
          "store_sales.ss_list_price", 
          "store_sales.ss_coupon_amt", 
          "store_sales.ss_sales_price"
         ], 
         "Parent Relationship": "Outer", 
         "Plan Width": 126, 
         "Total Cost": 29.23
        }
       ], 
       "Sort Key": [
        "item.i_item_id", 
        "store.s_state"
       ], 
       "Node Type": "Sort", 
       "Plan Rows": 1, 
       "Parallel Aware": false, 
       "Output": [
        "item.i_item_id", 
        "store.s_state", 
        "store_sales.ss_quantity", 
        "store_sales.ss_list_price", 
        "store_sales.ss_coupon_amt", 
        "store_sales.ss_sales_price"
       ], 
       "Parent Relationship": "Outer", 
       "Plan Width": 126, 
       "Total Cost": 29.24
      }
     ], 
     "Grouping Sets": [
      {
       "Group Keys": [
        [
         "item.i_item_id", 
         "store.s_state"
        ], 
        [
         "item.i_item_id"
        ], 
        []
       ]
      }
     ], 
     "Node Type": "Aggregate", 
     "Strategy": "Sorted", 
     "Plan Rows": 3, 
     "Parallel Aware": false, 
     "Output": [
      "item.i_item_id", 
      "store.s_state", 
      "GROUPING(store.s_state)", 
      "avg(store_sales.ss_quantity)", 
      "avg(store_sales.ss_list_price)", 
      "avg(store_sales.ss_coupon_amt)", 
      "avg(store_sales.ss_sales_price)"
     ], 
     "Parent Relationship": "Outer", 
     "Plan Width": 212, 
     "Total Cost": 29.32
    }
   ], 
   "Node Type": "Limit", 
   "Plan Rows": 3, 
   "Parallel Aware": false, 
   "Output": [
    "item.i_item_id", 
    "store.s_state", 
    "(GROUPING(store.s_state))", 
    "(avg(store_sales.ss_quantity))", 
    "(avg(store_sales.ss_list_price))", 
    "(avg(store_sales.ss_coupon_amt))", 
    "(avg(store_sales.ss_sales_price))"
   ], 
   "Plan Width": 212, 
   "Total Cost": 29.32
  }
 }
]