[
 {
  "Plan": {
   "Startup Cost": 30.91, 
   "Plans": [
    {
     "Partial Mode": "Simple", 
     "Startup Cost": 30.91, 
     "Plans": [
      {
       "Startup Cost": 30.91, 
       "Plans": [
        {
         "Startup Cost": 14.5, 
         "Plans": [
          {
           "Startup Cost": 14.35, 
           "Plans": [
            {
             "Startup Cost": 14.21, 
             "Plans": [
              {
               "Hash Cond": "(store_returns.sr_returned_date_sk = d2.d_date_sk)", 
               "Startup Cost": 14.06, 
               "Plans": [
                {
                 "Startup Cost": 0.0, 
                 "Plan Width": 16, 
                 "Node Type": "Seq Scan", 
                 "Plan Rows": 410, 
                 "Relation Name": "store_returns", 
                 "Alias": "store_returns", 
                 "Parallel Aware": false, 
                 "Output": [
                  "store_returns.sr_returned_date_sk", 
                  "store_returns.sr_return_time_sk", 
                  "store_returns.sr_item_sk", 
                  "store_returns.sr_customer_sk", 
                  "store_returns.sr_cdemo_sk", 
                  "store_returns.sr_hdemo_sk", 
                  "store_returns.sr_addr_sk", 
                  "store_returns.sr_store_sk", 
                  "store_returns.sr_reason_sk", 
                  "store_returns.sr_ticket_number", 
                  "store_returns.sr_return_quantity", 
                  "store_returns.sr_return_amt", 
                  "store_returns.sr_return_tax", 
                  "store_returns.sr_return_amt_inc_tax", 
                  "store_returns.sr_fee", 
                  "store_returns.sr_return_ship_cost", 
                  "store_returns.sr_refunded_cash", 
                  "store_returns.sr_reversed_charge", 
                  "store_returns.sr_store_credit", 
                  "store_returns.sr_net_loss"
                 ], 
                 "Parent Relationship": "Outer", 
                 "Total Cost": 14.1, 
                 "Schema": "pg_temp_2"
                }, 
                {
                 "Startup Cost": 14.05, 
                 "Plans": [
                  {
                   "Filter": "((d2.d_year = 2002) AND (d2.d_moy = 8))", 
                   "Startup Cost": 0.0, 
                   "Plan Width": 4, 
                   "Node Type": "Seq Scan", 
                   "Plan Rows": 1, 
                   "Relation Name": "date_dim", 
                   "Alias": "d2", 
                   "Parallel Aware": false, 
                   "Output": [
                    "d2.d_date_sk"
                   ], 
                   "Parent Relationship": "Outer", 
                   "Total Cost": 14.05, 
                   "Schema": "pg_temp_2"
                  }
                 ], 
                 "Node Type": "Hash", 
                 "Plan Rows": 1, 
                 "Parallel Aware": false, 
                 "Output": [
                  "d2.d_date_sk"
                 ], 
                 "Parent Relationship": "Inner", 
                 "Plan Width": 4, 
                 "Total Cost": 14.05
                }
               ], 
               "Node Type": "Hash Join", 
               "Plan Rows": 2, 
               "Join Type": "Inner", 
               "Parallel Aware": false, 
               "Output": [
                "store_returns.sr_returned_date_sk", 
                "store_returns.sr_ticket_number", 
                "store_returns.sr_item_sk", 
                "store_returns.sr_customer_sk"
               ], 
               "Parent Relationship": "Outer", 
               "Plan Width": 16, 
               "Total Cost": 29.72
              }, 
              {
               "Index Cond": "((store_sales.ss_item_sk = store_returns.sr_item_sk) AND (store_sales.ss_ticket_number = store_returns.sr_ticket_number))", 
               "Startup Cost": 0.15, 
               "Scan Direction": "Forward", 
               "Plan Width": 20, 
               "Node Type": "Index Scan", 
               "Total Cost": 0.28, 
               "Plan Rows": 1, 
               "Relation Name": "store_sales", 
               "Alias": "store_sales", 
               "Parallel Aware": false, 
               "Filter": "(store_returns.sr_customer_sk = store_sales.ss_customer_sk)", 
               "Output": [
                "store_sales.ss_sold_date_sk", 
                "store_sales.ss_sold_time_sk", 
                "store_sales.ss_item_sk", 
                "store_sales.ss_customer_sk", 
                "store_sales.ss_cdemo_sk", 
                "store_sales.ss_hdemo_sk", 
                "store_sales.ss_addr_sk", 
                "store_sales.ss_store_sk", 
                "store_sales.ss_promo_sk", 
                "store_sales.ss_ticket_number", 
                "store_sales.ss_quantity", 
                "store_sales.ss_wholesale_cost", 
                "store_sales.ss_list_price", 
                "store_sales.ss_sales_price", 
                "store_sales.ss_ext_discount_amt", 
                "store_sales.ss_ext_sales_price", 
                "store_sales.ss_ext_wholesale_cost", 
                "store_sales.ss_ext_list_price", 
                "store_sales.ss_ext_tax", 
                "store_sales.ss_coupon_amt", 
                "store_sales.ss_net_paid", 
                "store_sales.ss_net_paid_inc_tax", 
                "store_sales.ss_net_profit"
               ], 
               "Parent Relationship": "Inner", 
               "Schema": "pg_temp_2", 
               "Index Name": "store_sales_pkey"
              }
             ], 
             "Node Type": "Nested Loop", 
             "Plan Rows": 1, 
             "Join Type": "Inner", 
             "Parallel Aware": false, 
             "Output": [
              "store_sales.ss_sold_date_sk", 
              "store_sales.ss_store_sk", 
              "store_returns.sr_returned_date_sk"
             ], 
             "Parent Relationship": "Outer", 
             "Plan Width": 12, 
             "Total Cost": 30.29
            }, 
            {
             "Index Cond": "(store.s_store_sk = store_sales.ss_store_sk)", 
             "Startup Cost": 0.14, 
             "Scan Direction": "Forward", 
             "Plan Width": 682, 
             "Node Type": "Index Scan", 
             "Total Cost": 0.29, 
             "Plan Rows": 1, 
             "Relation Name": "store", 
             "Alias": "store", 
             "Parallel Aware": false, 
             "Output": [
              "store.s_store_sk", 
              "store.s_store_id", 
              "store.s_rec_start_date", 
              "store.s_rec_end_date", 
              "store.s_closed_date_sk", 
              "store.s_store_name", 
              "store.s_number_employees", 
              "store.s_floor_space", 
              "store.s_hours", 
              "store.s_manager", 
              "store.s_market_id", 
              "store.s_geography_class", 
              "store.s_market_desc", 
              "store.s_market_manager", 
              "store.s_division_id", 
              "store.s_division_name", 
              "store.s_company_id", 
              "store.s_company_name", 
              "store.s_street_number", 
              "store.s_street_name", 
              "store.s_street_type", 
              "store.s_suite_number", 
              "store.s_city", 
              "store.s_county", 
              "store.s_state", 
              "store.s_zip", 
              "store.s_country", 
              "store.s_gmt_offset", 
              "store.s_tax_precentage"
             ], 
             "Parent Relationship": "Inner", 
             "Schema": "pg_temp_2", 
             "Index Name": "store_pkey"
            }
           ], 
           "Node Type": "Nested Loop", 
           "Plan Rows": 1, 
           "Join Type": "Inner", 
           "Parallel Aware": false, 
           "Output": [
            "store_sales.ss_sold_date_sk", 
            "store_returns.sr_returned_date_sk", 
            "store.s_store_name", 
            "store.s_company_id", 
            "store.s_street_number", 
            "store.s_street_name", 
            "store.s_street_type", 
            "store.s_suite_number", 
            "store.s_city", 
            "store.s_county", 
            "store.s_state", 
            "store.s_zip"
           ], 
           "Parent Relationship": "Outer", 
           "Plan Width": 686, 
           "Total Cost": 30.59
          }, 
          {
           "Index Cond": "(d1.d_date_sk = store_sales.ss_sold_date_sk)", 
           "Startup Cost": 0.15, 
           "Scan Direction": "Forward", 
           "Plan Width": 4, 
           "Node Type": "Index Only Scan", 
           "Total Cost": 0.29, 
           "Plan Rows": 1, 
           "Relation Name": "date_dim", 
           "Alias": "d1", 
           "Parallel Aware": false, 
           "Output": [
            "d1.d_date_sk"
           ], 
           "Parent Relationship": "Inner", 
           "Schema": "pg_temp_2", 
           "Index Name": "date_dim_pkey"
          }
         ], 
         "Node Type": "Nested Loop", 
         "Plan Rows": 1, 
         "Join Type": "Inner", 
         "Parallel Aware": false, 
         "Output": [
          "store.s_store_name", 
          "store.s_company_id", 
          "store.s_street_number", 
          "store.s_street_name", 
          "store.s_street_type", 
          "store.s_suite_number", 
          "store.s_city", 
          "store.s_county", 
          "store.s_state", 
          "store.s_zip", 
          "store_returns.sr_returned_date_sk", 
          "store_sales.ss_sold_date_sk"
         ], 
         "Parent Relationship": "Outer", 
         "Plan Width": 686, 
         "Total Cost": 30.9
        }
       ], 
       "Sort Key": [
        "store.s_store_name", 
        "store.s_company_id", 
        "store.s_street_number", 
        "store.s_street_name", 
        "store.s_street_type", 
        "store.s_suite_number", 
        "store.s_city", 
        "store.s_county", 
        "store.s_state", 
        "store.s_zip"
       ], 
       "Node Type": "Sort", 
       "Plan Rows": 1, 
       "Parallel Aware": false, 
       "Output": [
        "store.s_store_name", 
        "store.s_company_id", 
        "store.s_street_number", 
        "store.s_street_name", 
        "store.s_street_type", 
        "store.s_suite_number", 
        "store.s_city", 
        "store.s_county", 
        "store.s_state", 
        "store.s_zip", 
        "store_returns.sr_returned_date_sk", 
        "store_sales.ss_sold_date_sk"
       ], 
       "Parent Relationship": "Outer", 
       "Plan Width": 686, 
       "Total Cost": 30.91
      }
     ], 
     "Group Key": [
      "store.s_store_name", 
      "store.s_company_id", 
      "store.s_street_number", 
      "store.s_street_name", 
      "store.s_street_type", 
      "store.s_suite_number", 
      "store.s_city", 
      "store.s_county", 
      "store.s_state", 
      "store.s_zip"
     ], 
     "Node Type": "Aggregate", 
     "Strategy": "Sorted", 
     "Plan Rows": 1, 
     "Parallel Aware": false, 
     "Output": [
      "store.s_store_name", 
      "store.s_company_id", 
      "store.s_street_number", 
      "store.s_street_name", 
      "store.s_street_type", 
      "store.s_suite_number", 
      "store.s_city", 
      "store.s_county", 
      "store.s_state", 
      "store.s_zip", 
      "sum(CASE WHEN ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 30) THEN 1 ELSE 0 END)", 
      "sum(CASE WHEN (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 30) AND ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 60)) THEN 1 ELSE 0 END)", 
      "sum(CASE WHEN (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 60) AND ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 90)) THEN 1 ELSE 0 END)", 
      "sum(CASE WHEN (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 90) AND ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 120)) THEN 1 ELSE 0 END)", 
      "sum(CASE WHEN ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 120) THEN 1 ELSE 0 END)"
     ], 
     "Parent Relationship": "Outer", 
     "Plan Width": 718, 
     "Total Cost": 31.0
    }
   ], 
   "Node Type": "Limit", 
   "Plan Rows": 1, 
   "Parallel Aware": false, 
   "Output": [
    "store.s_store_name", 
    "store.s_company_id", 
    "store.s_street_number", 
    "store.s_street_name", 
    "store.s_street_type", 
    "store.s_suite_number", 
    "store.s_city", 
    "store.s_county", 
    "store.s_state", 
    "store.s_zip", 
    "(sum(CASE WHEN ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 30) THEN 1 ELSE 0 END))", 
    "(sum(CASE WHEN (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 30) AND ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 60)) THEN 1 ELSE 0 END))", 
    "(sum(CASE WHEN (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 60) AND ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 90)) THEN 1 ELSE 0 END))", 
    "(sum(CASE WHEN (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 90) AND ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 120)) THEN 1 ELSE 0 END))", 
    "(sum(CASE WHEN ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 120) THEN 1 ELSE 0 END))"
   ], 
   "Plan Width": 718, 
   "Total Cost": 31.0
  }
 }
]