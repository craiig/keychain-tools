[
 {
  "Plan": {
   "Startup Cost": 55.9, 
   "Plans": [
    {
     "Partial Mode": "Simple", 
     "Startup Cost": 55.9, 
     "Plans": [
      {
       "Startup Cost": 55.9, 
       "Plans": [
        {
         "Startup Cost": 27.6, 
         "Plans": [
          {
           "Partial Mode": "Simple", 
           "Startup Cost": 27.6, 
           "Plans": [
            {
             "Startup Cost": 27.6, 
             "Plans": [
              {
               "Startup Cost": 12.71, 
               "Plans": [
                {
                 "Startup Cost": 12.57, 
                 "Plans": [
                  {
                   "Startup Cost": 12.42, 
                   "Plans": [
                    {
                     "Hash Cond": "(web_sales.ws_ship_mode_sk = ship_mode.sm_ship_mode_sk)", 
                     "Startup Cost": 12.28, 
                     "Plans": [
                      {
                       "Startup Cost": 0.0, 
                       "Plan Width": 48, 
                       "Node Type": "Seq Scan", 
                       "Plan Rows": 260, 
                       "Relation Name": "web_sales", 
                       "Alias": "web_sales", 
                       "Parallel Aware": false, 
                       "Output": [
                        "web_sales.ws_sold_date_sk", 
                        "web_sales.ws_sold_time_sk", 
                        "web_sales.ws_ship_date_sk", 
                        "web_sales.ws_item_sk", 
                        "web_sales.ws_bill_customer_sk", 
                        "web_sales.ws_bill_cdemo_sk", 
                        "web_sales.ws_bill_hdemo_sk", 
                        "web_sales.ws_bill_addr_sk", 
                        "web_sales.ws_ship_customer_sk", 
                        "web_sales.ws_ship_cdemo_sk", 
                        "web_sales.ws_ship_hdemo_sk", 
                        "web_sales.ws_ship_addr_sk", 
                        "web_sales.ws_web_page_sk", 
                        "web_sales.ws_web_site_sk", 
                        "web_sales.ws_ship_mode_sk", 
                        "web_sales.ws_warehouse_sk", 
                        "web_sales.ws_promo_sk", 
                        "web_sales.ws_order_number", 
                        "web_sales.ws_quantity", 
                        "web_sales.ws_wholesale_cost", 
                        "web_sales.ws_list_price", 
                        "web_sales.ws_sales_price", 
                        "web_sales.ws_ext_discount_amt", 
                        "web_sales.ws_ext_sales_price", 
                        "web_sales.ws_ext_wholesale_cost", 
                        "web_sales.ws_ext_list_price", 
                        "web_sales.ws_ext_tax", 
                        "web_sales.ws_coupon_amt", 
                        "web_sales.ws_ext_ship_cost", 
                        "web_sales.ws_net_paid", 
                        "web_sales.ws_net_paid_inc_tax", 
                        "web_sales.ws_net_paid_inc_ship", 
                        "web_sales.ws_net_paid_inc_ship_tax", 
                        "web_sales.ws_net_profit"
                       ], 
                       "Parent Relationship": "Outer", 
                       "Total Cost": 12.6, 
                       "Schema": "pg_temp_2"
                      }, 
                      {
                       "Startup Cost": 12.25, 
                       "Plans": [
                        {
                         "Filter": "(ship_mode.sm_carrier = ANY ('{BOXBUNDLES,ZOUROS}'::bpchar[]))", 
                         "Startup Cost": 0.0, 
                         "Plan Width": 4, 
                         "Node Type": "Seq Scan", 
                         "Plan Rows": 2, 
                         "Relation Name": "ship_mode", 
                         "Alias": "ship_mode", 
                         "Parallel Aware": false, 
                         "Output": [
                          "ship_mode.sm_ship_mode_sk"
                         ], 
                         "Parent Relationship": "Outer", 
                         "Total Cost": 12.25, 
                         "Schema": "pg_temp_2"
                        }
                       ], 
                       "Node Type": "Hash", 
                       "Plan Rows": 2, 
                       "Parallel Aware": false, 
                       "Output": [
                        "ship_mode.sm_ship_mode_sk"
                       ], 
                       "Parent Relationship": "Inner", 
                       "Plan Width": 4, 
                       "Total Cost": 12.25
                      }
                     ], 
                     "Node Type": "Hash Join", 
                     "Plan Rows": 3, 
                     "Join Type": "Inner", 
                     "Parallel Aware": false, 
                     "Output": [
                      "web_sales.ws_sales_price", 
                      "web_sales.ws_quantity", 
                      "web_sales.ws_net_paid_inc_tax", 
                      "web_sales.ws_warehouse_sk", 
                      "web_sales.ws_sold_date_sk", 
                      "web_sales.ws_sold_time_sk"
                     ], 
                     "Parent Relationship": "Outer", 
                     "Plan Width": 44, 
                     "Total Cost": 25.88
                    }, 
                    {
                     "Index Cond": "(warehouse.w_warehouse_sk = web_sales.ws_warehouse_sk)", 
                     "Startup Cost": 0.14, 
                     "Scan Direction": "Forward", 
                     "Plan Width": 352, 
                     "Node Type": "Index Scan", 
                     "Total Cost": 0.33, 
                     "Plan Rows": 1, 
                     "Relation Name": "warehouse", 
                     "Alias": "warehouse", 
                     "Parallel Aware": false, 
                     "Output": [
                      "warehouse.w_warehouse_sk", 
                      "warehouse.w_warehouse_id", 
                      "warehouse.w_warehouse_name", 
                      "warehouse.w_warehouse_sq_ft", 
                      "warehouse.w_street_number", 
                      "warehouse.w_street_name", 
                      "warehouse.w_street_type", 
                      "warehouse.w_suite_number", 
                      "warehouse.w_city", 
                      "warehouse.w_county", 
                      "warehouse.w_state", 
                      "warehouse.w_zip", 
                      "warehouse.w_country", 
                      "warehouse.w_gmt_offset"
                     ], 
                     "Parent Relationship": "Inner", 
                     "Schema": "pg_temp_2", 
                     "Index Name": "warehouse_pkey"
                    }
                   ], 
                   "Node Type": "Nested Loop", 
                   "Plan Rows": 1, 
                   "Join Type": "Inner", 
                   "Parallel Aware": false, 
                   "Output": [
                    "web_sales.ws_sales_price", 
                    "web_sales.ws_quantity", 
                    "web_sales.ws_net_paid_inc_tax", 
                    "web_sales.ws_sold_date_sk", 
                    "web_sales.ws_sold_time_sk", 
                    "warehouse.w_warehouse_name", 
                    "warehouse.w_warehouse_sq_ft", 
                    "warehouse.w_city", 
                    "warehouse.w_county", 
                    "warehouse.w_state", 
                    "warehouse.w_country"
                   ], 
                   "Parent Relationship": "Outer", 
                   "Plan Width": 388, 
                   "Total Cost": 26.9
                  }, 
                  {
                   "Index Cond": "(date_dim.d_date_sk = web_sales.ws_sold_date_sk)", 
                   "Startup Cost": 0.15, 
                   "Scan Direction": "Forward", 
                   "Plan Width": 12, 
                   "Node Type": "Index Scan", 
                   "Total Cost": 0.34, 
                   "Plan Rows": 1, 
                   "Relation Name": "date_dim", 
                   "Alias": "date_dim", 
                   "Parallel Aware": false, 
                   "Filter": "(date_dim.d_year = 2000)", 
                   "Output": [
                    "date_dim.d_date_sk", 
                    "date_dim.d_date_id", 
                    "date_dim.d_date", 
                    "date_dim.d_month_seq", 
                    "date_dim.d_week_seq", 
                    "date_dim.d_quarter_seq", 
                    "date_dim.d_year", 
                    "date_dim.d_dow", 
                    "date_dim.d_moy", 
                    "date_dim.d_dom", 
                    "date_dim.d_qoy", 
                    "date_dim.d_fy_year", 
                    "date_dim.d_fy_quarter_seq", 
                    "date_dim.d_fy_week_seq", 
                    "date_dim.d_day_name", 
                    "date_dim.d_quarter_name", 
                    "date_dim.d_holiday", 
                    "date_dim.d_weekend", 
                    "date_dim.d_following_holiday", 
                    "date_dim.d_first_dom", 
                    "date_dim.d_last_dom", 
                    "date_dim.d_same_day_ly", 
                    "date_dim.d_same_day_lq", 
                    "date_dim.d_current_day", 
                    "date_dim.d_current_week", 
                    "date_dim.d_current_month", 
                    "date_dim.d_current_quarter", 
                    "date_dim.d_current_year"
                   ], 
                   "Parent Relationship": "Inner", 
                   "Schema": "pg_temp_2", 
                   "Index Name": "date_dim_pkey"
                  }
                 ], 
                 "Node Type": "Nested Loop", 
                 "Plan Rows": 1, 
                 "Join Type": "Inner", 
                 "Parallel Aware": false, 
                 "Output": [
                  "web_sales.ws_sales_price", 
                  "web_sales.ws_quantity", 
                  "web_sales.ws_net_paid_inc_tax", 
                  "web_sales.ws_sold_time_sk", 
                  "warehouse.w_warehouse_name", 
                  "warehouse.w_warehouse_sq_ft", 
                  "warehouse.w_city", 
                  "warehouse.w_county", 
                  "warehouse.w_state", 
                  "warehouse.w_country", 
                  "date_dim.d_year", 
                  "date_dim.d_moy"
                 ], 
                 "Parent Relationship": "Outer", 
                 "Plan Width": 392, 
                 "Total Cost": 27.24
                }, 
                {
                 "Index Cond": "(time_dim.t_time_sk = web_sales.ws_sold_time_sk)", 
                 "Startup Cost": 0.14, 
                 "Scan Direction": "Forward", 
                 "Plan Width": 4, 
                 "Node Type": "Index Scan", 
                 "Total Cost": 0.34, 
                 "Plan Rows": 1, 
                 "Relation Name": "time_dim", 
                 "Alias": "time_dim", 
                 "Parallel Aware": false, 
                 "Filter": "((time_dim.t_time >= 30938) AND (time_dim.t_time <= 59738))", 
                 "Output": [
                  "time_dim.t_time_sk", 
                  "time_dim.t_time_id", 
                  "time_dim.t_time", 
                  "time_dim.t_hour", 
                  "time_dim.t_minute", 
                  "time_dim.t_second", 
                  "time_dim.t_am_pm", 
                  "time_dim.t_shift", 
                  "time_dim.t_sub_shift", 
                  "time_dim.t_meal_time"
                 ], 
                 "Parent Relationship": "Inner", 
                 "Schema": "pg_temp_2", 
                 "Index Name": "time_dim_pkey"
                }
               ], 
               "Node Type": "Nested Loop", 
               "Plan Rows": 1, 
               "Join Type": "Inner", 
               "Parallel Aware": false, 
               "Output": [
                "warehouse.w_warehouse_name", 
                "warehouse.w_warehouse_sq_ft", 
                "warehouse.w_city", 
                "warehouse.w_county", 
                "warehouse.w_state", 
                "warehouse.w_country", 
                "date_dim.d_year", 
                "date_dim.d_moy", 
                "web_sales.ws_sales_price", 
                "web_sales.ws_quantity", 
                "web_sales.ws_net_paid_inc_tax"
               ], 
               "Parent Relationship": "Outer", 
               "Plan Width": 388, 
               "Total Cost": 27.59
              }
             ], 
             "Sort Key": [
              "warehouse.w_warehouse_name", 
              "warehouse.w_warehouse_sq_ft", 
              "warehouse.w_city", 
              "warehouse.w_county", 
              "warehouse.w_state", 
              "warehouse.w_country"
             ], 
             "Node Type": "Sort", 
             "Plan Rows": 1, 
             "Parallel Aware": false, 
             "Output": [
              "warehouse.w_warehouse_name", 
              "warehouse.w_warehouse_sq_ft", 
              "warehouse.w_city", 
              "warehouse.w_county", 
              "warehouse.w_state", 
              "warehouse.w_country", 
              "date_dim.d_year", 
              "date_dim.d_moy", 
              "web_sales.ws_sales_price", 
              "web_sales.ws_quantity", 
              "web_sales.ws_net_paid_inc_tax"
             ], 
             "Parent Relationship": "Outer", 
             "Plan Width": 388, 
             "Total Cost": 27.61
            }
           ], 
           "Group Key": [
            "warehouse.w_warehouse_name", 
            "warehouse.w_warehouse_sq_ft", 
            "warehouse.w_city", 
            "warehouse.w_county", 
            "warehouse.w_state", 
            "warehouse.w_country", 
            "date_dim.d_year"
           ], 
           "Node Type": "Aggregate", 
           "Strategy": "Sorted", 
           "Plan Rows": 1, 
           "Parallel Aware": false, 
           "Output": [
            "warehouse.w_warehouse_name", 
            "warehouse.w_warehouse_sq_ft", 
            "warehouse.w_city", 
            "warehouse.w_county", 
            "warehouse.w_state", 
            "warehouse.w_country", 
            "'BOXBUNDLES,ZOUROS'::text", 
            "date_dim.d_year", 
            "sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)"
           ], 
           "Parent Relationship": "Member", 
           "Plan Width": 1152, 
           "Total Cost": 27.93
          }, 
          {
           "Partial Mode": "Simple", 
           "Startup Cost": 27.6, 
           "Plans": [
            {
             "Startup Cost": 27.6, 
             "Plans": [
              {
               "Startup Cost": 12.71, 
               "Plans": [
                {
                 "Startup Cost": 12.57, 
                 "Plans": [
                  {
                   "Startup Cost": 12.42, 
                   "Plans": [
                    {
                     "Hash Cond": "(catalog_sales.cs_ship_mode_sk = ship_mode_1.sm_ship_mode_sk)", 
                     "Startup Cost": 12.28, 
                     "Plans": [
                      {
                       "Startup Cost": 0.0, 
                       "Plan Width": 48, 
                       "Node Type": "Seq Scan", 
                       "Plan Rows": 260, 
                       "Relation Name": "catalog_sales", 
                       "Alias": "catalog_sales", 
                       "Parallel Aware": false, 
                       "Output": [
                        "catalog_sales.cs_sold_date_sk", 
                        "catalog_sales.cs_sold_time_sk", 
                        "catalog_sales.cs_ship_date_sk", 
                        "catalog_sales.cs_bill_customer_sk", 
                        "catalog_sales.cs_bill_cdemo_sk", 
                        "catalog_sales.cs_bill_hdemo_sk", 
                        "catalog_sales.cs_bill_addr_sk", 
                        "catalog_sales.cs_ship_customer_sk", 
                        "catalog_sales.cs_ship_cdemo_sk", 
                        "catalog_sales.cs_ship_hdemo_sk", 
                        "catalog_sales.cs_ship_addr_sk", 
                        "catalog_sales.cs_call_center_sk", 
                        "catalog_sales.cs_catalog_page_sk", 
                        "catalog_sales.cs_ship_mode_sk", 
                        "catalog_sales.cs_warehouse_sk", 
                        "catalog_sales.cs_item_sk", 
                        "catalog_sales.cs_promo_sk", 
                        "catalog_sales.cs_order_number", 
                        "catalog_sales.cs_quantity", 
                        "catalog_sales.cs_wholesale_cost", 
                        "catalog_sales.cs_list_price", 
                        "catalog_sales.cs_sales_price", 
                        "catalog_sales.cs_ext_discount_amt", 
                        "catalog_sales.cs_ext_sales_price", 
                        "catalog_sales.cs_ext_wholesale_cost", 
                        "catalog_sales.cs_ext_list_price", 
                        "catalog_sales.cs_ext_tax", 
                        "catalog_sales.cs_coupon_amt", 
                        "catalog_sales.cs_ext_ship_cost", 
                        "catalog_sales.cs_net_paid", 
                        "catalog_sales.cs_net_paid_inc_tax", 
                        "catalog_sales.cs_net_paid_inc_ship", 
                        "catalog_sales.cs_net_paid_inc_ship_tax", 
                        "catalog_sales.cs_net_profit"
                       ], 
                       "Parent Relationship": "Outer", 
                       "Total Cost": 12.6, 
                       "Schema": "pg_temp_2"
                      }, 
                      {
                       "Startup Cost": 12.25, 
                       "Plans": [
                        {
                         "Filter": "(ship_mode_1.sm_carrier = ANY ('{BOXBUNDLES,ZOUROS}'::bpchar[]))", 
                         "Startup Cost": 0.0, 
                         "Plan Width": 4, 
                         "Node Type": "Seq Scan", 
                         "Plan Rows": 2, 
                         "Relation Name": "ship_mode", 
                         "Alias": "ship_mode_1", 
                         "Parallel Aware": false, 
                         "Output": [
                          "ship_mode_1.sm_ship_mode_sk"
                         ], 
                         "Parent Relationship": "Outer", 
                         "Total Cost": 12.25, 
                         "Schema": "pg_temp_2"
                        }
                       ], 
                       "Node Type": "Hash", 
                       "Plan Rows": 2, 
                       "Parallel Aware": false, 
                       "Output": [
                        "ship_mode_1.sm_ship_mode_sk"
                       ], 
                       "Parent Relationship": "Inner", 
                       "Plan Width": 4, 
                       "Total Cost": 12.25
                      }
                     ], 
                     "Node Type": "Hash Join", 
                     "Plan Rows": 3, 
                     "Join Type": "Inner", 
                     "Parallel Aware": false, 
                     "Output": [
                      "catalog_sales.cs_sales_price", 
                      "catalog_sales.cs_quantity", 
                      "catalog_sales.cs_net_paid_inc_tax", 
                      "catalog_sales.cs_warehouse_sk", 
                      "catalog_sales.cs_sold_date_sk", 
                      "catalog_sales.cs_sold_time_sk"
                     ], 
                     "Parent Relationship": "Outer", 
                     "Plan Width": 44, 
                     "Total Cost": 25.88
                    }, 
                    {
                     "Index Cond": "(warehouse_1.w_warehouse_sk = catalog_sales.cs_warehouse_sk)", 
                     "Startup Cost": 0.14, 
                     "Scan Direction": "Forward", 
                     "Plan Width": 352, 
                     "Node Type": "Index Scan", 
                     "Total Cost": 0.33, 
                     "Plan Rows": 1, 
                     "Relation Name": "warehouse", 
                     "Alias": "warehouse_1", 
                     "Parallel Aware": false, 
                     "Output": [
                      "warehouse_1.w_warehouse_sk", 
                      "warehouse_1.w_warehouse_id", 
                      "warehouse_1.w_warehouse_name", 
                      "warehouse_1.w_warehouse_sq_ft", 
                      "warehouse_1.w_street_number", 
                      "warehouse_1.w_street_name", 
                      "warehouse_1.w_street_type", 
                      "warehouse_1.w_suite_number", 
                      "warehouse_1.w_city", 
                      "warehouse_1.w_county", 
                      "warehouse_1.w_state", 
                      "warehouse_1.w_zip", 
                      "warehouse_1.w_country", 
                      "warehouse_1.w_gmt_offset"
                     ], 
                     "Parent Relationship": "Inner", 
                     "Schema": "pg_temp_2", 
                     "Index Name": "warehouse_pkey"
                    }
                   ], 
                   "Node Type": "Nested Loop", 
                   "Plan Rows": 1, 
                   "Join Type": "Inner", 
                   "Parallel Aware": false, 
                   "Output": [
                    "catalog_sales.cs_sales_price", 
                    "catalog_sales.cs_quantity", 
                    "catalog_sales.cs_net_paid_inc_tax", 
                    "catalog_sales.cs_sold_date_sk", 
                    "catalog_sales.cs_sold_time_sk", 
                    "warehouse_1.w_warehouse_name", 
                    "warehouse_1.w_warehouse_sq_ft", 
                    "warehouse_1.w_city", 
                    "warehouse_1.w_county", 
                    "warehouse_1.w_state", 
                    "warehouse_1.w_country"
                   ], 
                   "Parent Relationship": "Outer", 
                   "Plan Width": 388, 
                   "Total Cost": 26.9
                  }, 
                  {
                   "Index Cond": "(date_dim_1.d_date_sk = catalog_sales.cs_sold_date_sk)", 
                   "Startup Cost": 0.15, 
                   "Scan Direction": "Forward", 
                   "Plan Width": 12, 
                   "Node Type": "Index Scan", 
                   "Total Cost": 0.34, 
                   "Plan Rows": 1, 
                   "Relation Name": "date_dim", 
                   "Alias": "date_dim_1", 
                   "Parallel Aware": false, 
                   "Filter": "(date_dim_1.d_year = 2000)", 
                   "Output": [
                    "date_dim_1.d_date_sk", 
                    "date_dim_1.d_date_id", 
                    "date_dim_1.d_date", 
                    "date_dim_1.d_month_seq", 
                    "date_dim_1.d_week_seq", 
                    "date_dim_1.d_quarter_seq", 
                    "date_dim_1.d_year", 
                    "date_dim_1.d_dow", 
                    "date_dim_1.d_moy", 
                    "date_dim_1.d_dom", 
                    "date_dim_1.d_qoy", 
                    "date_dim_1.d_fy_year", 
                    "date_dim_1.d_fy_quarter_seq", 
                    "date_dim_1.d_fy_week_seq", 
                    "date_dim_1.d_day_name", 
                    "date_dim_1.d_quarter_name", 
                    "date_dim_1.d_holiday", 
                    "date_dim_1.d_weekend", 
                    "date_dim_1.d_following_holiday", 
                    "date_dim_1.d_first_dom", 
                    "date_dim_1.d_last_dom", 
                    "date_dim_1.d_same_day_ly", 
                    "date_dim_1.d_same_day_lq", 
                    "date_dim_1.d_current_day", 
                    "date_dim_1.d_current_week", 
                    "date_dim_1.d_current_month", 
                    "date_dim_1.d_current_quarter", 
                    "date_dim_1.d_current_year"
                   ], 
                   "Parent Relationship": "Inner", 
                   "Schema": "pg_temp_2", 
                   "Index Name": "date_dim_pkey"
                  }
                 ], 
                 "Node Type": "Nested Loop", 
                 "Plan Rows": 1, 
                 "Join Type": "Inner", 
                 "Parallel Aware": false, 
                 "Output": [
                  "catalog_sales.cs_sales_price", 
                  "catalog_sales.cs_quantity", 
                  "catalog_sales.cs_net_paid_inc_tax", 
                  "catalog_sales.cs_sold_time_sk", 
                  "warehouse_1.w_warehouse_name", 
                  "warehouse_1.w_warehouse_sq_ft", 
                  "warehouse_1.w_city", 
                  "warehouse_1.w_county", 
                  "warehouse_1.w_state", 
                  "warehouse_1.w_country", 
                  "date_dim_1.d_year", 
                  "date_dim_1.d_moy"
                 ], 
                 "Parent Relationship": "Outer", 
                 "Plan Width": 392, 
                 "Total Cost": 27.24
                }, 
                {
                 "Index Cond": "(time_dim_1.t_time_sk = catalog_sales.cs_sold_time_sk)", 
                 "Startup Cost": 0.14, 
                 "Scan Direction": "Forward", 
                 "Plan Width": 4, 
                 "Node Type": "Index Scan", 
                 "Total Cost": 0.34, 
                 "Plan Rows": 1, 
                 "Relation Name": "time_dim", 
                 "Alias": "time_dim_1", 
                 "Parallel Aware": false, 
                 "Filter": "((time_dim_1.t_time >= 30938) AND (time_dim_1.t_time <= 59738))", 
                 "Output": [
                  "time_dim_1.t_time_sk", 
                  "time_dim_1.t_time_id", 
                  "time_dim_1.t_time", 
                  "time_dim_1.t_hour", 
                  "time_dim_1.t_minute", 
                  "time_dim_1.t_second", 
                  "time_dim_1.t_am_pm", 
                  "time_dim_1.t_shift", 
                  "time_dim_1.t_sub_shift", 
                  "time_dim_1.t_meal_time"
                 ], 
                 "Parent Relationship": "Inner", 
                 "Schema": "pg_temp_2", 
                 "Index Name": "time_dim_pkey"
                }
               ], 
               "Node Type": "Nested Loop", 
               "Plan Rows": 1, 
               "Join Type": "Inner", 
               "Parallel Aware": false, 
               "Output": [
                "warehouse_1.w_warehouse_name", 
                "warehouse_1.w_warehouse_sq_ft", 
                "warehouse_1.w_city", 
                "warehouse_1.w_county", 
                "warehouse_1.w_state", 
                "warehouse_1.w_country", 
                "date_dim_1.d_year", 
                "date_dim_1.d_moy", 
                "catalog_sales.cs_sales_price", 
                "catalog_sales.cs_quantity", 
                "catalog_sales.cs_net_paid_inc_tax"
               ], 
               "Parent Relationship": "Outer", 
               "Plan Width": 388, 
               "Total Cost": 27.59
              }
             ], 
             "Sort Key": [
              "warehouse_1.w_warehouse_name", 
              "warehouse_1.w_warehouse_sq_ft", 
              "warehouse_1.w_city", 
              "warehouse_1.w_county", 
              "warehouse_1.w_state", 
              "warehouse_1.w_country"
             ], 
             "Node Type": "Sort", 
             "Plan Rows": 1, 
             "Parallel Aware": false, 
             "Output": [
              "warehouse_1.w_warehouse_name", 
              "warehouse_1.w_warehouse_sq_ft", 
              "warehouse_1.w_city", 
              "warehouse_1.w_county", 
              "warehouse_1.w_state", 
              "warehouse_1.w_country", 
              "date_dim_1.d_year", 
              "date_dim_1.d_moy", 
              "catalog_sales.cs_sales_price", 
              "catalog_sales.cs_quantity", 
              "catalog_sales.cs_net_paid_inc_tax"
             ], 
             "Parent Relationship": "Outer", 
             "Plan Width": 388, 
             "Total Cost": 27.61
            }
           ], 
           "Group Key": [
            "warehouse_1.w_warehouse_name", 
            "warehouse_1.w_warehouse_sq_ft", 
            "warehouse_1.w_city", 
            "warehouse_1.w_county", 
            "warehouse_1.w_state", 
            "warehouse_1.w_country", 
            "date_dim_1.d_year"
           ], 
           "Node Type": "Aggregate", 
           "Strategy": "Sorted", 
           "Plan Rows": 1, 
           "Parallel Aware": false, 
           "Output": [
            "warehouse_1.w_warehouse_name", 
            "warehouse_1.w_warehouse_sq_ft", 
            "warehouse_1.w_city", 
            "warehouse_1.w_county", 
            "warehouse_1.w_state", 
            "warehouse_1.w_country", 
            "'BOXBUNDLES,ZOUROS'::text", 
            "date_dim_1.d_year", 
            "sum(CASE WHEN (date_dim_1.d_moy = 1) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 2) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 3) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 4) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 5) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 6) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 7) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 8) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 9) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 10) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 11) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 12) THEN (catalog_sales.cs_sales_price * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 1) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 2) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 3) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 4) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 5) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 6) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 7) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 8) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 9) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 10) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 11) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)", 
            "sum(CASE WHEN (date_dim_1.d_moy = 12) THEN (catalog_sales.cs_net_paid_inc_tax * (catalog_sales.cs_quantity)::numeric) ELSE '0'::numeric END)"
           ], 
           "Parent Relationship": "Member", 
           "Plan Width": 1152, 
           "Total Cost": 27.93
          }
         ], 
         "Node Type": "Append", 
         "Plan Rows": 2, 
         "Parallel Aware": false, 
         "Parent Relationship": "Outer", 
         "Plan Width": 1152, 
         "Total Cost": 55.89
        }
       ], 
       "Sort Key": [
        "warehouse.w_warehouse_name", 
        "warehouse.w_warehouse_sq_ft", 
        "warehouse.w_city", 
        "warehouse.w_county", 
        "warehouse.w_state", 
        "warehouse.w_country", 
        "('BOXBUNDLES,ZOUROS'::text)", 
        "date_dim.d_year"
       ], 
       "Node Type": "Sort", 
       "Plan Rows": 2, 
       "Parallel Aware": false, 
       "Output": [
        "warehouse.w_warehouse_name", 
        "warehouse.w_warehouse_sq_ft", 
        "warehouse.w_city", 
        "warehouse.w_county", 
        "warehouse.w_state", 
        "warehouse.w_country", 
        "('BOXBUNDLES,ZOUROS'::text)", 
        "date_dim.d_year", 
        "(sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))", 
        "(sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))"
       ], 
       "Parent Relationship": "Outer", 
       "Plan Width": 1152, 
       "Total Cost": 55.9
      }
     ], 
     "Group Key": [
      "warehouse.w_warehouse_name", 
      "warehouse.w_warehouse_sq_ft", 
      "warehouse.w_city", 
      "warehouse.w_county", 
      "warehouse.w_state", 
      "warehouse.w_country", 
      "('BOXBUNDLES,ZOUROS'::text)", 
      "date_dim.d_year"
     ], 
     "Node Type": "Aggregate", 
     "Strategy": "Sorted", 
     "Plan Rows": 2, 
     "Parallel Aware": false, 
     "Output": [
      "warehouse.w_warehouse_name", 
      "warehouse.w_warehouse_sq_ft", 
      "warehouse.w_city", 
      "warehouse.w_county", 
      "warehouse.w_state", 
      "warehouse.w_country", 
      "('BOXBUNDLES,ZOUROS'::text)", 
      "date_dim.d_year", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum(((sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))", 
      "sum((sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)))"
     ], 
     "Parent Relationship": "Outer", 
     "Plan Width": 1536, 
     "Total Cost": 56.44
    }
   ], 
   "Node Type": "Limit", 
   "Plan Rows": 2, 
   "Parallel Aware": false, 
   "Output": [
    "warehouse.w_warehouse_name", 
    "warehouse.w_warehouse_sq_ft", 
    "warehouse.w_city", 
    "warehouse.w_county", 
    "warehouse.w_state", 
    "warehouse.w_country", 
    "('BOXBUNDLES,ZOUROS'::text)", 
    "date_dim.d_year", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum(((sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_sales_price * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END)) / (warehouse.w_warehouse_sq_ft)::numeric)))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 1) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 2) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 3) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 4) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 5) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 6) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 7) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 8) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 9) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 10) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 11) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))", 
    "(sum((sum(CASE WHEN (date_dim.d_moy = 12) THEN (web_sales.ws_net_paid_inc_tax * (web_sales.ws_quantity)::numeric) ELSE '0'::numeric END))))"
   ], 
   "Plan Width": 1536, 
   "Total Cost": 56.44
  }
 }
]